import{W as t,f as o,r as s,c as n,a as e,e as i,d as u}from"./index-133d9ede.js";function p(t){if(t.nuPopupHandled)return;const o=function(t){const o=[];for(;t;){const s=t.NuAction;if(s&&s.popup){const t=s.popup.host;t&&o.push(t)}t=t.parentNode||t.host}return o}(t.target);u(this===window?document:this,"[is-popup]").forEach((s=>{o.includes(s)||(s.nuPopup&&s.nuPopup.close(),t.nuPopupHandled=!0)}))}function h(t){t.nuPopupEventsBinded||["mousedown","touchstart","focusin"].forEach((o=>{t.addEventListener(o,p.bind(t),{passive:!0}),t.nuPopupEventsBinded=!0}))}h(window);export default class extends t{static get params(){return{provideValue:!1,contextValue:!1,linkValue:!1,linkHostValue:!1}}init(){this.host.nuPopup=this,super.init(),this.setMod("popup",!0),this.on("mousedown",(t=>{t.stopPropagation()})),this.on("click",(t=>{t.stopPropagation()})),this.on("keydown",(t=>{const{button:o}=this;"Escape"===t.key&&(o&&(this.close(),o.host.focus()),t.stopPropagation()),"Enter"!==t.key&&" "!==t.key||t.stopPropagation()})),this.on("mouseenter",(()=>{this.button&&this.button.host.style.setProperty("--local-mark-color","transparent")})),this.on("mouseleave",(()=>{this.button&&this.button.host.style.removeProperty("--local-mark-color")}))}connected(){const{host:t}=this,o=t.nuContext.$shadowRoot;o&&h(o),this.setContext("popup",this),this.provideAction("close",(t=>{this.close(),t&&this.doAction("close")})),this.linkContext("button",((t,o)=>{o&&o.unlinkPopup(this),t&&t.linkPopup(this)})),this.close(!0)}disconnected(){this.close(),this.button&&this.button.unlinkPopup(this),delete this.button}open(){const{host:t}=this;function u(){const o=n(t,"[is-current]");if(o&&(e(t,o),i(o)))return o.focus(),!0;let s;return s=i(t)?t:t.nuDeepQuery('input, [tabindex]:not([tabindex="-1"]):not([disabled])'),s&&i(s)?(s.focus(),!0):void 0}this.isOpen||(t.nuUse("fixate").then((t=>t.start())),this.openEffect(!0),this.button&&this.button.host.nuSetAria("expanded",!0),o(t),this.emit("open",null),this.emit("toggle",null),s(t,!0),u()||setTimeout(u,100))}close(t=!1){const{host:o}=this;if(!this.isOpen)return;if(o.nuUse("fixate").then((t=>t.end())),this.openEffect(!1),t)return;this.button&&(this.button.set(!1),this.button.host.focus()),o.style.removeProperty("--transform"),this.emit("close",null),this.emit("toggle",null),s(o,!0);const n=o.nuDeepQuery("[is-popup]");n&&n.nuPopup.close()}openEffect(t){this.host.hidden=!t}get isOpen(){return!this.host.hidden}}
