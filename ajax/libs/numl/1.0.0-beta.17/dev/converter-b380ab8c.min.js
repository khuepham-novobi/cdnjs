import{W as WidgetBehavior,u as error,h}from"./index-da59e341.js";class ConverterBehavior extends WidgetBehavior{static get converter(){}constructor(e){super(e),this.container=null,this.observe=null}connected(){super.connected(),setTimeout(()=>this.initConverter())}initConverter(){if(this.ref!==this.host)return;const{host:e}=this,t=this.ref=e.querySelector("textarea, pre");if(e.nuIsShadowAllowed?e.attachShadow({mode:"open"}):this.setMod("host",!0),!t)return void error("converter: textarea tag required",this.host);e.nuRef=t,t.setAttribute("role","none"),t.setAttribute("aria-hidden","true");const r=this.container=this.createContainer();e.nuQueryChildren("*:not(pre):not(textarea)").forEach(e=>{e.parentNode.removeChild(e)}),(e.nuShadow||e).appendChild(r);const n=this.observe=this.createObserveListener(t,r,this.constructor.converter);new MutationObserver(()=>n()).observe(t,{characterData:!1,attributes:!1,childList:!0,subtree:!1}),n()}createContainer(){return h("nu-block")}createObserveListener(e,t,r){return()=>{const n=this.prepareContent("TEXTAREA"===e.tagName?e.textContent:e.innerHTML);this.apply(t,n,r),this.postHandler(t)}}apply(e,t,r){}prepareContent(e){return e||""}postHandler(e){}}export{ConverterBehavior as C};