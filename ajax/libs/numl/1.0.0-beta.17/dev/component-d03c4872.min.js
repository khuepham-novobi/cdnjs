import{F as extractModule,W as WidgetBehavior,v as devMode,l as log,G as toCamelCase,i as isEqual}from"./index-da59e341.js";var Components={datepicker:()=>extractModule(import("./datepicker-50fdd9be.js")),dateinput:()=>extractModule(import("./dateinput-fa912301.js")),debugger:()=>extractModule(import("./debugger-04212ff4.js"))};class ComponentBehavior extends WidgetBehavior{static get params(){return{primary:!0,provideValue:!1,props:["host"]}}constructor(t,e){super(t,e);const o=Components[this.params.component||e.split(/\s/)[0]];o&&(this.componentPromise=o())}init(){this.props.type="date",super.init();const{host:t}=this;this.componentPromise.then(e=>{const o=this.isShadowAllowed?t.attachShadow({mode:"open"}):t;o===t&&this.setMod("host",!0),this.Component=e,devMode&&log("create component with state",this.componentProps),this.component=new e({target:o,props:this.componentProps}),this.component.$on("input",t=>{this.setValue(t.detail,!0),this.emit("input",t.detail),this.doActions(t.detail)})})}get componentProps(){const t=[...this.params.props].reduce((t,e)=>("lang"===e&&(e="locale"),t[toCamelCase(e)]=this[e],t),{});return this.params.props.includes("lang")&&(t.locale=t.locale||"en"),t}changed(t,e){if(super.changed(t,e),"lang"===t&&(t="locale"),this.component){t in this.Component.prototype&&this.set({[t]:this[t]})}}set(t){return log("set component state",t),!("object"!=typeof t||!this.component)&&(this.component.$set(t),!0)}setValue(t,e){isEqual(t,this.value)||(super.setValue(t,e||!this.component),this.set({value:t}))}}export{ComponentBehavior as C};