import{w as warn,F as extractModule,W as WidgetBehavior,i as isEqual,d as deepQueryAll}from"./index-da59e341.js";const VALIDATORS={email:e=>extractModule(import("./index-7ef6987f.js").then(function(e){return e.i})).then(t=>!e||t.validate(e)),maxlength:(e,t)=>null==e||e.length<=Number(t),minlength:(e,t)=>null==e||e.length>=Number(t),required:e=>{switch(typeof e){case"string":return e.length>0;case"number":return!Number.isNaN(e);case"boolean":return!0;default:return null!=e}}};function checkErrors(e,t){const i=Object.keys(t),r={};return Object.keys(e).forEach(t=>{const i=e[t];"object"==typeof i&&i.$errors&&(r[t]=i.$errors)}),Promise.all(i.map(i=>{const r=t[i];if(!r)return!0;const s=Object.keys(r);return Promise.all(s.map(t=>{const s=r[t],n=VALIDATORS[t];return"function"==typeof s?s(e[i]):n?n(e[i],s):(warn("unknown validator",t),!0)})).then(e=>{return!e.every(e=>e)&&s.reduce((t,i,r)=>(e[r]||(t[i]=!0),t),{})})})).then(e=>i.reduce((t,i,r)=>(e[r]&&(t[i]=e[r]),t),r)).then(()=>{return!!Object.keys(r).length&&r})}function mergeObjects(e,t){return[e,t].reduce(function(e,t){return Object.keys(t).forEach(function(i){e[i]=t[i]}),e},{})}function isArray(e){return"[object Array]"==={}.toString.call(e)}function isJsonObject(e){return!(isArray(e)||"object"!=typeof e||!e||e instanceof Blob||e instanceof Date)}function isAppendFunctionPresent(e){return"function"==typeof e.append}function isGlobalFormDataPresent(){return"function"==typeof FormData}function getDefaultFormData(){if(isGlobalFormDataPresent())return new FormData}function convert(e,t){if(t&&t.initialFormData){if(!isAppendFunctionPresent(t.initialFormData))throw"initialFormData must have an append function."}else if(!isGlobalFormDataPresent())throw"This environment does not have global form data. options.initialFormData must be specified.";let i=mergeObjects({initialFormData:getDefaultFormData(),showLeafArrayIndexes:!0,includeNullValues:!1,mapping:function(e){return"boolean"==typeof e?+e?"1":"0":e}},t||{});return convertRecursively(e,i,i.initialFormData)}function convertRecursively(e,t,i,r){let s=0;for(let n in e){if(e.hasOwnProperty(n)){let a=r||n,o=t.mapping(e[n]);if(r&&isJsonObject(e)&&(a=r+"["+n+"]"),r&&isArray(e)&&(a=isArray(o)||t.showLeafArrayIndexes?r+"["+s+"]":r+"[]"),isArray(o)||isJsonObject(o))convertRecursively(o,t,i,a);else if(o instanceof FileList)for(let e=0;e<o.length;e++)i.append(a+"["+e+"]",o.item(e));else o instanceof Blob?i.append(a,o,o.name):o instanceof Date?i.append(a,o.toISOString()):(null===o&&t.includeNullValues||null!==o)&&void 0!==o&&i.append(a,o)}s++}return i}class FormBehavior extends WidgetBehavior{static get params(){return{input:!0,primary:!0,provideValue:!1,contextValue:!1}}init(){this.value={},this.validators={},this.checks={},this.fields={},super.init();const{host:e}=this;e.nuSetMod("form",!0),this.value||(this.value={}),this.setContext("form",this),this.context.value=null,this.on("nu-blur",e=>{const t=e.detail;this.fields[t]&&this.verifyData(t)}),this.provideAction("submit",()=>{this.verifyData().then(e=>{e&&(this.emit("input","formdata"===this.type?convert(this.value):{...this.value||{}}),this.control())})})}verifyData(e){return(e?Promise.resolve():this.setDirty()).then(()=>this.validate()).then(t=>(this.setErrorProps(e),t))}connected(){super.connected(),setTimeout(()=>this.validate(!0))}setValue(e,t){if("object"!=typeof e)return;const i=JSON.stringify(e);JSON.stringify(e)!==this._serializedValue&&e&&(this._serializedValue=i,this.value=e,t||this.validate().then(e=>{e&&this.emit("input",this.value)}),this.control())}setFieldValue(e,t){const{fields:i}=this;isEqual(this.value[e],t)||(null!=t?(this.value[e]=t,i[e]&&this.resetFieldWarning(e)):delete this.value[e],this.validate())}registerCheck(e,t,i,r){this.validators[e]||(this.validators[e]={}),this.checks[e]||(this.checks[e]={}),this.validators[e][i]=r,this.checks[e][i]=t}registerField(e,t){this.fields[e]=t}unregisterCheck(e,t){delete this.validators[e][t],delete this.checks[e][t]}unregisterField(e){delete this.fields[e]}connectForm(){super.connectForm();const e=this.validators;this.validators=Object.create(this.form.validators),Object.keys(e).forEach(t=>{this.validators[t]=e[t]})}validate(e){return checkErrors(this.value,this.validators).then(e=>(e?this.value.$errors=e:delete this.value.$errors,!e))}setDirty(){const e=deepQueryAll(this.host,"[is-form]");return this.dirty=!0,Promise.all(e.map(e=>e.use("form").then(e=>e.setDirty().then(()=>e.validate()).then(()=>e.setErrorProps()))))}setErrorProps(e){const t=Object.keys(this.validators),i=this.value.$errors||{},r=this.fields,s=this.checks;t.forEach(t=>{if(e&&e!==t)return;const n=Object.keys(this.validators[t]),a=s[t];let o=!1;for(let e of n)i&&i[t]&&i[t][e]&&!o?(o=!0,a[e].setValidity(!1)):a[e].setValidity(!0);r[t]&&r[t].setValidity(!o)})}resetFieldWarning(e){const t=this.fields[e],i=Object.keys(this.validators[e]||{});for(let t of i){const i=`--check-${e}-${t}`;this.host.style.setProperty(i,"none")}t&&t.setValidity(!0)}}export default FormBehavior;