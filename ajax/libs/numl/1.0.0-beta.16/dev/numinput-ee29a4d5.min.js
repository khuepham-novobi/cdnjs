import{y as getFloatFromAttr,i as isEqual}from"./index-a5c9c958.js";import{n as numberFormat}from"./number-38ee0532.js";import InputBehavior from"./input-f89d48e7.js";class NumInputBehavior extends InputBehavior{init(){this.props.value=(t=>{null==t?this.setValue(null):this.setValue(getFloatFromAttr(t,0),!0)}),this.props.min=(t=>getFloatFromAttr(t,Number.MIN_SAFE_INTEGER)),this.props.max=(t=>getFloatFromAttr(t,Number.MAX_SAFE_INTEGER)),this.props.type="number",super.init();const{ref:t}=this;t.type="number",t.inputMode="decimal",t.value=this.value,t.addEventListener("focus",e=>{try{t.select()}catch(t){}})}changed(t,e){super.changed(t,e),this.declareProps()}setValue(t,e){null!=t&&(t=getFloatFromAttr(t)),null!=t&&(this.value>this.max?t=this.max:this.value<this.min&&(t=this.min)),isEqual(this.value,t)||(this.value=t,this.ref&&(this.ref.value=null==t?"":t),e||this.emit("input",this.value),this.declareProps())}declareProps(){let t=null!=this.value?`"${numberFormat(this.value,this.locale,this)}"`:`"${this.placeholder}"`;this.host.style.setProperty("--value",t)}}export default NumInputBehavior;