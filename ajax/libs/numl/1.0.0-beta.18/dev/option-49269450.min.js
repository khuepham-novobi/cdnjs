import{W as WidgetBehavior,i as isEqual}from"./index-0338ddf6.js";class OptionBehavior extends WidgetBehavior{static get params(){return{provideValue:!1}}init(){this.props.disabled=(t=>{const i=null!=t;return i?this.unlinkListBox():this.linkListBox(),i}),this.forceLinkValue(),this.host.nuOption=this,super.init(),this.linkContext("listbox",t=>{this.listbox&&this.removeOption(),this.listbox=t,t&&this.hasValue&&(this.addOption(t),this.setCurrent())},!1),this.on("click",()=>{this.disabled||this.doAction("input",this.value)})}disconnected(){super.disconnected(),this.listbox&&this.hasValue&&this.removeOption()}fromContextValue(t){this.log("link context value",t),this.listbox&&(this.addOption(),this.setCurrent())}setValue(t,i){this.unlinkListBox(),super.setValue(t,i),this.linkListBox()}linkListBox(){this.listbox&&this.hasValue&&!this.disabled&&(this.addOption(),this.setCurrent())}unlinkListBox(){this.listbox&&this.hasValue&&this.removeOption()}addOption(t=this.listbox){t.addOption(this)}setCurrent(){const t=!!this.listbox&&(this.listbox.multiple?(this.listbox.value||[]).includes(this.value):isEqual(this.value,this.listbox.value)),i=!!this.listbox&&this.listbox.current===this.value;this.setMod("current",i),this.setMod("pressed",t),this.setAria("selected",t),this.listbox&&i&&this.listbox.setAria("activedescendant",this.uniqId)}removeOption(){this.listbox&&this.listbox.removeOption(this)}}export default OptionBehavior;