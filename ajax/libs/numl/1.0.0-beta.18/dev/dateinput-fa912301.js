import { S as SvelteComponent, i as init, s as safe_not_equal, e as element, a as space, b as set_custom_element_data, c as insert, d as append, l as listen, n as noop, f as detach, k as createEventDispatcher } from './index-f7dc185b.js';
import { s as startOfDay } from './index-9b2056ab.js';

/* src/components/dateinput.svelte generated by Svelte v3.31.2 */

function create_fragment(ctx) {
	let nu_flex;
	let nu_value;
	let t0;
	let nu_icon;
	let t1;
	let nu_popup;
	let nu_datepicker;
	let mounted;
	let dispose;

	return {
		c() {
			nu_flex = element("nu-flex");
			nu_value = element("nu-value");
			t0 = space();
			nu_icon = element("nu-icon");
			t1 = space();
			nu_popup = element("nu-popup");
			nu_datepicker = element("nu-datepicker");
			set_custom_element_data(nu_value, "grow", "1");
			set_custom_element_data(nu_value, "placeholder", /*placeholder*/ ctx[0]);
			set_custom_element_data(nu_icon, "name", "calendar-outline");
			set_custom_element_data(nu_icon, "move", "0 (1x / -4)");
			set_custom_element_data(nu_flex, "gap", "");
			set_custom_element_data(nu_datepicker, "value", /*value*/ ctx[2]);
			set_custom_element_data(nu_datepicker, "link-value", "");
			set_custom_element_data(nu_datepicker, "mode", /*mode*/ ctx[1]);
			set_custom_element_data(nu_datepicker, "begin", /*begin*/ ctx[3]);
			set_custom_element_data(nu_datepicker, "end", /*end*/ ctx[4]);
			set_custom_element_data(nu_popup, "width", "18 min-content");
			set_custom_element_data(nu_popup, "padding", "");
		},
		m(target, anchor) {
			insert(target, nu_flex, anchor);
			append(nu_flex, nu_value);
			append(nu_flex, t0);
			append(nu_flex, nu_icon);
			insert(target, t1, anchor);
			insert(target, nu_popup, anchor);
			append(nu_popup, nu_datepicker);

			if (!mounted) {
				dispose = listen(nu_datepicker, "input", /*handleInput*/ ctx[5]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*placeholder*/ 1) {
				set_custom_element_data(nu_value, "placeholder", /*placeholder*/ ctx[0]);
			}

			if (dirty & /*value*/ 4) {
				set_custom_element_data(nu_datepicker, "value", /*value*/ ctx[2]);
			}

			if (dirty & /*mode*/ 2) {
				set_custom_element_data(nu_datepicker, "mode", /*mode*/ ctx[1]);
			}

			if (dirty & /*begin*/ 8) {
				set_custom_element_data(nu_datepicker, "begin", /*begin*/ ctx[3]);
			}

			if (dirty & /*end*/ 16) {
				set_custom_element_data(nu_datepicker, "end", /*end*/ ctx[4]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(nu_flex);
			if (detaching) detach(t1);
			if (detaching) detach(nu_popup);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let isRange;
	let { placeholder } = $$props;
	let { mode } = $$props;
	let { value } = $$props;
	let { begin } = $$props;
	let { end } = $$props;
	let { host } = $$props;
	const dispatch = createEventDispatcher();

	let fromDate = value && startOfDay(Array.isArray(value)
	? value[0]
	: new Date(String(value).split("|")[0]));

	let toDate = value && startOfDay(Array.isArray(value)
	? value[1] || value[0]
	: new Date(String(value).split("|")[1] || String(value).split("|")[0]));

	function handleInput(event) {
		const detail = event.detail;

		if (isRange) {
			fromDate = detail[0];
			toDate = detail[1];
		} else {
			fromDate = toDate = detail;
		}
	}

	$$self.$$set = $$props => {
		if ("placeholder" in $$props) $$invalidate(0, placeholder = $$props.placeholder);
		if ("mode" in $$props) $$invalidate(1, mode = $$props.mode);
		if ("value" in $$props) $$invalidate(2, value = $$props.value);
		if ("begin" in $$props) $$invalidate(3, begin = $$props.begin);
		if ("end" in $$props) $$invalidate(4, end = $$props.end);
		if ("host" in $$props) $$invalidate(6, host = $$props.host);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*mode*/ 2) {
			 $$invalidate(7, isRange = mode === "range");
		}

		if ($$self.$$.dirty & /*host, isRange*/ 192) {
			 host.setAttribute("type", isRange ? "daterange" : "date");
		}
	};

	return [placeholder, mode, value, begin, end, handleInput, host, isRange];
}

class Dateinput extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			placeholder: 0,
			mode: 1,
			value: 2,
			begin: 3,
			end: 4,
			host: 6
		});
	}
}

export default Dateinput;
