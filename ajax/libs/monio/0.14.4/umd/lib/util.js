/*! Monio: util.js
    v0.14.4 (c) 2021 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
!function UMD(n,e,t,i){"function"==typeof define&&define.amd?(t=Object.keys(t).map((n=>n.replace(/^\.\//,""))),define(n,t,i)):"undefined"!=typeof module&&module.exports?(t=Object.keys(t).map((n=>require(n))),module.exports=i(...t)):(t=Object.values(t).map((n=>e[n])),e[n]=i(...t))}("MonioUtil","undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:new Function("return this")(),{},(function DEF(){"use strict";let n={};function getMonadFlatMap(n){var e=n["flatMap"in n?"flatMap":"chain"in n?"chain":"bind"];return isFunction(e)&&e!==Function.prototype.bind&&e!==Array.prototype.flatMap?e:void 0}function isFunction(n){return!(!n||"function"!=typeof n)}function isPromise(n){return!(!n||!isFunction(n.then))}function isMonad(n){return!(!n||"object"!=typeof n&&!isFunction(n)||!isFunction(getMonadFlatMap(n)))}function curry(n,e=n.length){return function nextCurried(t){return(...i)=>{var o=[...t,...i];return o.length>=e?n(...o):nextCurried(o)}}([])}return n={getMonadFlatMap:getMonadFlatMap,isFunction:isFunction,isPromise:isPromise,isMonad:isMonad,curry:curry},n.getMonadFlatMap=getMonadFlatMap,n.isFunction=isFunction,n.isPromise=isPromise,n.isMonad=isMonad,n.curry=curry,n}));