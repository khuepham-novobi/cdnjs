/*! Monio: io.mjs
    v0.13.1 (c) 2021 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
import{isPromise}from"./lib/util.mjs";import Either from"./either.mjs";var brand={};export default Object.assign(IO,{of:of,is:is,do:$do,doEither:doEither});export{IO as RIO};export{IO as Reader};function IO(t){var n={map:function map(n){return IO((r=>{var e=t(r);return isPromise(e)?e.then(n):n(e)}))},chain:chain,flatMap:chain,bind:chain,ap:function ap(n){return n.map(t)},concat:function concat(n){return IO((r=>{var e=t(r),i=n.run(r);return isPromise(e)||isPromise(i)?Promise.all([e,i]).then((([t,n])=>t.concat(n))):e.concat(i)}))},run:function run(n){return t(n)},_inspect:function _inspect(){return`${n[Symbol.toStringTag]}(${"function"==typeof t?t.name||"anonymous function":t&&"function"==typeof t._inspect?t._inspect():val})`},_is:function _is(t){return t===brand},[Symbol.toStringTag]:"IO"};return n;function chain(n){return IO((r=>{var e=t(r);return isPromise(e)?e.then(n).then((t=>t.run(r))):n(e).run(r)}))}}function of(t){return IO((()=>t))}function is(t){return t&&"function"==typeof t._is&&t._is(brand)}function processNext(t,n,r,e=!1){return new Promise((async function c(i,o){try{let a=monadFlatMap(isPromise(n)?await n:n,(n=>IO((()=>t(n).then(i,o)))));IO.is(a)?await a.run(r):e&&Either.Left.is(a)?o(a):i(a)}catch(t){o(t)}}))}function $do(t){return IO((n=>{var r=getIterator(t,n);return async function next(t){var e=r.next(isPromise(t)?await t:t);return(e=isPromise(e)?await e:e).done?e.value:processNext(next,e.value,n,!1)}()}))}function doEither(t){return IO((n=>{var r=getIterator(t,n);return async function next(t){try{t=isPromise(t)?await t:t;let e=Either.Left.is(t)?t.fold((t=>r.throw(t)),(()=>{})):r.next(t);e=isPromise(e)?await e:e;let i=e.done&&isPromise(e.value)?await e.value:e.value;if(e.done){if(Either.Left.is(i))throw i;return Either.Right.is(i)?i:Either.Right(i)}return processNext(next,i,n,!0).catch(next)}catch(t){throw Either.Left.is(t)?t:Either.Left(t)}}()}))}function getIterator(t,n){return"function"==typeof t?t(n):t&&"object"==typeof t&&"function"==typeof t.next?t:void 0}function monadFlatMap(t,n){return t["flatMap"in t?"flatMap":"chain"in t?"chain":"bind"](n)}