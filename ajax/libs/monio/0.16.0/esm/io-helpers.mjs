/*! Monio: io-helpers.mjs
    v0.16.0 (c) 2021 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
import{isFunction,isPromise,isMonad}from"./lib/util.mjs";import IO from"./io.mjs";import Maybe from"./maybe.mjs";import Either from"./either.mjs";var returnedValues=new WeakSet;export default{log:log,getReader:getReader,applyIO:applyIO,doIO:doIO,doIOBind:doIOBind,listFilterInIO:listFilterInIO,listFilterOutIO:listFilterOutIO,listConcatIO:listConcatIO,iif:iif,elif:elif,els:els,iNot:iNot,iReturn:iReturn,wasReturned:wasReturned};export{log};export{getReader};export{applyIO};export{doIO};export{doIOBind};export{listFilterInIO};export{listFilterOutIO};export{listConcatIO};export{iif};export{elif};export{els};export{iNot};export{iReturn};export{wasReturned};function log(...t){return IO((()=>console.log(...t)))}function getReader(){return IO((t=>t))}function applyIO(t,e){return IO((()=>t.run(e)))}function doIO(t,...e){return e.length>0?IO((r=>IO.do(t(r,...e)).run(r))):IO.do(t)}function doIOBind(t,e){var r=IO((()=>IO.do(t).run(e)));return(...i)=>i.length>0?IO((()=>IO.do(t(e,...i)).run(e))):r}function listFilterInIO(t,e){return listConcatIO(e.map((e=>t(e).map((t=>t?[e]:[])))))}function listFilterOutIO(t,e){return listFilterInIO(iNot(predictateIO),e)}function listConcatIO(t){return t.reduce(((t,e)=>t.concat(e)),IO.of([]))}function iif(t,e,...r){return IO((i=>liftIO(i,t).chain((function doThens(t){return t?(Array.isArray(e)?e:[e]).reduce(((t,e)=>t.chain((t=>liftIO(i,t).chain((t=>returnedValues.has(t)?IO.of(t):liftIO(i,e)))))),IO.of()).chain((e=>liftIO(i,e).chain((e=>IO.of(returnedValues.has(e)?e:t))))):IO.of(t)})).chain(function doNextElse(t){return e=>!e&&t.length>0?liftIO(i,t[0]).chain(doNextElse(t.slice(1))):IO.of(e)}(r)).run(i)))}function elif(t,e){return iif(t,e)}function els(t){return iif(!0,t)}function iReturn(t){return IO((e=>liftIO(e,t).map((t=>{var e={returned:t};return returnedValues.add(e),e})).run(e)))}function iNot(t){return IO((e=>liftIO(e,t).map((t=>!t)).run(e)))}function wasReturned(t){return returnedValues.has(t)}function liftIO(t,e){if(isMonad(e)){if(IO.is(e))return e;if(Either.Left.is(e)||Maybe.Nothing.is(e)){let t={returned:e};return returnedValues.add(t),IO.of(t)}{let t=e.chain(IO.of);return IO.is(t)?t:IO.of(e)}}return isFunction(e)?liftIO(t,e(t)):e&&"object"==typeof e&&isFunction(e.next)?IO.do(e):IO.of(e)}