define(["./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian2-bddc1162","./Transforms-ec27f304","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./ComponentDatatype-6d99a1ee","./GeometryAttribute-44fb48f1","./GeometryAttributes-4fcfcf40","./IndexDatatype-53503fee","./IntersectionTests-2626c9e9","./Plane-231f1723","./VertexFormat-7572c785","./arrayRemoveDuplicates-ebc732b0","./EllipsoidRhumbLine-c704bf4c","./EllipsoidGeodesic-30fae80b","./PolylinePipeline-fba5024c","./WallGeometryLibrary-09410f9b"],function(I,e,M,N,W,t,a,B,U,q,J,i,n,p,r,o,s,m,Y){"use strict";var Z=new N.Cartesian3,j=new N.Cartesian3,K=new N.Cartesian3,Q=new N.Cartesian3,X=new N.Cartesian3,$=new N.Cartesian3,ee=new N.Cartesian3,te=new N.Cartesian3;function d(e){var t=(e=I.defaultValue(e,I.defaultValue.EMPTY_OBJECT)).positions,a=e.maximumHeights,i=e.minimumHeights,n=I.defaultValue(e.vertexFormat,p.VertexFormat.DEFAULT),r=I.defaultValue(e.granularity,M.CesiumMath.RADIANS_PER_DEGREE),e=I.defaultValue(e.ellipsoid,N.Ellipsoid.WGS84);this._positions=t,this._minimumHeights=i,this._maximumHeights=a,this._vertexFormat=p.VertexFormat.clone(n),this._granularity=r,this._ellipsoid=N.Ellipsoid.clone(e),this._workerName="createWallGeometry";t=1+t.length*N.Cartesian3.packedLength+2;I.defined(i)&&(t+=i.length),I.defined(a)&&(t+=a.length),this.packedLength=t+N.Ellipsoid.packedLength+p.VertexFormat.packedLength+1}d.pack=function(e,t,a){var i;a=I.defaultValue(a,0);var n=e._positions,r=n.length;for(t[a++]=r,i=0;i<r;++i,a+=N.Cartesian3.packedLength)N.Cartesian3.pack(n[i],t,a);var o=e._minimumHeights,r=I.defined(o)?o.length:0;if(t[a++]=r,I.defined(o))for(i=0;i<r;++i)t[a++]=o[i];var s=e._maximumHeights;if(r=I.defined(s)?s.length:0,t[a++]=r,I.defined(s))for(i=0;i<r;++i)t[a++]=s[i];return N.Ellipsoid.pack(e._ellipsoid,t,a),a+=N.Ellipsoid.packedLength,p.VertexFormat.pack(e._vertexFormat,t,a),t[a+=p.VertexFormat.packedLength]=e._granularity,t};var c=N.Ellipsoid.clone(N.Ellipsoid.UNIT_SPHERE),f=new p.VertexFormat,y={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:c,vertexFormat:f,granularity:void 0};return d.unpack=function(e,t,a){t=I.defaultValue(t,0);for(var i,n,r=e[t++],o=new Array(r),s=0;s<r;++s,t+=N.Cartesian3.packedLength)o[s]=N.Cartesian3.unpack(e,t);if(0<(r=e[t++]))for(i=new Array(r),s=0;s<r;++s)i[s]=e[t++];if(0<(r=e[t++]))for(n=new Array(r),s=0;s<r;++s)n[s]=e[t++];var m=N.Ellipsoid.unpack(e,t,c);t+=N.Ellipsoid.packedLength;var l=p.VertexFormat.unpack(e,t,f),u=e[t+=p.VertexFormat.packedLength];return I.defined(a)?(a._positions=o,a._minimumHeights=i,a._maximumHeights=n,a._ellipsoid=N.Ellipsoid.clone(m,a._ellipsoid),a._vertexFormat=p.VertexFormat.clone(l,a._vertexFormat),a._granularity=u,a):(y.positions=o,y.minimumHeights=i,y.maximumHeights=n,y.granularity=u,new d(y))},d.fromConstantHeights=function(e){var t=(e=I.defaultValue(e,I.defaultValue.EMPTY_OBJECT)).positions,a=e.minimumHeight,i=e.maximumHeight,n=I.defined(a),r=I.defined(i);if(n||r)for(var o=t.length,s=n?new Array(o):void 0,m=r?new Array(o):void 0,l=0;l<o;++l)n&&(s[l]=a),r&&(m[l]=i);return new d({positions:t,maximumHeights:m,minimumHeights:s,ellipsoid:e.ellipsoid,vertexFormat:e.vertexFormat})},d.createGeometry=function(e){var t=e._positions,a=e._minimumHeights,i=e._maximumHeights,n=e._vertexFormat,r=e._granularity,o=e._ellipsoid,a=Y.WallGeometryLibrary.computePositions(o,t,i,a,r,!0);if(I.defined(a)){for(var s=a.bottomPositions,m=a.topPositions,r=a.numCorners,l=m.length,a=2*l,u=n.position?new Float64Array(a):void 0,p=n.normal?new Float32Array(a):void 0,d=n.tangent?new Float32Array(a):void 0,c=n.bitangent?new Float32Array(a):void 0,f=n.st?new Float32Array(a/3*2):void 0,y=0,g=0,h=0,C=0,v=0,b=te,A=ee,x=$,_=!0,E=0,w=1/((l/=3)-t.length+1),F=0;F<l;++F){var L,k,G=3*F,H=N.Cartesian3.fromArray(m,G,Z),V=N.Cartesian3.fromArray(s,G,j);n.position&&(u[y++]=V.x,u[y++]=V.y,u[y++]=V.z,u[y++]=H.x,u[y++]=H.y,u[y++]=H.z),n.st&&(f[v++]=E,f[v++]=0,f[v++]=E,f[v++]=1),(n.normal||n.tangent||n.bitangent)&&(k=N.Cartesian3.clone(N.Cartesian3.ZERO,X),V=o.scaleToGeodeticSurface(N.Cartesian3.fromArray(m,G,j),j),F+1<l&&(L=o.scaleToGeodeticSurface(N.Cartesian3.fromArray(m,3+G,K),K),k=N.Cartesian3.fromArray(m,3+G,X)),_&&(k=N.Cartesian3.subtract(k,H,Q),H=N.Cartesian3.subtract(V,H,Z),b=N.Cartesian3.normalize(N.Cartesian3.cross(H,k,b),b),_=!1),N.Cartesian3.equalsEpsilon(L,V,M.CesiumMath.EPSILON10)?_=!0:(E+=w,n.tangent&&(A=N.Cartesian3.normalize(N.Cartesian3.subtract(L,V,A),A)),n.bitangent&&(x=N.Cartesian3.normalize(N.Cartesian3.cross(b,A,x),x))),n.normal&&(p[g++]=b.x,p[g++]=b.y,p[g++]=b.z,p[g++]=b.x,p[g++]=b.y,p[g++]=b.z),n.tangent&&(d[C++]=A.x,d[C++]=A.y,d[C++]=A.z,d[C++]=A.x,d[C++]=A.y,d[C++]=A.z),n.bitangent&&(c[h++]=x.x,c[h++]=x.y,c[h++]=x.z,c[h++]=x.x,c[h++]=x.y,c[h++]=x.z))}t=new q.GeometryAttributes;n.position&&(t.position=new U.GeometryAttribute({componentDatatype:B.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:u})),n.normal&&(t.normal=new U.GeometryAttribute({componentDatatype:B.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:p})),n.tangent&&(t.tangent=new U.GeometryAttribute({componentDatatype:B.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:d})),n.bitangent&&(t.bitangent=new U.GeometryAttribute({componentDatatype:B.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:c})),n.st&&(t.st=new U.GeometryAttribute({componentDatatype:B.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:f}));var D=a/3;a-=6*(r+1);for(var P=J.IndexDatatype.createTypedArray(D,a),T=0,F=0;F<D-2;F+=2){var z=F,O=F+2,S=N.Cartesian3.fromArray(u,3*z,Z),R=N.Cartesian3.fromArray(u,3*O,j);N.Cartesian3.equalsEpsilon(S,R,M.CesiumMath.EPSILON10)||(S=F+1,R=F+3,P[T++]=S,P[T++]=z,P[T++]=R,P[T++]=R,P[T++]=z,P[T++]=O)}return new U.Geometry({attributes:t,indices:P,primitiveType:U.PrimitiveType.TRIANGLES,boundingSphere:new W.BoundingSphere.fromVertices(u)})}},function(e,t){return I.defined(t)&&(e=d.unpack(e,t)),e._ellipsoid=N.Ellipsoid.clone(e._ellipsoid),d.createGeometry(e)}});