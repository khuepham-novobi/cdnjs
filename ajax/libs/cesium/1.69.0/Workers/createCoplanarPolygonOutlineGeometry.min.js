define(["./when-b43ff45e","./Check-d404a0fe","./Math-336da716","./Cartesian2-3c21ddb9","./Transforms-ffcbad88","./RuntimeError-bf10f3d5","./WebGLConstants-56de22c0","./ComponentDatatype-8956ad9a","./GeometryAttribute-c9800e88","./GeometryAttributes-fbf888b4","./AttributeCompression-2ec18651","./GeometryPipeline-3f00aefe","./EncodedCartesian3-bf440da4","./IndexDatatype-c5295474","./IntersectionTests-e522b831","./Plane-56dc8a69","./GeometryInstance-61aa44f7","./arrayRemoveDuplicates-a7dee4b8","./EllipsoidTangentPlane-0c88eccf","./OrientedBoundingBox-2239d753","./CoplanarPolygonGeometryLibrary-0905aa66","./ArcType-46047bc6","./EllipsoidRhumbLine-6daaa4d2","./PolygonPipeline-b2950861","./PolygonGeometryLibrary-9cdf0808"],function(o,e,t,i,y,r,n,c,p,s,a,l,u,d,m,f,g,b,h,P,G,v,L,C,T){"use strict";function E(e){e=(e=o.defaultValue(e,o.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=e,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=T.PolygonGeometryLibrary.computeHierarchyPackedLength(e)+1}E.fromPositions=function(e){return new E({polygonHierarchy:{positions:(e=o.defaultValue(e,o.defaultValue.EMPTY_OBJECT)).positions}})},E.pack=function(e,t,r){return r=o.defaultValue(r,0),t[r=T.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r)]=e.packedLength,t};var k={polygonHierarchy:{}};return E.unpack=function(e,t,r){t=o.defaultValue(t,0);var n=T.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=n.startingIndex,delete n.startingIndex;t=e[t];return o.defined(r)||(r=new E(k)),r._polygonHierarchy=n,r.packedLength=t,r},E.createGeometry=function(e){var t=e._polygonHierarchy,e=t.positions;if(!((e=b.arrayRemoveDuplicates(e,i.Cartesian3.equalsEpsilon,!0)).length<3)&&G.CoplanarPolygonGeometryLibrary.validOutline(e)){var r=T.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(t,!1);if(0!==r.length){for(var n=[],o=0;o<r.length;o++){var a=new g.GeometryInstance({geometry:function(e){for(var t=e.length,r=new Float64Array(3*t),n=d.IndexDatatype.createTypedArray(t,2*t),o=0,a=0,i=0;i<t;i++){var y=e[i];r[o++]=y.x,r[o++]=y.y,r[o++]=y.z,n[a++]=i,n[a++]=(i+1)%t}var l=new s.GeometryAttributes({position:new p.GeometryAttribute({componentDatatype:c.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:r})});return new p.Geometry({attributes:l,indices:n,primitiveType:p.PrimitiveType.LINES})}(r[o])});n.push(a)}e=l.GeometryPipeline.combineInstances(n)[0],t=y.BoundingSphere.fromPoints(t.positions);return new p.Geometry({attributes:e.attributes,indices:e.indices,primitiveType:e.primitiveType,boundingSphere:t})}}},function(e,t){return o.defined(t)&&(e=E.unpack(e,t)),e._ellipsoid=i.Ellipsoid.clone(e._ellipsoid),E.createGeometry(e)}});