define(["exports","./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian2-d1adddcb"],function(t,M,i,c,m){"use strict";function r(t,i,a){if(0===t)return i*a;var e=t*t,n=e*e,s=n*e,h=s*e,u=h*e,t=u*e,a=a;return i*((1-e/4-3*n/64-5*s/256-175*h/16384-441*u/65536-4851*t/1048576)*a-(3*e/8+3*n/32+45*s/1024+105*h/4096+2205*u/131072+6237*t/524288)*Math.sin(2*a)+(15*n/256+45*s/1024+525*h/16384+1575*u/65536+155925*t/8388608)*Math.sin(4*a)-(35*s/3072+175*h/12288+3675*u/262144+13475*t/1048576)*Math.sin(6*a)+(315*h/131072+2205*u/524288+43659*t/8388608)*Math.sin(8*a)-(693*u/1310720+6237*t/5242880)*Math.sin(10*a)+1001*t/8388608*Math.sin(12*a))}function d(t,i){if(0===t)return Math.log(Math.tan(.5*(c.CesiumMath.PI_OVER_TWO+i)));var a=t*Math.sin(i);return Math.log(Math.tan(.5*(c.CesiumMath.PI_OVER_TWO+i)))-t/2*Math.log((1+a)/(1-a))}var l=new m.Cartesian3,_=new m.Cartesian3;function e(t,i,a,e){m.Cartesian3.normalize(e.cartographicToCartesian(i,_),l),m.Cartesian3.normalize(e.cartographicToCartesian(a,_),_);var n,s=e.maximumRadius,h=e.minimumRadius,u=s*s,o=h*h;t._ellipticitySquared=(u-o)/u,t._ellipticity=Math.sqrt(t._ellipticitySquared),t._start=m.Cartographic.clone(i,t._start),t._start.height=0,t._end=m.Cartographic.clone(a,t._end),t._end.height=0,t._heading=(n=t,s=i.longitude,h=i.latitude,o=a.longitude,u=a.latitude,h=d(n._ellipticity,h),u=d(n._ellipticity,u),Math.atan2(c.CesiumMath.negativePiToPi(o-s),u-h)),t._distance=(o=t,s=e.maximumRadius,u=e.minimumRadius,h=i.longitude,t=i.latitude,e=a.longitude,i=a.latitude,a=o._heading,e=e-h,h=c.CesiumMath.equalsEpsilon(Math.abs(a),c.CesiumMath.PI_OVER_TWO,c.CesiumMath.EPSILON8)?s===u?s*Math.cos(t)*c.CesiumMath.negativePiToPi(e):(u=Math.sin(t),s*Math.cos(t)*c.CesiumMath.negativePiToPi(e)/Math.sqrt(1-o._ellipticitySquared*u*u)):(t=r(o._ellipticity,s,t),(r(o._ellipticity,s,i)-t)/Math.cos(a)),Math.abs(h))}function o(t,i,a,f,P,e){var n,s,h=P*P,u=Math.abs(c.CesiumMath.PI_OVER_TWO-Math.abs(i))>c.CesiumMath.EPSILON8?(n=function(t){var i=t/f;if(0===P)return i;var a=i*i,e=a*i,n=e*i,s=P*P,h=s*s,u=h*s,o=u*s,r=o*s,d=r*s,l=Math.sin(2*i),M=Math.cos(2*i),c=Math.sin(4*i),m=Math.cos(4*i),_=Math.sin(6*i),g=Math.cos(6*i),p=Math.sin(8*i),C=Math.cos(8*i),t=Math.sin(10*i);return i+i*s/4+7*i*h/64+15*i*u/256+579*i*o/16384+1515*i*r/65536+16837*i*d/1048576+(3*i*h/16+45*i*u/256-i*(32*a-561)*o/4096-i*(232*a-1677)*r/16384+i*(399985-90560*a+512*n)*d/5242880)*M+(21*i*u/256+483*i*o/4096-i*(224*a-1969)*r/16384-i*(33152*a-112599)*d/1048576)*m+(151*i*o/4096+4681*i*r/65536+1479*i*d/16384-453*e*d/32768)*g+(1097*i*r/65536+42783*i*d/1048576)*C+8011*i*d/1048576*Math.cos(10*i)+(3*s/8+3*h/16+213*u/2048-3*a*u/64+255*o/4096-33*a*o/512+20861*r/524288-33*a*r/512+n*r/1024+28273*d/1048576-471*a*d/8192+9*n*d/4096)*l+(21*h/256+21*u/256+533*o/8192-21*a*o/512+197*r/4096-315*a*r/4096+584039*d/16777216-12517*a*d/131072+7*n*d/2048)*c+(151*u/6144+151*o/4096+5019*r/131072-453*a*r/16384+26965*d/786432-8607*a*d/131072)*_+(1097*o/131072+1097*r/65536+225797*d/10485760-1097*a*d/65536)*p+(8011*r/2621440+8011*d/1048576)*t+293393*d/251658240*Math.sin(12*i)}(r(P,f,t.latitude)+a*Math.cos(i)),u=d(P,t.latitude),s=d(P,n),u=Math.tan(i)*(s-u),c.CesiumMath.negativePiToPi(t.longitude+u)):(n=t.latitude,u=a/(0===P?f*Math.cos(t.latitude):(a=Math.sin(t.latitude),f*Math.cos(t.latitude)/Math.sqrt(1-h*a*a))),0<i?c.CesiumMath.negativePiToPi(t.longitude+u):c.CesiumMath.negativePiToPi(t.longitude-u));return M.defined(e)?(e.longitude=u,e.latitude=n,e.height=0,e):new m.Cartographic(u,n,0)}function g(t,i,a){a=M.defaultValue(a,m.Ellipsoid.WGS84);this._ellipsoid=a,this._start=new m.Cartographic,this._end=new m.Cartographic,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,M.defined(t)&&M.defined(i)&&e(this,t,i,a)}Object.defineProperties(g.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return this._heading}}}),g.fromStartHeadingDistance=function(t,i,a,e,n){var s=M.defaultValue(e,m.Ellipsoid.WGS84),h=s.maximumRadius,u=s.minimumRadius,h=h*h,u=u*u,h=Math.sqrt((h-u)/h),h=o(t,i=c.CesiumMath.negativePiToPi(i),a,s.maximumRadius,h);return!M.defined(n)||M.defined(e)&&!e.equals(n.ellipsoid)?new g(t,h,s):(n.setEndPoints(t,h),n)},g.prototype.setEndPoints=function(t,i){e(this,t,i,this._ellipsoid)},g.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},g.prototype.interpolateUsingSurfaceDistance=function(t,i){return o(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,i)},g.prototype.findIntersectionWithLongitude=function(t,i){var a=this._ellipticity,e=this._heading,n=Math.abs(e),s=this._start;if(t=c.CesiumMath.negativePiToPi(t),c.CesiumMath.equalsEpsilon(Math.abs(t),Math.PI,c.CesiumMath.EPSILON14)&&(t=c.CesiumMath.sign(s.longitude)*Math.PI),M.defined(i)||(i=new m.Cartographic),Math.abs(c.CesiumMath.PI_OVER_TWO-n)<=c.CesiumMath.EPSILON8)return i.longitude=t,i.latitude=s.latitude,i.height=0,i;if(c.CesiumMath.equalsEpsilon(Math.abs(c.CesiumMath.PI_OVER_TWO-n),c.CesiumMath.PI_OVER_TWO,c.CesiumMath.EPSILON8))return c.CesiumMath.equalsEpsilon(t,s.longitude,c.CesiumMath.EPSILON12)?void 0:(i.longitude=t,i.latitude=c.CesiumMath.PI_OVER_TWO*c.CesiumMath.sign(c.CesiumMath.PI_OVER_TWO-e),i.height=0,i);var h,u=s.latitude,n=a*Math.sin(u),o=Math.tan(.5*(c.CesiumMath.PI_OVER_TWO+u))*Math.exp((t-s.longitude)/Math.tan(e)),r=(1+n)/(1-n),d=s.latitude;do{h=d;var l=a*Math.sin(h),l=(1+l)/(1-l),d=2*Math.atan(o*Math.pow(l/r,a/2))-c.CesiumMath.PI_OVER_TWO}while(!c.CesiumMath.equalsEpsilon(d,h,c.CesiumMath.EPSILON12));return i.longitude=t,i.latitude=d,i.height=0,i},g.prototype.findIntersectionWithLatitude=function(t,i){var a=this._ellipticity,e=this._heading,n=this._start;if(!c.CesiumMath.equalsEpsilon(Math.abs(e),c.CesiumMath.PI_OVER_TWO,c.CesiumMath.EPSILON8)){var s=d(a,n.latitude),a=d(a,t),s=Math.tan(e)*(a-s),s=c.CesiumMath.negativePiToPi(n.longitude+s);return M.defined(i)?(i.longitude=s,i.latitude=t,i.height=0,i):new m.Cartographic(s,t,0)}},t.EllipsoidRhumbLine=g});