import{Injectable,ComponentFactoryResolver,ApplicationRef,Injector}from"@angular/core";import{DynamicDialogComponent}from"./dynamicdialog";import{DynamicDialogInjector}from"./dynamicdialog-injector";import{DynamicDialogConfig}from"./dynamicdialog-config";import{DynamicDialogRef}from"./dynamicdialog-ref";export class DialogService{constructor(o,e,t){this.componentFactoryResolver=o,this.appRef=e,this.injector=t,this.dialogComponentRefMap=new Map}open(o,e){const t=this.appendDialogComponentToBody(e);return this.dialogComponentRefMap.get(t).instance.childComponentType=o,t}appendDialogComponentToBody(o){const e=new WeakMap;e.set(DynamicDialogConfig,o);const t=new DynamicDialogRef;e.set(DynamicDialogRef,t);const n=t.onClose.subscribe(()=>{this.dialogComponentRefMap.get(t).instance.close()}),i=t.onDestroy.subscribe(()=>{this.removeDialogComponentFromBody(t),i.unsubscribe(),n.unsubscribe()}),a=this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent).create(new DynamicDialogInjector(this.injector,e));this.appRef.attachView(a.hostView);const c=a.hostView.rootNodes[0];return document.body.appendChild(c),this.dialogComponentRefMap.set(t,a),t}removeDialogComponentFromBody(o){if(!o||!this.dialogComponentRefMap.has(o))return;const e=this.dialogComponentRefMap.get(o);this.appRef.detachView(e.hostView),e.destroy(),this.dialogComponentRefMap.delete(o)}};DialogService.decorators=[{type:Injectable}],DialogService.ctorParameters=(()=>[{type:ComponentFactoryResolver},{type:ApplicationRef},{type:Injector}]);