import{NgModule,Component,ElementRef,Input,Output,EventEmitter,ContentChildren,ChangeDetectorRef,Inject,forwardRef,ChangeDetectionStrategy,ViewEncapsulation}from"@angular/core";import{trigger,state,style,transition,animate}from"@angular/animations";import{CommonModule}from"@angular/common";import{SharedModule,Header,PrimeTemplate}from"primeng/api";let idx=0;export class AccordionTab{constructor(e,t){this.changeDetector=t,this.cache=!0,this.selectedChange=new EventEmitter,this.transitionOptions="400ms cubic-bezier(0.86, 0, 0.07, 1)",this.id=`p-accordiontab-${idx++}`,this.accordion=e}get selected(){return this._selected}set selected(e){this._selected=e,this.loaded||(this._selected&&this.cache&&(this.loaded=!0),this.changeDetector.markForCheck())}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"content":this.contentTemplate=e.template;break;case"header":this.headerTemplate=e.template;break;default:this.contentTemplate=e.template}})}toggle(e){if(this.disabled)return!1;let t=this.findTabIndex();if(this.selected)this.selected=!1,this.accordion.onClose.emit({originalEvent:e,index:t});else{if(!this.accordion.multiple)for(var n=0;n<this.accordion.tabs.length;n++)this.accordion.tabs[n].selected=!1,this.accordion.tabs[n].selectedChange.emit(!1),this.accordion.tabs[n].changeDetector.markForCheck();this.selected=!0,this.loaded=!0,this.accordion.onOpen.emit({originalEvent:e,index:t})}this.selectedChange.emit(this.selected),this.accordion.updateActiveIndex(),this.changeDetector.markForCheck(),e.preventDefault()}findTabIndex(){let e=-1;for(var t=0;t<this.accordion.tabs.length;t++)if(this.accordion.tabs[t]==this){e=t;break}return e}get hasHeaderFacet(){return this.headerFacet&&this.headerFacet.length>0}onKeydown(e){32!==e.which&&13!==e.which||(this.toggle(e),e.preventDefault())}ngOnDestroy(){this.accordion.tabs.splice(this.findTabIndex(),1)}};AccordionTab.decorators=[{type:Component,args:[{selector:"p-accordionTab",template:'\n        <div class="p-accordion-tab" [ngClass]="{\'p-accordion-tab-active\': selected}">\n            <div class="p-accordion-header" [ngClass]="{\'p-highlight\': selected, \'p-disabled\': disabled}">\n                <a role="tab" class="p-accordion-header-link" (click)="toggle($event)" (keydown)="onKeydown($event)" [attr.tabindex]="disabled ? null : 0"\n                    [attr.id]="id" [attr.aria-controls]="id + \'-content\'" [attr.aria-expanded]="selected">\n                    <span class="p-accordion-toggle-icon" [ngClass]="selected ? accordion.collapseIcon : accordion.expandIcon"></span>\n                    <span class="p-accordion-header-text" *ngIf="!hasHeaderFacet">\n                        {{header}}\n                    </span>\n                    <ng-container *ngTemplateOutlet="headerTemplate"></ng-container>\n                    <ng-content select="p-header" *ngIf="hasHeaderFacet"></ng-content>\n                </a>\n            </div>\n            <div [attr.id]="id + \'-content\'" class="p-toggleable-content" [@tabContent]="selected ? {value: \'visible\', params: {transitionParams: transitionOptions}} : {value: \'hidden\', params: {transitionParams: transitionOptions}}"\n                role="region" [attr.aria-hidden]="!selected" [attr.aria-labelledby]="id">\n                <div class="p-accordion-content">\n                    <ng-content></ng-content>\n                    <ng-container *ngIf="contentTemplate && (cache ? loaded : selected)">\n                        <ng-container *ngTemplateOutlet="contentTemplate"></ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    ',animations:[trigger("tabContent",[state("hidden",style({height:"0",overflow:"hidden"})),state("visible",style({height:"*"})),transition("visible <=> hidden",[style({overflow:"hidden"}),animate("{{transitionParams}}")]),transition("void => *",animate(0))])],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-accordion-header-link{-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;display:flex;position:relative;text-decoration:none;user-select:none}.p-accordion-header-link:focus{z-index:1}.p-accordion-header-text{line-height:1}"]}]}],AccordionTab.ctorParameters=(()=>[{type:void 0,decorators:[{type:Inject,args:[forwardRef(()=>Accordion)]}]},{type:ChangeDetectorRef}]),AccordionTab.propDecorators={header:[{type:Input}],disabled:[{type:Input}],cache:[{type:Input}],selectedChange:[{type:Output}],transitionOptions:[{type:Input}],headerFacet:[{type:ContentChildren,args:[Header]}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],selected:[{type:Input}]};export class Accordion{constructor(e,t){this.el=e,this.changeDetector=t,this.onClose=new EventEmitter,this.onOpen=new EventEmitter,this.expandIcon="pi pi-fw pi-chevron-right",this.collapseIcon="pi pi-fw pi-chevron-down",this.activeIndexChange=new EventEmitter,this.tabs=[]}ngAfterContentInit(){this.initTabs(),this.tabListSubscription=this.tabList.changes.subscribe(e=>{this.initTabs()})}initTabs(){this.tabs=this.tabList.toArray(),this.updateSelectionState(),this.changeDetector.markForCheck()}getBlockableElement(){return this.el.nativeElement.children[0]}get activeIndex(){return this._activeIndex}set activeIndex(e){this._activeIndex=e,this.preventActiveIndexPropagation?this.preventActiveIndexPropagation=!1:this.updateSelectionState()}updateSelectionState(){if(this.tabs&&this.tabs.length&&null!=this._activeIndex)for(let e=0;e<this.tabs.length;e++){let t=this.multiple?this._activeIndex.includes(e):e===this._activeIndex;t!==this.tabs[e].selected&&(this.tabs[e].selected=t,this.tabs[e].selectedChange.emit(t),this.tabs[e].changeDetector.markForCheck())}}updateActiveIndex(){let e=this.multiple?[]:null;this.tabs.forEach((t,n)=>{if(t.selected){if(!this.multiple)return void(e=n);e.push(n)}}),this.preventActiveIndexPropagation=!0,this.activeIndexChange.emit(e)}ngOnDestroy(){this.tabListSubscription&&this.tabListSubscription.unsubscribe()}};Accordion.decorators=[{type:Component,args:[{selector:"p-accordion",template:'\n        <div [ngClass]="\'p-accordion p-component\'" [ngStyle]="style" [class]="styleClass" role="tablist">\n            <ng-content></ng-content>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush}]}],Accordion.ctorParameters=(()=>[{type:ElementRef},{type:ChangeDetectorRef}]),Accordion.propDecorators={multiple:[{type:Input}],onClose:[{type:Output}],onOpen:[{type:Output}],style:[{type:Input}],styleClass:[{type:Input}],expandIcon:[{type:Input}],collapseIcon:[{type:Input}],activeIndexChange:[{type:Output}],tabList:[{type:ContentChildren,args:[AccordionTab]}],activeIndex:[{type:Input}]};export class AccordionModule{};AccordionModule.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[Accordion,AccordionTab,SharedModule],declarations:[Accordion,AccordionTab]}]}];