import{NgModule,Directive,Component,ElementRef,EventEmitter,Output,Input,ChangeDetectionStrategy,ViewEncapsulation,ContentChildren}from"@angular/core";import{DomHandler}from"primeng/dom";import{CommonModule}from"@angular/common";import{RippleModule}from"primeng/ripple";import{PrimeTemplate}from"primeng/api";export class ButtonDirective{constructor(t){this.el=t,this.iconPos="left"}ngAfterViewInit(){if(this._initialStyleClass=this.el.nativeElement.className,DomHandler.addMultipleClasses(this.el.nativeElement,this.getStyleClass()),this.icon){let t=document.createElement("span");t.className="p-button-icon",t.setAttribute("aria-hidden","true");let e=this.label?"p-button-icon-"+this.iconPos:null;e&&DomHandler.addClass(t,e),DomHandler.addMultipleClasses(t,this.icon),this.el.nativeElement.appendChild(t)}let t=document.createElement("span");this.icon&&!this.label&&t.setAttribute("aria-hidden","true"),t.className="p-button-label",t.appendChild(document.createTextNode(this.label||"&nbsp;")),this.el.nativeElement.appendChild(t),this.initialized=!0}getStyleClass(){let t="p-button p-component";return this.icon&&!this.label&&(t+=" p-button-icon-only"),t}setStyleClass(){let t=this.getStyleClass();this.el.nativeElement.className=t+" "+this._initialStyleClass}get label(){return this._label}set label(t){this._label=t,this.initialized&&(DomHandler.findSingle(this.el.nativeElement,".p-button-label").textContent=this._label||"&nbsp;",this.setStyleClass())}get icon(){return this._icon}set icon(t){this._icon=t,this.initialized&&(this.iconPos?DomHandler.findSingle(this.el.nativeElement,".p-button-icon").className="p-button-icon p-button-icon-"+this.iconPos+" "+this._icon:DomHandler.findSingle(this.el.nativeElement,".p-button-icon").className="p-button-icon "+this._icon,this.setStyleClass())}ngOnDestroy(){this.initialized=!1}};ButtonDirective.decorators=[{type:Directive,args:[{selector:"[pButton]"}]}],ButtonDirective.ctorParameters=(()=>[{type:ElementRef}]),ButtonDirective.propDecorators={iconPos:[{type:Input}],label:[{type:Input}],icon:[{type:Input}]};export class Button{constructor(){this.type="button",this.iconPos="left",this.onClick=new EventEmitter,this.onFocus=new EventEmitter,this.onBlur=new EventEmitter}ngAfterContentInit(){this.templates.forEach(t=>{switch(t.getType()){case"content":default:this.contentTemplate=t.template}})}badgeStyleClass(){return{"p-badge p-component":!0,"p-badge-no-gutter":this.badge&&1===String(this.badge).length}}};Button.decorators=[{type:Component,args:[{selector:"p-button",template:'\n        <button [attr.type]="type" [class]="styleClass" [ngStyle]="style" [disabled]="disabled"\n            [ngClass]="{\'p-button p-component\':true,\n                        \'p-button-icon-only\': (icon && !label),\n                        \'p-button-vertical\': (iconPos === \'top\' || iconPos === \'bottom\') && label}"\n                        (click)="onClick.emit($event)" (focus)="onFocus.emit($event)" (blur)="onBlur.emit($event)" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet="contentTemplate"></ng-container>\n            <span [ngClass]="{\'p-button-icon\': true,\n                        \'p-button-icon-left\': iconPos === \'left\' && label,\n                        \'p-button-icon-right\': iconPos === \'right\' && label,\n                        \'p-button-icon-top\': iconPos === \'top\' && label,\n                        \'p-button-icon-bottom\': iconPos === \'bottom\' && label}"\n                        [class]="icon" *ngIf="icon" [attr.aria-hidden]="true"></span>\n            <span class="p-button-label" [attr.aria-hidden]="icon && !label">{{label||\'&nbsp;\'}}</span>\n            <span [ngClass]="badgeStyleClass()" *ngIf="badge" [class]="badgeClass">{{badge}}</span>\n        </button>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],Button.propDecorators={type:[{type:Input}],iconPos:[{type:Input}],icon:[{type:Input}],badge:[{type:Input}],label:[{type:Input}],disabled:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],badgeClass:[{type:Input}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],onClick:[{type:Output}],onFocus:[{type:Output}],onBlur:[{type:Output}]};export class ButtonModule{};ButtonModule.decorators=[{type:NgModule,args:[{imports:[CommonModule,RippleModule],exports:[ButtonDirective,Button],declarations:[ButtonDirective,Button]}]}];