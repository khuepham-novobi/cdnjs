import{NgModule,Component,ElementRef,Input,Output,EventEmitter,IterableDiffers,ChangeDetectorRef,NgZone,ChangeDetectionStrategy,ViewEncapsulation}from"@angular/core";import{CommonModule}from"@angular/common";export class GMap{constructor(e,t,a,n){this.el=e,this.cd=a,this.zone=n,this.onMapClick=new EventEmitter,this.onOverlayClick=new EventEmitter,this.onOverlayDblClick=new EventEmitter,this.onOverlayDragStart=new EventEmitter,this.onOverlayDrag=new EventEmitter,this.onOverlayDragEnd=new EventEmitter,this.onMapReady=new EventEmitter,this.onMapDragEnd=new EventEmitter,this.onZoomChanged=new EventEmitter,this.differ=t.find([]).create(null)}ngAfterViewChecked(){!this.map&&this.el.nativeElement.offsetParent&&this.initialize()}initialize(){if(this.map=new google.maps.Map(this.el.nativeElement.children[0],this.options),this.onMapReady.emit({map:this.map}),this.overlays)for(let e of this.overlays)e.setMap(this.map),this.bindOverlayEvents(e);this.map.addListener("click",e=>{this.zone.run(()=>{this.onMapClick.emit(e)})}),this.map.addListener("dragend",e=>{this.zone.run(()=>{this.onMapDragEnd.emit(e)})}),this.map.addListener("zoom_changed",e=>{this.zone.run(()=>{this.onZoomChanged.emit(e)})})}bindOverlayEvents(e){e.addListener("click",t=>{this.zone.run(()=>{this.onOverlayClick.emit({originalEvent:t,overlay:e,map:this.map})})}),e.addListener("dblclick",t=>{this.zone.run(()=>{this.onOverlayDblClick.emit({originalEvent:t,overlay:e,map:this.map})})}),e.getDraggable()&&this.bindDragEvents(e)}ngDoCheck(){let e=this.differ.diff(this.overlays);e&&this.map&&(e.forEachRemovedItem(e=>{google.maps.event.clearInstanceListeners(e.item),e.item.setMap(null)}),e.forEachAddedItem(e=>{e.item.setMap(this.map),e.item.addListener("click",t=>{this.zone.run(()=>{this.onOverlayClick.emit({originalEvent:t,overlay:e.item,map:this.map})})}),e.item.getDraggable()&&this.bindDragEvents(e.item)}))}bindDragEvents(e){e.addListener("dragstart",t=>{this.zone.run(()=>{this.onOverlayDragStart.emit({originalEvent:t,overlay:e,map:this.map})})}),e.addListener("drag",t=>{this.zone.run(()=>{this.onOverlayDrag.emit({originalEvent:t,overlay:e,map:this.map})})}),e.addListener("dragend",t=>{this.zone.run(()=>{this.onOverlayDragEnd.emit({originalEvent:t,overlay:e,map:this.map})})})}getMap(){return this.map}};GMap.decorators=[{type:Component,args:[{selector:"p-gmap",template:'<div [ngStyle]="style" [class]="styleClass"></div>',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],GMap.ctorParameters=(()=>[{type:ElementRef},{type:IterableDiffers},{type:ChangeDetectorRef},{type:NgZone}]),GMap.propDecorators={style:[{type:Input}],styleClass:[{type:Input}],options:[{type:Input}],overlays:[{type:Input}],onMapClick:[{type:Output}],onOverlayClick:[{type:Output}],onOverlayDblClick:[{type:Output}],onOverlayDragStart:[{type:Output}],onOverlayDrag:[{type:Output}],onOverlayDragEnd:[{type:Output}],onMapReady:[{type:Output}],onMapDragEnd:[{type:Output}],onZoomChanged:[{type:Output}]};export class GMapModule{};GMapModule.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[GMap],declarations:[GMap]}]}];