import{NgModule,Component,ElementRef,Input,Output,ViewChild,EventEmitter,ContentChild,ContentChildren,ChangeDetectionStrategy,ViewEncapsulation}from"@angular/core";import{CommonModule}from"@angular/common";import{Header,Footer,PrimeTemplate,SharedModule}from"primeng/api";import{ScrollingModule,CdkVirtualScrollViewport}from"@angular/cdk/scrolling";export class VirtualScroller{constructor(e){this.el=e,this.delay=250,this.trackBy=((e,t)=>t),this.onLazyLoad=new EventEmitter,this._totalRecords=0,this.page=0,this._first=0}get totalRecords(){return this._totalRecords}set totalRecords(e){this._totalRecords=e,console.log("totalRecords is deprecated, provide a value with the length of virtual items instead.")}get first(){return this._first}set first(e){this._first=e,console.log("first property is deprecated, use scrollToIndex function to scroll a specific item.")}get cache(){return this._cache}set cache(e){this._cache=e,console.log("cache is deprecated as it is always on.")}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"item":this.itemTemplate=e.template;break;case"loadingItem":this.loadingItemTemplate=e.template;break;case"header":this.headerTemplate=e.template;break;case"footer":this.footerTemplate=e.template;break;default:this.itemTemplate=e.template}})}onScrollIndexChange(e){this.lazy&&(this.virtualScrollTimeout&&clearTimeout(this.virtualScrollTimeout),this.virtualScrollTimeout=setTimeout(()=>{let t=Math.floor(e/this.rows),l=0===t?0:(t-1)*this.rows,r=0===t?2*this.rows:3*this.rows;t!==this.virtualPage&&(this.virtualPage=t,this.onLazyLoad.emit({first:l,rows:r}))},this.delay))}getBlockableElement(){return this.el.nativeElement.children[0]}scrollTo(e,t){this.scrollToIndex(e,t)}scrollToIndex(e,t){this.viewport&&this.viewport.scrollToIndex(e,t)}};VirtualScroller.decorators=[{type:Component,args:[{selector:"p-virtualScroller",template:'\n        <div [ngClass]="\'p-virtualscroller p-component\'" [ngStyle]="style" [class]="styleClass">\n            <div class="p-virtualscroller-header" *ngIf="header || headerTemplate">\n                <ng-content select="p-header"></ng-content>\n                <ng-container *ngTemplateOutlet="headerTemplate"></ng-container>\n            </div>\n            <div #content class="p-virtualscroller-content">\n                <div class="p-virtualscroller-list">\n                    <cdk-virtual-scroll-viewport #viewport [ngStyle]="{\'height\': scrollHeight}" [itemSize]="itemSize" [minBufferPx]="minBufferPx" [maxBufferPx]="maxBufferPx" (scrolledIndexChange)="onScrollIndexChange($event)">\n                        <ng-container *cdkVirtualFor="let item of value; trackBy: trackBy; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd;">\n                            <div [ngStyle]="{\'height\': itemSize + \'px\'}" class="p-virtualscroller-item">\n                                <ng-container *ngTemplateOutlet="item ? itemTemplate : loadingItemTemplate; context: {$implicit: item, index: i, count: c, first: f, last: l, even: e, odd: o}"></ng-container>\n                            </div>\n                        </ng-container>\n                    </cdk-virtual-scroll-viewport>\n                </div>\n            </div>\n            <div class="p-virtualscroller-footer" *ngIf="footer || footerTemplate">\n                <ng-content select="p-footer"></ng-content>\n                <ng-container *ngTemplateOutlet="footerTemplate"></ng-container>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.Default,encapsulation:ViewEncapsulation.None}]}],VirtualScroller.ctorParameters=(()=>[{type:ElementRef}]),VirtualScroller.propDecorators={value:[{type:Input}],itemSize:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],scrollHeight:[{type:Input}],lazy:[{type:Input}],rows:[{type:Input}],minBufferPx:[{type:Input}],maxBufferPx:[{type:Input}],delay:[{type:Input}],trackBy:[{type:Input}],header:[{type:ContentChild,args:[Header]}],footer:[{type:ContentChild,args:[Footer]}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],viewport:[{type:ViewChild,args:[CdkVirtualScrollViewport]}],onLazyLoad:[{type:Output}],totalRecords:[{type:Input}],first:[{type:Input}],cache:[{type:Input}]};export class VirtualScrollerModule{};VirtualScrollerModule.decorators=[{type:NgModule,args:[{imports:[CommonModule,ScrollingModule],exports:[VirtualScroller,SharedModule,ScrollingModule],declarations:[VirtualScroller]}]}];