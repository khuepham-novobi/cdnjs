import{NgModule,Directive,ElementRef,NgZone,Optional}from"@angular/core";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{PrimeNGConfig}from"primeng/api";export class Ripple{constructor(e,t,n){this.el=e,this.zone=t,this.config=n}ngAfterViewInit(){this.config&&this.config.ripple&&this.zone.runOutsideAngular(()=>{this.create(),this.mouseDownListener=this.onMouseDown.bind(this),this.el.nativeElement.addEventListener("mousedown",this.mouseDownListener)})}onMouseDown(e){let t=this.getInk();if(!t||"none"===getComputedStyle(t,null).display)return;if(DomHandler.removeClass(t,"p-ink-active"),!DomHandler.getHeight(t)&&!DomHandler.getWidth(t)){let e=Math.max(DomHandler.getOuterWidth(this.el.nativeElement),DomHandler.getOuterHeight(this.el.nativeElement));t.style.height=e+"px",t.style.width=e+"px"}let n=DomHandler.getOffset(this.el.nativeElement),i=e.pageX-n.left+document.body.scrollTop-DomHandler.getWidth(t)/2,o=e.pageY-n.top+document.body.scrollLeft-DomHandler.getHeight(t)/2;t.style.top=o+"px",t.style.left=i+"px",DomHandler.addClass(t,"p-ink-active")}getInk(){for(let e=0;e<this.el.nativeElement.children.length;e++)if(-1!==this.el.nativeElement.children[e].className.indexOf("p-ink"))return this.el.nativeElement.children[e];return null}resetInk(){let e=this.getInk();e&&DomHandler.removeClass(e,"p-ink-active")}onAnimationEnd(e){DomHandler.removeClass(e.currentTarget,"p-ink-active")}create(){let e=document.createElement("span");e.className="p-ink",this.el.nativeElement.appendChild(e),this.animationListener=this.onAnimationEnd.bind(this),e.addEventListener("animationend",this.animationListener)}remove(){let e=this.getInk();e&&(this.el.nativeElement.removeEventListener("mousedown",this.mouseDownListener),e.removeEventListener("animationend",this.animationListener),DomHandler.removeElement(e))}ngOnDestroy(){this.config&&this.config.ripple&&this.remove()}};Ripple.decorators=[{type:Directive,args:[{selector:"[pRipple]",host:{"[class.p-ripple]":"true"}}]}],Ripple.ctorParameters=(()=>[{type:ElementRef},{type:NgZone},{type:PrimeNGConfig,decorators:[{type:Optional}]}]);export class RippleModule{};RippleModule.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[Ripple],declarations:[Ripple]}]}];