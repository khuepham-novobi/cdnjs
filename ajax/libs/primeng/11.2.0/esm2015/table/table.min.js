import{NgModule,Component,HostListener,Directive,Optional,Input,Output,EventEmitter,ElementRef,ContentChildren,ViewChild,NgZone,ChangeDetectorRef,ChangeDetectionStrategy,ViewEncapsulation,Renderer2}from"@angular/core";import{CommonModule}from"@angular/common";import{FormsModule}from"@angular/forms";import{PrimeTemplate,SharedModule,FilterMatchMode,FilterOperator,PrimeNGConfig,TranslationKeys,FilterService}from"primeng/api";import{PaginatorModule}from"primeng/paginator";import{InputTextModule}from"primeng/inputtext";import{ButtonModule}from"primeng/button";import{SelectButtonModule}from"primeng/selectbutton";import{TriStateCheckboxModule}from"primeng/tristatecheckbox";import{CalendarModule}from"primeng/calendar";import{InputNumberModule}from"primeng/inputnumber";import{DropdownModule}from"primeng/dropdown";import{DomHandler,ConnectedOverlayScrollHandler}from"primeng/dom";import{ObjectUtils}from"primeng/utils";import{Injectable}from"@angular/core";import{Subject}from"rxjs";import{ScrollingModule,CdkVirtualScrollViewport}from"@angular/cdk/scrolling";import{trigger,style,transition,animate}from"@angular/animations";export class TableService{constructor(){this.sortSource=new Subject,this.selectionSource=new Subject,this.contextMenuSource=new Subject,this.valueSource=new Subject,this.totalRecordsSource=new Subject,this.columnsSource=new Subject,this.sortSource$=this.sortSource.asObservable(),this.selectionSource$=this.selectionSource.asObservable(),this.contextMenuSource$=this.contextMenuSource.asObservable(),this.valueSource$=this.valueSource.asObservable(),this.totalRecordsSource$=this.totalRecordsSource.asObservable(),this.columnsSource$=this.columnsSource.asObservable()}onSort(e){this.sortSource.next(e)}onSelectionChange(){this.selectionSource.next()}onContextMenu(e){this.contextMenuSource.next(e)}onValueChange(e){this.valueSource.next(e)}onTotalRecordsChange(e){this.totalRecordsSource.next(e)}onColumnsChange(e){this.columnsSource.next(e)}};TableService.decorators=[{type:Injectable}];export class Table{constructor(e,t,i,l,n){this.el=e,this.zone=t,this.tableService=i,this.cd=l,this.filterService=n,this.pageLinks=5,this.alwaysShowPaginator=!0,this.paginatorPosition="bottom",this.paginatorDropdownScrollHeight="200px",this.currentPageReportTemplate="{currentPage} of {totalPages}",this.showFirstLastIcon=!0,this.showPageLinks=!0,this.defaultSortOrder=1,this.sortMode="single",this.resetPageOnSort=!0,this.selectionChange=new EventEmitter,this.contextMenuSelectionChange=new EventEmitter,this.contextMenuSelectionMode="separate",this.rowTrackBy=((e,t)=>t),this.lazy=!1,this.lazyLoadOnInit=!0,this.compareSelectionBy="deepEquals",this.csvSeparator=",",this.exportFilename="download",this.filters={},this.filterDelay=300,this.expandedRowKeys={},this.editingRowKeys={},this.rowExpandMode="multiple",this.virtualScrollDelay=250,this.virtualRowHeight=28,this.columnResizeMode="fit",this.loadingIcon="pi pi-spinner",this.showLoader=!0,this.stateStorage="session",this.editMode="cell",this.onRowSelect=new EventEmitter,this.onRowUnselect=new EventEmitter,this.onPage=new EventEmitter,this.onSort=new EventEmitter,this.onFilter=new EventEmitter,this.onLazyLoad=new EventEmitter,this.onRowExpand=new EventEmitter,this.onRowCollapse=new EventEmitter,this.onContextMenuSelect=new EventEmitter,this.onColResize=new EventEmitter,this.onColReorder=new EventEmitter,this.onRowReorder=new EventEmitter,this.onEditInit=new EventEmitter,this.onEditComplete=new EventEmitter,this.onEditCancel=new EventEmitter,this.onHeaderCheckboxToggle=new EventEmitter,this.sortFunction=new EventEmitter,this.firstChange=new EventEmitter,this.rowsChange=new EventEmitter,this.onStateSave=new EventEmitter,this.onStateRestore=new EventEmitter,this._value=[],this._totalRecords=0,this._first=0,this.selectionKeys={},this._sortOrder=1}ngOnInit(){this.lazy&&this.lazyLoadOnInit&&(this.virtualScroll||this.onLazyLoad.emit(this.createLazyLoadMetadata()),this.restoringFilter&&(this.restoringFilter=!1)),this.initialized=!0}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"caption":this.captionTemplate=e.template;break;case"header":this.headerTemplate=e.template;break;case"body":this.bodyTemplate=e.template;break;case"loadingbody":this.loadingBodyTemplate=e.template;break;case"footer":this.footerTemplate=e.template;break;case"summary":this.summaryTemplate=e.template;break;case"colgroup":this.colGroupTemplate=e.template;break;case"rowexpansion":this.expandedRowTemplate=e.template;break;case"frozenrows":this.frozenRowsTemplate=e.template;break;case"frozenheader":this.frozenHeaderTemplate=e.template;break;case"frozenbody":this.frozenBodyTemplate=e.template;break;case"frozenfooter":this.frozenFooterTemplate=e.template;break;case"frozencolgroup":this.frozenColGroupTemplate=e.template;break;case"frozenrowexpansion":this.frozenExpandedRowTemplate=e.template;break;case"emptymessage":this.emptyMessageTemplate=e.template;break;case"paginatorleft":this.paginatorLeftTemplate=e.template;break;case"paginatorright":this.paginatorRightTemplate=e.template;break;case"paginatordropdownitem":this.paginatorDropdownItemTemplate=e.template}})}ngAfterViewInit(){this.isStateful()&&this.resizableColumns&&this.restoreColumnWidths()}ngOnChanges(e){e.value&&(this.isStateful()&&!this.stateRestored&&this.restoreState(),this._value=e.value.currentValue,this.lazy||(this.totalRecords=this._value?this._value.length:0,"single"==this.sortMode&&this.sortField?this.sortSingle():"multiple"==this.sortMode&&this.multiSortMeta?this.sortMultiple():this.hasFilter()&&this._filter()),this.tableService.onValueChange(e.value.currentValue)),e.columns&&(this._columns=e.columns.currentValue,this.tableService.onColumnsChange(e.columns.currentValue),this._columns&&this.isStateful()&&this.reorderableColumns&&!this.columnOrderStateRestored&&this.restoreColumnOrder()),e.sortField&&(this._sortField=e.sortField.currentValue,this.lazy&&!this.initialized||"single"===this.sortMode&&this.sortSingle()),e.sortOrder&&(this._sortOrder=e.sortOrder.currentValue,this.lazy&&!this.initialized||"single"===this.sortMode&&this.sortSingle()),e.multiSortMeta&&(this._multiSortMeta=e.multiSortMeta.currentValue,"multiple"===this.sortMode&&this.sortMultiple()),e.selection&&(this._selection=e.selection.currentValue,this.preventSelectionSetterPropagation||(this.updateSelectionKeys(),this.tableService.onSelectionChange()),this.preventSelectionSetterPropagation=!1)}get value(){return this._value}set value(e){this._value=e}get columns(){return this._columns}set columns(e){this._columns=e}get first(){return this._first}set first(e){this._first=e}get rows(){return this._rows}set rows(e){this._rows=e}get totalRecords(){return this._totalRecords}set totalRecords(e){this._totalRecords=e,this.tableService.onTotalRecordsChange(this._totalRecords)}get sortField(){return this._sortField}set sortField(e){this._sortField=e}get sortOrder(){return this._sortOrder}set sortOrder(e){this._sortOrder=e}get multiSortMeta(){return this._multiSortMeta}set multiSortMeta(e){this._multiSortMeta=e}get selection(){return this._selection}set selection(e){this._selection=e}updateSelectionKeys(){if(this.dataKey&&this._selection)if(this.selectionKeys={},Array.isArray(this._selection))for(let e of this._selection)this.selectionKeys[String(ObjectUtils.resolveFieldData(e,this.dataKey))]=1;else this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection,this.dataKey))]=1}onPageChange(e){this.first=e.first,this.rows=e.rows,this.lazy&&this.onLazyLoad.emit(this.createLazyLoadMetadata()),this.onPage.emit({first:this.first,rows:this.rows}),this.firstChange.emit(this.first),this.rowsChange.emit(this.rows),this.tableService.onValueChange(this.value),this.isStateful()&&this.saveState(),this.anchorRowIndex=null,this.scrollable&&this.resetScrollTop()}sort(e){let t=e.originalEvent;if("single"===this.sortMode&&(this._sortOrder=this.sortField===e.field?-1*this.sortOrder:this.defaultSortOrder,this._sortField=e.field,this.sortSingle(),this.resetPageOnSort&&(this._first=0,this.firstChange.emit(this._first),this.scrollable&&this.resetScrollTop())),"multiple"===this.sortMode){let i=t.metaKey||t.ctrlKey,l=this.getSortMeta(e.field);l?i?l.order=-1*l.order:(this._multiSortMeta=[{field:e.field,order:-1*l.order}],this.resetPageOnSort&&(this._first=0,this.firstChange.emit(this._first),this.scrollable&&this.resetScrollTop())):(i&&this.multiSortMeta||(this._multiSortMeta=[],this.resetPageOnSort&&(this._first=0,this.firstChange.emit(this._first))),this._multiSortMeta.push({field:e.field,order:this.defaultSortOrder})),this.sortMultiple()}this.isStateful()&&this.saveState(),this.anchorRowIndex=null}sortSingle(){if(this.sortField&&this.sortOrder){this.restoringSort&&(this.restoringSort=!1),this.lazy?this.onLazyLoad.emit(this.createLazyLoadMetadata()):this.value&&(this.customSort?this.sortFunction.emit({data:this.value,mode:this.sortMode,field:this.sortField,order:this.sortOrder}):(this.value.sort((e,t)=>{let i=ObjectUtils.resolveFieldData(e,this.sortField),l=ObjectUtils.resolveFieldData(t,this.sortField),n=null;return n=null==i&&null!=l?-1:null!=i&&null==l?1:null==i&&null==l?0:"string"==typeof i&&"string"==typeof l?i.localeCompare(l):i<l?-1:i>l?1:0,this.sortOrder*n}),this._value=[...this.value]),this.hasFilter()&&this._filter());let e={field:this.sortField,order:this.sortOrder};this.onSort.emit(e),this.tableService.onSort(e)}}sortMultiple(){this.multiSortMeta&&(this.lazy?this.onLazyLoad.emit(this.createLazyLoadMetadata()):this.value&&(this.customSort?this.sortFunction.emit({data:this.value,mode:this.sortMode,multiSortMeta:this.multiSortMeta}):(this.value.sort((e,t)=>this.multisortField(e,t,this.multiSortMeta,0)),this._value=[...this.value]),this.hasFilter()&&this._filter()),this.onSort.emit({multisortmeta:this.multiSortMeta}),this.tableService.onSort(this.multiSortMeta))}multisortField(e,t,i,l){let n=ObjectUtils.resolveFieldData(e,i[l].field),o=ObjectUtils.resolveFieldData(t,i[l].field),s=null;if(null==n&&null!=o)s=-1;else if(null!=n&&null==o)s=1;else if(null==n&&null==o)s=0;else if("string"==typeof n||n instanceof String){if(n.localeCompare&&n!=o)return i[l].order*n.localeCompare(o)}else s=n<o?-1:1;return n==o?i.length-1>l?this.multisortField(e,t,i,l+1):0:i[l].order*s}getSortMeta(e){if(this.multiSortMeta&&this.multiSortMeta.length)for(let t=0;t<this.multiSortMeta.length;t++)if(this.multiSortMeta[t].field===e)return this.multiSortMeta[t];return null}isSorted(e){if("single"===this.sortMode)return this.sortField&&this.sortField===e;if("multiple"===this.sortMode){let t=!1;if(this.multiSortMeta)for(let i=0;i<this.multiSortMeta.length;i++)if(this.multiSortMeta[i].field==e){t=!0;break}return t}}handleRowClick(e){let t=e.originalEvent.target,i=t.nodeName,l=t.parentElement&&t.parentElement.nodeName;if("INPUT"!=i&&"BUTTON"!=i&&"A"!=i&&"INPUT"!=l&&"BUTTON"!=l&&"A"!=l&&!DomHandler.hasClass(e.originalEvent.target,"p-clickable")){if(this.selectionMode){if(this.preventSelectionSetterPropagation=!0,this.isMultipleSelectionMode()&&e.originalEvent.shiftKey&&null!=this.anchorRowIndex)DomHandler.clearSelection(),null!=this.rangeRowIndex&&this.clearSelectionRange(e.originalEvent),this.rangeRowIndex=e.rowIndex,this.selectRange(e.originalEvent,e.rowIndex);else{let t=e.rowData,i=this.isSelected(t),l=!this.rowTouched&&this.metaKeySelection,n=this.dataKey?String(ObjectUtils.resolveFieldData(t,this.dataKey)):null;if(this.anchorRowIndex=e.rowIndex,this.rangeRowIndex=e.rowIndex,l){let l=e.originalEvent.metaKey||e.originalEvent.ctrlKey;if(i&&l){if(this.isSingleSelectionMode())this._selection=null,this.selectionKeys={},this.selectionChange.emit(null);else{let e=this.findIndexInSelection(t);this._selection=this.selection.filter((t,i)=>i!=e),this.selectionChange.emit(this.selection),n&&delete this.selectionKeys[n]}this.onRowUnselect.emit({originalEvent:e.originalEvent,data:t,type:"row"})}else this.isSingleSelectionMode()?(this._selection=t,this.selectionChange.emit(t),n&&(this.selectionKeys={},this.selectionKeys[n]=1)):this.isMultipleSelectionMode()&&(l?this._selection=this.selection||[]:(this._selection=[],this.selectionKeys={}),this._selection=[...this.selection,t],this.selectionChange.emit(this.selection),n&&(this.selectionKeys[n]=1)),this.onRowSelect.emit({originalEvent:e.originalEvent,data:t,type:"row",index:e.rowIndex})}else if("single"===this.selectionMode)i?(this._selection=null,this.selectionKeys={},this.selectionChange.emit(this.selection),this.onRowUnselect.emit({originalEvent:e.originalEvent,data:t,type:"row"})):(this._selection=t,this.selectionChange.emit(this.selection),this.onRowSelect.emit({originalEvent:e.originalEvent,data:t,type:"row",index:e.rowIndex}),n&&(this.selectionKeys={},this.selectionKeys[n]=1));else if("multiple"===this.selectionMode)if(i){let i=this.findIndexInSelection(t);this._selection=this.selection.filter((e,t)=>t!=i),this.selectionChange.emit(this.selection),this.onRowUnselect.emit({originalEvent:e.originalEvent,data:t,type:"row"}),n&&delete this.selectionKeys[n]}else this._selection=this.selection?[...this.selection,t]:[t],this.selectionChange.emit(this.selection),this.onRowSelect.emit({originalEvent:e.originalEvent,data:t,type:"row",index:e.rowIndex}),n&&(this.selectionKeys[n]=1)}this.tableService.onSelectionChange(),this.isStateful()&&this.saveState()}this.rowTouched=!1}}handleRowTouchEnd(e){this.rowTouched=!0}handleRowRightClick(e){if(this.contextMenu){const t=e.rowData;if("separate"===this.contextMenuSelectionMode)this.contextMenuSelection=t,this.contextMenuSelectionChange.emit(t),this.onContextMenuSelect.emit({originalEvent:e.originalEvent,data:t,index:e.rowIndex}),this.contextMenu.show(e.originalEvent),this.tableService.onContextMenu(t);else if("joint"===this.contextMenuSelectionMode){this.preventSelectionSetterPropagation=!0;let i=this.isSelected(t),l=this.dataKey?String(ObjectUtils.resolveFieldData(t,this.dataKey)):null;i||(this.isSingleSelectionMode()?(this.selection=t,this.selectionChange.emit(t)):this.isMultipleSelectionMode()&&(this.selection=[t],this.selectionChange.emit(this.selection)),l&&(this.selectionKeys[l]=1)),this.contextMenu.show(e.originalEvent),this.onContextMenuSelect.emit({originalEvent:e,data:t,index:e.rowIndex})}}}selectRange(e,t){let i,l;this.anchorRowIndex>t?(i=t,l=this.anchorRowIndex):this.anchorRowIndex<t?(i=this.anchorRowIndex,l=t):(i=t,l=t),this.lazy&&this.paginator&&(i-=this.first,l-=this.first);let n=[];for(let e=i;e<=l;e++){let t=this.filteredValue?this.filteredValue[e]:this.value[e];if(!this.isSelected(t)){n.push(t),this._selection=[...this.selection,t];let e=this.dataKey?String(ObjectUtils.resolveFieldData(t,this.dataKey)):null;e&&(this.selectionKeys[e]=1)}}this.onRowSelect.emit({originalEvent:e,data:n,type:"row"}),this.selectionChange.emit(this.selection)}clearSelectionRange(e){let t,i;this.rangeRowIndex>this.anchorRowIndex?(t=this.anchorRowIndex,i=this.rangeRowIndex):this.rangeRowIndex<this.anchorRowIndex?(t=this.rangeRowIndex,i=this.anchorRowIndex):(t=this.rangeRowIndex,i=this.rangeRowIndex);for(let l=t;l<=i;l++){let t=this.value[l],i=this.findIndexInSelection(t);this._selection=this.selection.filter((e,t)=>t!=i);let n=this.dataKey?String(ObjectUtils.resolveFieldData(t,this.dataKey)):null;n&&delete this.selectionKeys[n],this.onRowUnselect.emit({originalEvent:e,data:t,type:"row"})}}isSelected(e){return!(!e||!this.selection)&&(this.dataKey?void 0!==this.selectionKeys[ObjectUtils.resolveFieldData(e,this.dataKey)]:this.selection instanceof Array?this.findIndexInSelection(e)>-1:this.equals(e,this.selection))}findIndexInSelection(e){let t=-1;if(this.selection&&this.selection.length)for(let i=0;i<this.selection.length;i++)if(this.equals(e,this.selection[i])){t=i;break}return t}toggleRowWithRadio(e,t){this.preventSelectionSetterPropagation=!0,this.selection!=t?(this._selection=t,this.selectionChange.emit(this.selection),this.onRowSelect.emit({originalEvent:e.originalEvent,index:e.rowIndex,data:t,type:"radiobutton"}),this.dataKey&&(this.selectionKeys={},this.selectionKeys[String(ObjectUtils.resolveFieldData(t,this.dataKey))]=1)):(this._selection=null,this.selectionChange.emit(this.selection),this.onRowUnselect.emit({originalEvent:e.originalEvent,index:e.rowIndex,data:t,type:"radiobutton"})),this.tableService.onSelectionChange(),this.isStateful()&&this.saveState()}toggleRowWithCheckbox(e,t){this.selection=this.selection||[];let i=this.isSelected(t),l=this.dataKey?String(ObjectUtils.resolveFieldData(t,this.dataKey)):null;if(this.preventSelectionSetterPropagation=!0,i){let i=this.findIndexInSelection(t);this._selection=this.selection.filter((e,t)=>t!=i),this.selectionChange.emit(this.selection),this.onRowUnselect.emit({originalEvent:e.originalEvent,index:e.rowIndex,data:t,type:"checkbox"}),l&&delete this.selectionKeys[l]}else this._selection=this.selection?[...this.selection,t]:[t],this.selectionChange.emit(this.selection),this.onRowSelect.emit({originalEvent:e.originalEvent,index:e.rowIndex,data:t,type:"checkbox"}),l&&(this.selectionKeys[l]=1);this.tableService.onSelectionChange(),this.isStateful()&&this.saveState()}toggleRowsWithCheckbox(e,t){this._selection=t?this.filteredValue?this.filteredValue.slice():this.value.slice():[],this.preventSelectionSetterPropagation=!0,this.updateSelectionKeys(),this.selectionChange.emit(this._selection),this.tableService.onSelectionChange(),this.onHeaderCheckboxToggle.emit({originalEvent:e,checked:t}),this.isStateful()&&this.saveState()}equals(e,t){return"equals"===this.compareSelectionBy?e===t:ObjectUtils.equals(e,t,this.dataKey)}filter(e,t,i){this.filterTimeout&&clearTimeout(this.filterTimeout),this.isFilterBlank(e)?this.filters[t]&&delete this.filters[t]:this.filters[t]={value:e,matchMode:i},this.filterTimeout=setTimeout(()=>{this._filter(),this.filterTimeout=null},this.filterDelay),this.anchorRowIndex=null}filterGlobal(e,t){this.filter(e,"global",t)}isFilterBlank(e){return null==e||("string"==typeof e&&0==e.trim().length||e instanceof Array&&0==e.length)}_filter(){if(this.restoringFilter||(this.first=0,this.firstChange.emit(this.first)),this.lazy)this.onLazyLoad.emit(this.createLazyLoadMetadata());else{if(!this.value)return;if(this.hasFilter()){let e;if(this.filters.global){if(!this.columns&&!this.globalFilterFields)throw new Error("Global filtering requires dynamic columns or globalFilterFields to be defined.");e=this.globalFilterFields||this.columns}this.filteredValue=[];for(let t=0;t<this.value.length;t++){let i,l=!0,n=!1,o=!1;for(let e in this.filters)if(this.filters.hasOwnProperty(e)&&"global"!==e){o=!0;let i=e,n=this.filters[i];if(Array.isArray(n)){for(let e of n)if(l=this.executeLocalFilter(i,this.value[t],e),e.operator===FilterOperator.OR&&l||e.operator===FilterOperator.AND&&!l)break}else l=this.executeLocalFilter(i,this.value[t],n);if(!l)break}if(this.filters.global&&!n&&e)for(let i=0;i<e.length;i++){let l=e[i].field||e[i];if(n=this.filterService.filters[this.filters.global.matchMode](ObjectUtils.resolveFieldData(this.value[t],l),this.filters.global.value,this.filterLocale))break}(i=this.filters.global?o?o&&l&&n:n:o&&l)&&this.filteredValue.push(this.value[t])}this.filteredValue.length===this.value.length&&(this.filteredValue=null),this.paginator&&(this.totalRecords=this.filteredValue?this.filteredValue.length:this.value?this.value.length:0)}else this.filteredValue=null,this.paginator&&(this.totalRecords=this.value?this.value.length:0)}this.onFilter.emit({filters:this.filters,filteredValue:this.filteredValue||this.value}),this.tableService.onValueChange(this.value),this.isStateful()&&!this.restoringFilter&&this.saveState(),this.restoringFilter&&(this.restoringFilter=!1),this.cd.markForCheck(),this.scrollable&&this.resetScrollTop()}executeLocalFilter(e,t,i){let l=i.value,n=i.matchMode||FilterMatchMode.STARTS_WITH,o=ObjectUtils.resolveFieldData(t,e);return(0,this.filterService.filters[n])(o,l,this.filterLocale)}hasFilter(){let e=!0;for(let t in this.filters)if(this.filters.hasOwnProperty(t)){e=!1;break}return!e}createLazyLoadMetadata(){return{first:this.first,rows:this.rows,sortField:this.sortField,sortOrder:this.sortOrder,filters:this.filters,globalFilter:this.filters&&this.filters.global?this.filters.global.value:null,multiSortMeta:this.multiSortMeta}}clear(){this._sortField=null,this._sortOrder=this.defaultSortOrder,this._multiSortMeta=null,this.tableService.onSort(null),this.filteredValue=null,this.filters={},this.first=0,this.firstChange.emit(this.first),this.lazy?this.onLazyLoad.emit(this.createLazyLoadMetadata()):this.totalRecords=this._value?this._value.length:0}reset(){this.clear()}exportCSV(e){let t,i="",l=this.frozenColumns?[...this.frozenColumns,...this.columns]:this.columns;e&&e.selectionOnly?t=this.selection||[]:(t=this.filteredValue||this.value,this.frozenValue&&(t=t?[...this.frozenValue,...t]:this.frozenValue));for(let e=0;e<l.length;e++){let t=l[e];!1!==t.exportable&&t.field&&(i+='"'+(t.header||t.field)+'"',e<l.length-1&&(i+=this.csvSeparator))}t.forEach((e,t)=>{i+="\n";for(let t=0;t<l.length;t++){let n=l[t];if(!1!==n.exportable&&n.field){let o=ObjectUtils.resolveFieldData(e,n.field);o=null!=o?this.exportFunction?this.exportFunction({data:o,field:n.field}):String(o).replace(/"/g,'""'):"",i+='"'+o+'"',t<l.length-1&&(i+=this.csvSeparator)}}});let n=new Blob([i],{type:"text/csv;charset=utf-8;"});if(window.navigator.msSaveOrOpenBlob)navigator.msSaveOrOpenBlob(n,this.exportFilename+".csv");else{let e=document.createElement("a");e.style.display="none",document.body.appendChild(e),void 0!==e.download?(e.setAttribute("href",URL.createObjectURL(n)),e.setAttribute("download",this.exportFilename+".csv"),e.click()):(i="data:text/csv;charset=utf-8,"+i,window.open(encodeURI(i))),document.body.removeChild(e)}}resetScrollTop(){this.virtualScroll?this.scrollToVirtualIndex(0):this.scrollTo({top:0})}scrollToVirtualIndex(e){this.scrollableViewChild&&this.scrollableViewChild.scrollToVirtualIndex(e),this.scrollableFrozenViewChild&&this.scrollableFrozenViewChild.scrollToVirtualIndex(e)}scrollTo(e){this.scrollableViewChild&&this.scrollableViewChild.scrollTo(e),this.scrollableFrozenViewChild&&this.scrollableFrozenViewChild.scrollTo(e)}updateEditingCell(e,t,i,l){this.editingCell=e,this.editingCellData=t,this.editingCellField=i,this.editingCellRowIndex=l,this.bindDocumentEditListener()}isEditingCellValid(){return this.editingCell&&0===DomHandler.find(this.editingCell,".ng-invalid.ng-dirty").length}bindDocumentEditListener(){this.documentEditListener||(this.documentEditListener=(e=>{this.editingCell&&!this.editingCellClick&&this.isEditingCellValid()&&(DomHandler.removeClass(this.editingCell,"p-cell-editing"),this.editingCell=null,this.onEditComplete.emit({field:this.editingCellField,data:this.editingCellData,originalEvent:e,index:this.editingCellRowIndex}),this.editingCellField=null,this.editingCellData=null,this.editingCellRowIndex=null,this.unbindDocumentEditListener(),this.cd.markForCheck()),this.editingCellClick=!1}),document.addEventListener("click",this.documentEditListener))}unbindDocumentEditListener(){this.documentEditListener&&(document.removeEventListener("click",this.documentEditListener),this.documentEditListener=null)}initRowEdit(e){let t=String(ObjectUtils.resolveFieldData(e,this.dataKey));this.editingRowKeys[t]=!0}saveRowEdit(e,t){if(0===DomHandler.find(t,".ng-invalid.ng-dirty").length){let t=String(ObjectUtils.resolveFieldData(e,this.dataKey));delete this.editingRowKeys[t]}}cancelRowEdit(e){let t=String(ObjectUtils.resolveFieldData(e,this.dataKey));delete this.editingRowKeys[t]}toggleRow(e,t){if(!this.dataKey)throw new Error("dataKey must be defined to use row expansion");let i=String(ObjectUtils.resolveFieldData(e,this.dataKey));null!=this.expandedRowKeys[i]?(delete this.expandedRowKeys[i],this.onRowCollapse.emit({originalEvent:t,data:e})):("single"===this.rowExpandMode&&(this.expandedRowKeys={}),this.expandedRowKeys[i]=!0,this.onRowExpand.emit({originalEvent:t,data:e})),t&&t.preventDefault(),this.isStateful()&&this.saveState()}isRowExpanded(e){return!0===this.expandedRowKeys[String(ObjectUtils.resolveFieldData(e,this.dataKey))]}isRowEditing(e){return!0===this.editingRowKeys[String(ObjectUtils.resolveFieldData(e,this.dataKey))]}isSingleSelectionMode(){return"single"===this.selectionMode}isMultipleSelectionMode(){return"multiple"===this.selectionMode}onColumnResizeBegin(e){let t=DomHandler.getOffset(this.containerViewChild.nativeElement).left;this.lastResizerHelperX=e.pageX-t+this.containerViewChild.nativeElement.scrollLeft,this.onColumnResize(e),e.preventDefault()}onColumnResize(e){let t=DomHandler.getOffset(this.containerViewChild.nativeElement).left;DomHandler.addClass(this.containerViewChild.nativeElement,"p-unselectable-text"),this.resizeHelperViewChild.nativeElement.style.height=this.containerViewChild.nativeElement.offsetHeight+"px",this.resizeHelperViewChild.nativeElement.style.top="0px",this.resizeHelperViewChild.nativeElement.style.left=e.pageX-t+this.containerViewChild.nativeElement.scrollLeft+"px",this.resizeHelperViewChild.nativeElement.style.display="block"}onColumnResizeEnd(e,t){let i=this.resizeHelperViewChild.nativeElement.offsetLeft-this.lastResizerHelperX,l=t.offsetWidth,n=parseInt(t.style.minWidth||15);l+i<n&&(i=n-l);const o=l+i;if(o>=n){if("fit"===this.columnResizeMode){let e=t.nextElementSibling;for(;!e.offsetParent;)e=e.nextElementSibling;if(e){let l=e.offsetWidth-i,n=e.style.minWidth||15;if(o>15&&l>parseInt(n))if(this.scrollable){let e=this.findParentScrollableView(t),i=DomHandler.findSingle(e,".p-datatable-scrollable-body table")||DomHandler.findSingle(e,".p-datatable-virtual-scrollable-body table"),n=DomHandler.findSingle(e,"table.p-datatable-scrollable-header-table"),s=DomHandler.findSingle(e,"table.p-datatable-scrollable-footer-table"),r=DomHandler.index(t);this.resizeColGroup(n,r,o,l),this.resizeColGroup(i,r,o,l),this.resizeColGroup(s,r,o,l)}else t.style.width=o+"px",e&&(e.style.width=l+"px")}}else if("expand"===this.columnResizeMode&&o>=n)if(this.scrollable)this.setScrollableItemsWidthOnExpandResize(t,o,i);else{this.tableViewChild.nativeElement.style.width=this.tableViewChild.nativeElement.offsetWidth+i+"px",t.style.width=o+"px";let e=this.tableViewChild.nativeElement.style.width;this.containerViewChild.nativeElement.style.width=e+"px"}this.onColResize.emit({element:t,delta:i}),this.isStateful()&&this.saveState()}this.resizeHelperViewChild.nativeElement.style.display="none",DomHandler.removeClass(this.containerViewChild.nativeElement,"p-unselectable-text")}setScrollableItemsWidthOnExpandResize(e,t,i){let l=e?this.findParentScrollableView(e):this.containerViewChild.nativeElement,n=DomHandler.findSingle(l,".p-datatable-scrollable-body")||DomHandler.findSingle(l,"cdk-virtual-scroll-viewport"),o=DomHandler.findSingle(l,".p-datatable-scrollable-header"),s=DomHandler.findSingle(l,".p-datatable-scrollable-footer"),r=DomHandler.findSingle(n,".p-datatable-scrollable-body table")||DomHandler.findSingle(l,"cdk-virtual-scroll-viewport table"),a=DomHandler.findSingle(o,"table.p-datatable-scrollable-header-table"),d=DomHandler.findSingle(s,"table.p-datatable-scrollable-footer-table");const h=e?r.offsetWidth+i:t,c=e?a.offsetWidth+i:t,p=this.containerViewChild.nativeElement.offsetWidth>=h;let u=(e,t,i,l)=>{e&&t&&(e.style.width=l?i+DomHandler.calculateScrollbarWidth(n)+"px":"auto",t.style.width=i+"px")};if(u(n,r,h,p),u(o,a,c,p),u(s,d,c,p),e){let i=DomHandler.index(e);this.resizeColGroup(a,i,t,null),this.resizeColGroup(r,i,t,null),this.resizeColGroup(d,i,t,null)}}findParentScrollableView(e){if(e){let t=e.parentElement;for(;t&&!DomHandler.hasClass(t,"p-datatable-scrollable-view");)t=t.parentElement;return t}return null}resizeColGroup(e,t,i,l){if(e){let n="COLGROUP"===e.children[0].nodeName?e.children[0]:null;if(!n)throw"Scrollable tables require a colgroup to support resizable columns";{let e=n.children[t],o=e.nextElementSibling;e.style.width=i+"px",o&&l&&(o.style.width=l+"px")}}}onColumnDragStart(e,t){this.reorderIconWidth=DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement),this.reorderIconHeight=DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement),this.draggedColumn=t,e.dataTransfer.setData("text","b")}onColumnDragEnter(e,t){if(this.reorderableColumns&&this.draggedColumn&&t){e.preventDefault();let i=DomHandler.getOffset(this.containerViewChild.nativeElement),l=DomHandler.getOffset(t);if(this.draggedColumn!=t){let n=DomHandler.indexWithinGroup(this.draggedColumn,"preorderablecolumn"),o=DomHandler.indexWithinGroup(t,"preorderablecolumn"),s=l.left-i.left,r=(i.top,l.top,l.left+t.offsetWidth/2);this.reorderIndicatorUpViewChild.nativeElement.style.top=l.top-i.top-(this.reorderIconHeight-1)+"px",this.reorderIndicatorDownViewChild.nativeElement.style.top=l.top-i.top+t.offsetHeight+"px",e.pageX>r?(this.reorderIndicatorUpViewChild.nativeElement.style.left=s+t.offsetWidth-Math.ceil(this.reorderIconWidth/2)+"px",this.reorderIndicatorDownViewChild.nativeElement.style.left=s+t.offsetWidth-Math.ceil(this.reorderIconWidth/2)+"px",this.dropPosition=1):(this.reorderIndicatorUpViewChild.nativeElement.style.left=s-Math.ceil(this.reorderIconWidth/2)+"px",this.reorderIndicatorDownViewChild.nativeElement.style.left=s-Math.ceil(this.reorderIconWidth/2)+"px",this.dropPosition=-1),o-n==1&&-1===this.dropPosition||o-n==-1&&1===this.dropPosition?(this.reorderIndicatorUpViewChild.nativeElement.style.display="none",this.reorderIndicatorDownViewChild.nativeElement.style.display="none"):(this.reorderIndicatorUpViewChild.nativeElement.style.display="block",this.reorderIndicatorDownViewChild.nativeElement.style.display="block")}else e.dataTransfer.dropEffect="none"}}onColumnDragLeave(e){this.reorderableColumns&&this.draggedColumn&&(e.preventDefault(),this.reorderIndicatorUpViewChild.nativeElement.style.display="none",this.reorderIndicatorDownViewChild.nativeElement.style.display="none")}onColumnDrop(e,t){if(e.preventDefault(),this.draggedColumn){let e=DomHandler.indexWithinGroup(this.draggedColumn,"preorderablecolumn"),i=DomHandler.indexWithinGroup(t,"preorderablecolumn"),l=e!=i;l&&(i-e==1&&-1===this.dropPosition||e-i==1&&1===this.dropPosition)&&(l=!1),l&&i<e&&1===this.dropPosition&&(i+=1),l&&i>e&&-1===this.dropPosition&&(i-=1),l&&(ObjectUtils.reorderArray(this.columns,e,i),this.onColReorder.emit({dragIndex:e,dropIndex:i,columns:this.columns}),this.isStateful()&&this.zone.runOutsideAngular(()=>{setTimeout(()=>{this.saveState()})})),this.reorderIndicatorUpViewChild.nativeElement.style.display="none",this.reorderIndicatorDownViewChild.nativeElement.style.display="none",this.draggedColumn.draggable=!1,this.draggedColumn=null,this.dropPosition=null}}onRowDragStart(e,t){this.rowDragging=!0,this.draggedRowIndex=t,e.dataTransfer.setData("text","b")}onRowDragOver(e,t,i){if(this.rowDragging&&this.draggedRowIndex!==t){let l=DomHandler.getOffset(i).top+DomHandler.getWindowScrollTop(),n=e.pageY,o=l+DomHandler.getOuterHeight(i)/2,s=i.previousElementSibling;n<o?(DomHandler.removeClass(i,"p-datatable-dragpoint-bottom"),this.droppedRowIndex=t,s?DomHandler.addClass(s,"p-datatable-dragpoint-bottom"):DomHandler.addClass(i,"p-datatable-dragpoint-top")):(s?DomHandler.removeClass(s,"p-datatable-dragpoint-bottom"):DomHandler.addClass(i,"p-datatable-dragpoint-top"),this.droppedRowIndex=t+1,DomHandler.addClass(i,"p-datatable-dragpoint-bottom"))}}onRowDragLeave(e,t){let i=t.previousElementSibling;i&&DomHandler.removeClass(i,"p-datatable-dragpoint-bottom"),DomHandler.removeClass(t,"p-datatable-dragpoint-bottom"),DomHandler.removeClass(t,"p-datatable-dragpoint-top")}onRowDragEnd(e){this.rowDragging=!1,this.draggedRowIndex=null,this.droppedRowIndex=null}onRowDrop(e,t){if(null!=this.droppedRowIndex){let e=this.draggedRowIndex>this.droppedRowIndex?this.droppedRowIndex:0===this.droppedRowIndex?0:this.droppedRowIndex-1;ObjectUtils.reorderArray(this.value,this.draggedRowIndex,e),this.onRowReorder.emit({dragIndex:this.draggedRowIndex,dropIndex:e})}this.onRowDragLeave(e,t),this.onRowDragEnd(e)}isEmpty(){let e=this.filteredValue||this.value;return null==e||0==e.length}getBlockableElement(){return this.el.nativeElement.children[0]}getStorage(){switch(this.stateStorage){case"local":return window.localStorage;case"session":return window.sessionStorage;default:throw new Error(this.stateStorage+' is not a valid value for the state storage, supported values are "local" and "session".')}}isStateful(){return null!=this.stateKey}saveState(){const e=this.getStorage();let t={};this.paginator&&(t.first=this.first,t.rows=this.rows),this.sortField&&(t.sortField=this.sortField,t.sortOrder=this.sortOrder),this.multiSortMeta&&(t.multiSortMeta=this.multiSortMeta),this.hasFilter()&&(t.filters=this.filters),this.resizableColumns&&this.saveColumnWidths(t),this.reorderableColumns&&this.saveColumnOrder(t),this.selection&&(t.selection=this.selection),Object.keys(this.expandedRowKeys).length&&(t.expandedRowKeys=this.expandedRowKeys),Object.keys(t).length&&e.setItem(this.stateKey,JSON.stringify(t)),this.onStateSave.emit(t)}clearState(){const e=this.getStorage();this.stateKey&&e.removeItem(this.stateKey)}restoreState(){const e=this.getStorage().getItem(this.stateKey);if(e){let t=JSON.parse(e);this.paginator&&(void 0!==this.first&&(this.first=t.first,this.firstChange.emit(this.first)),void 0!==this.rows&&(this.rows=t.rows,this.rowsChange.emit(this.rows))),t.sortField&&(this.restoringSort=!0,this._sortField=t.sortField,this._sortOrder=t.sortOrder),t.multiSortMeta&&(this.restoringSort=!0,this._multiSortMeta=t.multiSortMeta),t.filters&&(this.restoringFilter=!0,this.filters=t.filters),this.resizableColumns&&(this.columnWidthsState=t.columnWidths,this.tableWidthState=t.tableWidth),t.expandedRowKeys&&(this.expandedRowKeys=t.expandedRowKeys),t.selection&&Promise.resolve(null).then(()=>this.selectionChange.emit(t.selection)),this.stateRestored=!0,this.onStateRestore.emit(t)}}saveColumnWidths(e){let t=[];DomHandler.find(this.containerViewChild.nativeElement,".p-datatable-thead > tr:first-child > th").map(e=>t.push(DomHandler.getOuterWidth(e))),e.columnWidths=t.join(","),"expand"===this.columnResizeMode&&(e.tableWidth=this.scrollable?DomHandler.findSingle(this.containerViewChild.nativeElement,".p-datatable-scrollable-header-table").style.width:DomHandler.getOuterWidth(this.tableViewChild.nativeElement)+"px")}restoreColumnWidths(){if(this.columnWidthsState){let e=this.columnWidthsState.split(",");if("expand"===this.columnResizeMode&&this.tableWidthState&&(this.scrollable?this.setScrollableItemsWidthOnExpandResize(null,this.tableWidthState,0):(this.tableViewChild.nativeElement.style.width=this.tableWidthState,this.containerViewChild.nativeElement.style.width=this.tableWidthState)),this.scrollable){let t=DomHandler.find(this.containerViewChild.nativeElement,".p-datatable-scrollable-header-table > colgroup > col"),i=this.virtualScroll?DomHandler.find(this.containerViewChild.nativeElement,"cdk-virtual-scroll-viewport table > colgroup > col"):DomHandler.find(this.containerViewChild.nativeElement,".p-datatable-scrollable-body table > colgroup > col");t.map((t,i)=>t.style.width=e[i]+"px"),i.map((t,i)=>t.style.width=e[i]+"px")}else{DomHandler.find(this.tableViewChild.nativeElement,".p-datatable-thead > tr:first-child > th").map((t,i)=>t.style.width=e[i]+"px")}}}saveColumnOrder(e){if(this.columns){let t=[];this.columns.map(e=>{t.push(e.field||e.key)}),e.columnOrder=t}}restoreColumnOrder(){const e=this.getStorage().getItem(this.stateKey);if(e){let t=JSON.parse(e).columnOrder;if(t){let e=[];t.map(t=>{let i=this.findColumnByKey(t);i&&e.push(i)}),this.columnOrderStateRestored=!0,this.columns=e}}}findColumnByKey(e){if(!this.columns)return null;for(let t of this.columns)if(t.key===e||t.field===e)return t}ngOnDestroy(){this.unbindDocumentEditListener(),this.editingCell=null,this.initialized=null}};Table.decorators=[{type:Component,args:[{selector:"p-table",template:'\n        <div #container [ngStyle]="style" [class]="styleClass" data-scrollselectors=".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body"\n            [ngClass]="{\'p-datatable p-component\': true,\n                \'p-datatable-hoverable-rows\': (rowHover||selectionMode),\n                \'p-datatable-auto-layout\': autoLayout,\n                \'p-datatable-resizable\': resizableColumns,\n                \'p-datatable-resizable-fit\': (resizableColumns && columnResizeMode === \'fit\'),\n                \'p-datatable-scrollable\': scrollable,\n                \'p-datatable-flex-scrollable\': (scrollable && scrollHeight === \'flex\'),\n                \'p-datatable-responsive\': responsive}">\n            <div class="p-datatable-loading-overlay p-component-overlay" *ngIf="loading && showLoader">\n                <i [class]="\'p-datatable-loading-icon pi-spin \' + loadingIcon"></i>\n            </div>\n            <div *ngIf="captionTemplate" class="p-datatable-header">\n                <ng-container *ngTemplateOutlet="captionTemplate"></ng-container>\n            </div>\n            <p-paginator [rows]="rows" [first]="first" [totalRecords]="totalRecords" [pageLinkSize]="pageLinks" styleClass="p-paginator-top" [alwaysShow]="alwaysShowPaginator"\n                (onPageChange)="onPageChange($event)" [rowsPerPageOptions]="rowsPerPageOptions" *ngIf="paginator && (paginatorPosition === \'top\' || paginatorPosition ==\'both\')"\n                [templateLeft]="paginatorLeftTemplate" [templateRight]="paginatorRightTemplate" [dropdownAppendTo]="paginatorDropdownAppendTo" [dropdownScrollHeight]="paginatorDropdownScrollHeight"\n                [currentPageReportTemplate]="currentPageReportTemplate" [showFirstLastIcon]="showFirstLastIcon" [dropdownItemTemplate]="paginatorDropdownItemTemplate" [showCurrentPageReport]="showCurrentPageReport" [showJumpToPageDropdown]="showJumpToPageDropdown" [showPageLinks]="showPageLinks"></p-paginator>\n\n            <div class="p-datatable-wrapper" *ngIf="!scrollable">\n                <table role="grid" #table [ngClass]="tableStyleClass" [ngStyle]="tableStyle">\n                    <ng-container *ngTemplateOutlet="colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <thead class="p-datatable-thead">\n                        <ng-container *ngTemplateOutlet="headerTemplate; context: {$implicit: columns}"></ng-container>\n                    </thead>\n                    <tbody class="p-datatable-tbody" [pTableBody]="columns" [pTableBodyTemplate]="bodyTemplate"></tbody>\n                    <tfoot *ngIf="footerTemplate" class="p-datatable-tfoot">\n                        <ng-container *ngTemplateOutlet="footerTemplate; context {$implicit: columns}"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class="p-datatable-scrollable-wrapper" *ngIf="scrollable">\n               <div class="p-datatable-scrollable-view p-datatable-frozen-view" *ngIf="frozenColumns||frozenBodyTemplate" #scrollableFrozenView [pScrollableView]="frozenColumns" [frozen]="true" [ngStyle]="{width: frozenWidth}" [scrollHeight]="scrollHeight"></div>\n               <div class="p-datatable-scrollable-view" #scrollableView [pScrollableView]="columns" [frozen]="false" [scrollHeight]="scrollHeight" [ngStyle]="{left: frozenWidth, width: \'calc(100% - \'+frozenWidth+\')\'}"></div>\n            </div>\n\n            <p-paginator [rows]="rows" [first]="first" [totalRecords]="totalRecords" [pageLinkSize]="pageLinks" styleClass="p-paginator-bottom" [alwaysShow]="alwaysShowPaginator"\n                (onPageChange)="onPageChange($event)" [rowsPerPageOptions]="rowsPerPageOptions" *ngIf="paginator && (paginatorPosition === \'bottom\' || paginatorPosition ==\'both\')"\n                [templateLeft]="paginatorLeftTemplate" [templateRight]="paginatorRightTemplate" [dropdownAppendTo]="paginatorDropdownAppendTo" [dropdownScrollHeight]="paginatorDropdownScrollHeight"\n                [currentPageReportTemplate]="currentPageReportTemplate" [showFirstLastIcon]="showFirstLastIcon" [dropdownItemTemplate]="paginatorDropdownItemTemplate" [showCurrentPageReport]="showCurrentPageReport" [showJumpToPageDropdown]="showJumpToPageDropdown" [showPageLinks]="showPageLinks"></p-paginator>\n\n            <div *ngIf="summaryTemplate" class="p-datatable-footer">\n                <ng-container *ngTemplateOutlet="summaryTemplate"></ng-container>\n            </div>\n\n            <div #resizeHelper class="p-column-resizer-helper" style="display:none" *ngIf="resizableColumns"></div>\n            <span #reorderIndicatorUp class="pi pi-arrow-down p-datatable-reorder-indicator-up" style="display:none" *ngIf="reorderableColumns"></span>\n            <span #reorderIndicatorDown class="pi pi-arrow-up p-datatable-reorder-indicator-down" style="display:none" *ngIf="reorderableColumns"></span>\n        </div>\n    ',providers:[TableService],changeDetection:ChangeDetectionStrategy.Default,encapsulation:ViewEncapsulation.None,styles:[".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;table-layout:fixed;width:100%}.p-datatable .p-sortable-column{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-badge,.p-datatable .p-sortable-column .p-sortable-column-icon{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{align-items:center;display:inline-flex;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable-wrapper{position:relative}.p-datatable-scrollable-footer,.p-datatable-scrollable-header{overflow:hidden}.p-datatable-scrollable-body{overflow:auto;position:relative}.p-datatable-scrollable-body>table>.p-datatable-tbody>tr:first-child>td{border-top:0}.p-datatable-virtual-table{position:absolute}.p-datatable-frozen-view .p-datatable-scrollable-body{overflow:hidden}.p-datatable-frozen-view>.p-datatable-scrollable-body>table>.p-datatable-tbody>tr>td:last-child{border-right:0}.p-datatable-unfrozen-view{position:absolute;top:0}.p-datatable-flex-scrollable,.p-datatable-flex-scrollable .p-datatable-scrollable-view,.p-datatable-flex-scrollable .p-datatable-scrollable-wrapper{display:flex;flex:1;flex-direction:column;height:100%}.p-datatable-flex-scrollable .p-datatable-scrollable-body,.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-tbody>tr>td,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-thead>tr>th{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{border:1px solid transparent;cursor:col-resize;display:block;height:100%;margin:0;padding:0;position:absolute!important;right:0;top:0;width:.5rem}.p-datatable .p-column-resizer-helper{display:none;position:absolute;width:1px;z-index:10}.p-datatable .p-row-editor-cancel,.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-toggler{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-down,.p-datatable-reorder-indicator-up{display:none;position:absolute}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{align-items:center;display:flex;justify-content:center;position:absolute;z-index:2}.p-column-filter-row{align-items:center;display:flex;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-clear-button,.p-column-filter-menu-button{align-items:center;cursor:pointer;display:inline-flex;justify-content:center;overflow:hidden;position:relative;text-decoration:none}.p-column-filter-overlay{position:absolute}.p-column-filter-row-items{list-style:none;margin:0;padding:0}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{align-items:center;display:flex;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}@media screen and (max-width:40em){.p-datatable.p-datatable-responsive .p-datatable-tfoot>tr>td,.p-datatable.p-datatable-responsive .p-datatable-thead>tr>th{display:none!important}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td{border:0;clear:left;display:block;float:left;text-align:left;width:100%}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{display:inline-block;font-weight:700;margin:-.4em 1em -.4em -.4rem;min-width:30%;padding:.4rem}}"]}]}],Table.ctorParameters=(()=>[{type:ElementRef},{type:NgZone},{type:TableService},{type:ChangeDetectorRef},{type:FilterService}]),Table.propDecorators={frozenColumns:[{type:Input}],frozenValue:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],tableStyle:[{type:Input}],tableStyleClass:[{type:Input}],paginator:[{type:Input}],pageLinks:[{type:Input}],rowsPerPageOptions:[{type:Input}],alwaysShowPaginator:[{type:Input}],paginatorPosition:[{type:Input}],paginatorDropdownAppendTo:[{type:Input}],paginatorDropdownScrollHeight:[{type:Input}],currentPageReportTemplate:[{type:Input}],showCurrentPageReport:[{type:Input}],showJumpToPageDropdown:[{type:Input}],showFirstLastIcon:[{type:Input}],showPageLinks:[{type:Input}],defaultSortOrder:[{type:Input}],sortMode:[{type:Input}],resetPageOnSort:[{type:Input}],selectionMode:[{type:Input}],selectionChange:[{type:Output}],contextMenuSelection:[{type:Input}],contextMenuSelectionChange:[{type:Output}],contextMenuSelectionMode:[{type:Input}],dataKey:[{type:Input}],metaKeySelection:[{type:Input}],rowTrackBy:[{type:Input}],lazy:[{type:Input}],lazyLoadOnInit:[{type:Input}],compareSelectionBy:[{type:Input}],csvSeparator:[{type:Input}],exportFilename:[{type:Input}],filters:[{type:Input}],globalFilterFields:[{type:Input}],filterDelay:[{type:Input}],filterLocale:[{type:Input}],expandedRowKeys:[{type:Input}],editingRowKeys:[{type:Input}],rowExpandMode:[{type:Input}],scrollable:[{type:Input}],scrollHeight:[{type:Input}],virtualScroll:[{type:Input}],virtualScrollDelay:[{type:Input}],virtualRowHeight:[{type:Input}],frozenWidth:[{type:Input}],responsive:[{type:Input}],contextMenu:[{type:Input}],resizableColumns:[{type:Input}],columnResizeMode:[{type:Input}],reorderableColumns:[{type:Input}],loading:[{type:Input}],loadingIcon:[{type:Input}],showLoader:[{type:Input}],rowHover:[{type:Input}],customSort:[{type:Input}],autoLayout:[{type:Input}],exportFunction:[{type:Input}],stateKey:[{type:Input}],stateStorage:[{type:Input}],editMode:[{type:Input}],minBufferPx:[{type:Input}],maxBufferPx:[{type:Input}],onRowSelect:[{type:Output}],onRowUnselect:[{type:Output}],onPage:[{type:Output}],onSort:[{type:Output}],onFilter:[{type:Output}],onLazyLoad:[{type:Output}],onRowExpand:[{type:Output}],onRowCollapse:[{type:Output}],onContextMenuSelect:[{type:Output}],onColResize:[{type:Output}],onColReorder:[{type:Output}],onRowReorder:[{type:Output}],onEditInit:[{type:Output}],onEditComplete:[{type:Output}],onEditCancel:[{type:Output}],onHeaderCheckboxToggle:[{type:Output}],sortFunction:[{type:Output}],firstChange:[{type:Output}],rowsChange:[{type:Output}],onStateSave:[{type:Output}],onStateRestore:[{type:Output}],containerViewChild:[{type:ViewChild,args:["container"]}],resizeHelperViewChild:[{type:ViewChild,args:["resizeHelper"]}],reorderIndicatorUpViewChild:[{type:ViewChild,args:["reorderIndicatorUp"]}],reorderIndicatorDownViewChild:[{type:ViewChild,args:["reorderIndicatorDown"]}],tableViewChild:[{type:ViewChild,args:["table"]}],scrollableViewChild:[{type:ViewChild,args:["scrollableView"]}],scrollableFrozenViewChild:[{type:ViewChild,args:["scrollableFrozenView"]}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],value:[{type:Input}],columns:[{type:Input}],first:[{type:Input}],rows:[{type:Input}],totalRecords:[{type:Input}],sortField:[{type:Input}],sortOrder:[{type:Input}],multiSortMeta:[{type:Input}],selection:[{type:Input}]};export class TableBody{constructor(e,t,i){this.dt=e,this.tableService=t,this.cd=i,this.subscription=this.dt.tableService.valueSource$.subscribe(()=>{this.dt.virtualScroll&&this.cd.detectChanges()})}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}};TableBody.decorators=[{type:Component,args:[{selector:"[pTableBody]",template:'\n        <ng-container *ngIf="!dt.expandedRowTemplate && !dt.virtualScroll">\n            <ng-template ngFor let-rowData let-rowIndex="index" [ngForOf]="(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)" [ngForTrackBy]="dt.rowTrackBy">\n                <ng-container *ngTemplateOutlet="template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === \'row\' && dt.isRowEditing(rowData))}"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf="!dt.expandedRowTemplate && dt.virtualScroll">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex="index" [cdkVirtualForOf]="dt.filteredValue||dt.value" [cdkVirtualForTrackBy]="dt.rowTrackBy" [cdkVirtualForTemplateCacheSize]="0">\n                <ng-container *ngTemplateOutlet="rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === \'row\' && dt.isRowEditing(rowData))}"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf="dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)">\n            <ng-template ngFor let-rowData let-rowIndex="index" [ngForOf]="(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)" [ngForTrackBy]="dt.rowTrackBy">\n                <ng-container *ngTemplateOutlet="template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === \'row\' && dt.isRowEditing(rowData))}"></ng-container>\n                <ng-container *ngIf="dt.isRowExpanded(rowData)">\n                    <ng-container *ngTemplateOutlet="dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf="dt.frozenExpandedRowTemplate && frozen">\n            <ng-template ngFor let-rowData let-rowIndex="index" [ngForOf]="(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)" [ngForTrackBy]="dt.rowTrackBy">\n                <ng-container *ngTemplateOutlet="template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === \'row\' && dt.isRowEditing(rowData))}"></ng-container>\n                <ng-container *ngIf="dt.isRowExpanded(rowData)">\n                    <ng-container *ngTemplateOutlet="dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf="dt.loading">\n            <ng-container *ngTemplateOutlet="dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}"></ng-container>\n        </ng-container>\n        <ng-container *ngIf="dt.isEmpty() && !dt.loading">\n            <ng-container *ngTemplateOutlet="dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}"></ng-container>\n        </ng-container>\n    ',changeDetection:ChangeDetectionStrategy.Default,encapsulation:ViewEncapsulation.None}]}],TableBody.ctorParameters=(()=>[{type:Table},{type:TableService},{type:ChangeDetectorRef}]),TableBody.propDecorators={columns:[{type:Input,args:["pTableBody"]}],template:[{type:Input,args:["pTableBodyTemplate"]}],frozen:[{type:Input}]};export class ScrollableView{constructor(e,t,i){this.dt=e,this.el=t,this.zone=i}get scrollHeight(){return this._scrollHeight}set scrollHeight(e){this._scrollHeight=e,null!=e&&(e.includes("%")||e.includes("calc"))&&console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight="flex" instead.'),this.dt.virtualScroll&&this.virtualScrollBody&&this.virtualScrollBody.ngOnInit()}ngAfterViewInit(){if(this.frozen)this.scrollableAlignerViewChild&&this.scrollableAlignerViewChild.nativeElement&&(this.scrollableAlignerViewChild.nativeElement.style.height=DomHandler.calculateScrollbarHeight()+"px");else{(this.dt.frozenColumns||this.dt.frozenBodyTemplate)&&DomHandler.addClass(this.el.nativeElement,"p-datatable-unfrozen-view");let e=this.el.nativeElement.previousElementSibling;e&&(this.dt.virtualScroll?this.frozenSiblingBody=DomHandler.findSingle(e,".p-datatable-virtual-scrollable-body"):this.frozenSiblingBody=DomHandler.findSingle(e,".p-datatable-scrollable-body"));let t=DomHandler.calculateScrollbarWidth();this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight=t+"px",this.scrollFooterBoxViewChild&&this.scrollFooterBoxViewChild.nativeElement&&(this.scrollFooterBoxViewChild.nativeElement.style.paddingRight=t+"px")}this.bindEvents()}bindEvents(){this.zone.runOutsideAngular(()=>{this.scrollHeaderViewChild&&this.scrollHeaderViewChild.nativeElement&&(this.headerScrollListener=this.onHeaderScroll.bind(this),this.scrollHeaderViewChild.nativeElement.addEventListener("scroll",this.headerScrollListener)),this.scrollFooterViewChild&&this.scrollFooterViewChild.nativeElement&&(this.footerScrollListener=this.onFooterScroll.bind(this),this.scrollFooterViewChild.nativeElement.addEventListener("scroll",this.footerScrollListener)),this.frozen||(this.bodyScrollListener=this.onBodyScroll.bind(this),this.dt.virtualScroll?this.virtualScrollBody.getElementRef().nativeElement.addEventListener("scroll",this.bodyScrollListener):this.scrollBodyViewChild.nativeElement.addEventListener("scroll",this.bodyScrollListener))})}unbindEvents(){this.scrollHeaderViewChild&&this.scrollHeaderViewChild.nativeElement&&this.scrollHeaderViewChild.nativeElement.removeEventListener("scroll",this.headerScrollListener),this.scrollFooterViewChild&&this.scrollFooterViewChild.nativeElement&&this.scrollFooterViewChild.nativeElement.removeEventListener("scroll",this.footerScrollListener),this.scrollBodyViewChild&&this.scrollBodyViewChild.nativeElement&&this.scrollBodyViewChild.nativeElement.removeEventListener("scroll",this.bodyScrollListener),this.virtualScrollBody&&this.virtualScrollBody.getElementRef()&&this.virtualScrollBody.getElementRef().nativeElement.removeEventListener("scroll",this.bodyScrollListener)}onHeaderScroll(){const e=this.scrollHeaderViewChild.nativeElement.scrollLeft;this.scrollBodyViewChild.nativeElement.scrollLeft=e,this.scrollFooterViewChild&&this.scrollFooterViewChild.nativeElement&&(this.scrollFooterViewChild.nativeElement.scrollLeft=e),this.preventBodyScrollPropagation=!0}onFooterScroll(){const e=this.scrollFooterViewChild.nativeElement.scrollLeft;this.scrollBodyViewChild.nativeElement.scrollLeft=e,this.scrollHeaderViewChild&&this.scrollHeaderViewChild.nativeElement&&(this.scrollHeaderViewChild.nativeElement.scrollLeft=e),this.preventBodyScrollPropagation=!0}onBodyScroll(e){this.preventBodyScrollPropagation?this.preventBodyScrollPropagation=!1:(this.scrollHeaderViewChild&&this.scrollHeaderViewChild.nativeElement&&(this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft=-1*e.target.scrollLeft+"px"),this.scrollFooterViewChild&&this.scrollFooterViewChild.nativeElement&&(this.scrollFooterBoxViewChild.nativeElement.style.marginLeft=-1*e.target.scrollLeft+"px"),this.frozenSiblingBody&&(this.frozenSiblingBody.scrollTop=e.target.scrollTop))}onScrollIndexChange(e){this.dt.lazy&&(this.virtualScrollTimeout&&clearTimeout(this.virtualScrollTimeout),this.virtualScrollTimeout=setTimeout(()=>{let t=Math.floor(e/this.dt.rows),i=0===t?0:(t-1)*this.dt.rows,l=0===t?2*this.dt.rows:3*this.dt.rows;t!==this.virtualPage&&(this.virtualPage=t,this.dt.onLazyLoad.emit({first:i,rows:l,sortField:this.dt.sortField,sortOrder:this.dt.sortOrder,filters:this.dt.filters,globalFilter:this.dt.filters&&this.dt.filters.global?this.dt.filters.global.value:null,multiSortMeta:this.dt.multiSortMeta}))},this.dt.virtualScrollDelay))}getPageCount(){let e=this.dt.filteredValue||this.dt.value,t=e?e.length:0;return Math.ceil(t/this.dt.rows)}scrollToVirtualIndex(e){this.virtualScrollBody&&this.virtualScrollBody.scrollToIndex(e)}scrollTo(e){this.virtualScrollBody?this.virtualScrollBody.scrollTo(e):this.scrollBodyViewChild.nativeElement.scrollTo?this.scrollBodyViewChild.nativeElement.scrollTo(e):(this.scrollBodyViewChild.nativeElement.scrollLeft=e.left,this.scrollBodyViewChild.nativeElement.scrollTop=e.top)}ngOnDestroy(){this.unbindEvents(),this.frozenSiblingBody=null}};ScrollableView.decorators=[{type:Component,args:[{selector:"[pScrollableView]",template:'\n        <div #scrollHeader class="p-datatable-scrollable-header">\n            <div #scrollHeaderBox class="p-datatable-scrollable-header-box">\n                <table class="p-datatable-scrollable-header-table" [ngClass]="dt.tableStyleClass" [ngStyle]="dt.tableStyle">\n                    <ng-container *ngTemplateOutlet="frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <thead class="p-datatable-thead">\n                        <ng-container *ngTemplateOutlet="frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}"></ng-container>\n                    </thead>\n                    <tbody class="p-datatable-tbody">\n                        <ng-template ngFor let-rowData let-rowIndex="index" [ngForOf]="dt.frozenValue" [ngForTrackBy]="dt.rowTrackBy">\n                            <ng-container *ngTemplateOutlet="dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}"></ng-container>\n                        </ng-template>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <ng-container *ngIf="!dt.virtualScroll; else virtualScrollTemplate">\n            <div #scrollBody class="p-datatable-scrollable-body" [ngStyle]="{\'max-height\': dt.scrollHeight !== \'flex\' ? scrollHeight : undefined, \'overflow-y\': !frozen && dt.scrollHeight ? \'scroll\' : undefined}">\n                <table #scrollTable [class]="dt.tableStyleClass" [ngStyle]="dt.tableStyle">\n                    <ng-container *ngTemplateOutlet="frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <tbody class="p-datatable-tbody" [pTableBody]="columns" [pTableBodyTemplate]="frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate" [frozen]="frozen"></tbody>\n                </table>\n                <div #scrollableAligner style="background-color:transparent" *ngIf="frozen"></div>\n            </div>\n        </ng-container>\n        <ng-template #virtualScrollTemplate>\n            <cdk-virtual-scroll-viewport [itemSize]="dt.virtualRowHeight" tabindex="0" [style.height]="dt.scrollHeight !== \'flex\' ? scrollHeight : undefined"\n                    [minBufferPx]="dt.minBufferPx" [maxBufferPx]="dt.maxBufferPx" (scrolledIndexChange)="onScrollIndexChange($event)" class="p-datatable-virtual-scrollable-body">\n                <table #scrollTable [class]="dt.tableStyleClass" [ngStyle]="dt.tableStyle">\n                    <ng-container *ngTemplateOutlet="frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <tbody class="p-datatable-tbody" [pTableBody]="columns" [pTableBodyTemplate]="frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate" [frozen]="frozen"></tbody>\n                </table>\n                <div #scrollableAligner style="background-color:transparent" *ngIf="frozen"></div>\n            </cdk-virtual-scroll-viewport>\n        </ng-template>\n        <div #scrollFooter class="p-datatable-scrollable-footer">\n            <div #scrollFooterBox class="p-datatable-scrollable-footer-box">\n                <table class="p-datatable-scrollable-footer-table" [ngClass]="dt.tableStyleClass" [ngStyle]="dt.tableStyle">\n                    <ng-container *ngTemplateOutlet="frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <tfoot class="p-datatable-tfoot">\n                        <ng-container *ngTemplateOutlet="frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.Default,encapsulation:ViewEncapsulation.None}]}],ScrollableView.ctorParameters=(()=>[{type:Table},{type:ElementRef},{type:NgZone}]),ScrollableView.propDecorators={columns:[{type:Input,args:["pScrollableView"]}],frozen:[{type:Input}],scrollHeaderViewChild:[{type:ViewChild,args:["scrollHeader"]}],scrollHeaderBoxViewChild:[{type:ViewChild,args:["scrollHeaderBox"]}],scrollBodyViewChild:[{type:ViewChild,args:["scrollBody"]}],scrollTableViewChild:[{type:ViewChild,args:["scrollTable"]}],scrollFooterViewChild:[{type:ViewChild,args:["scrollFooter"]}],scrollFooterBoxViewChild:[{type:ViewChild,args:["scrollFooterBox"]}],scrollableAlignerViewChild:[{type:ViewChild,args:["scrollableAligner"]}],virtualScrollBody:[{type:ViewChild,args:[CdkVirtualScrollViewport]}],scrollHeight:[{type:Input}]};export class SortableColumn{constructor(e){this.dt=e,this.isEnabled()&&(this.subscription=this.dt.tableService.sortSource$.subscribe(e=>{this.updateSortState()}))}ngOnInit(){this.isEnabled()&&this.updateSortState()}updateSortState(){this.sorted=this.dt.isSorted(this.field),this.sortOrder=this.sorted?1===this.dt.sortOrder?"ascending":"descending":"none"}onClick(e){this.isEnabled()&&!this.isFilterElement(e.target)&&(this.updateSortState(),this.dt.sort({originalEvent:e,field:this.field}),DomHandler.clearSelection())}onEnterKey(e){this.onClick(e)}isEnabled(){return!0!==this.pSortableColumnDisabled}isFilterElement(e){return DomHandler.hasClass(e,"pi-filter-icon")||DomHandler.hasClass(e,"p-column-filter-menu-button")}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}};SortableColumn.decorators=[{type:Directive,args:[{selector:"[pSortableColumn]",host:{"[class.p-sortable-column]":"isEnabled()","[class.p-highlight]":"sorted","[attr.tabindex]":'isEnabled() ? "0" : null',"[attr.role]":'"columnheader"',"[attr.aria-sort]":"sortOrder"}}]}],SortableColumn.ctorParameters=(()=>[{type:Table}]),SortableColumn.propDecorators={field:[{type:Input,args:["pSortableColumn"]}],pSortableColumnDisabled:[{type:Input}],onClick:[{type:HostListener,args:["click",["$event"]]}],onEnterKey:[{type:HostListener,args:["keydown.enter",["$event"]]}]};export class SortIcon{constructor(e,t){this.dt=e,this.cd=t,this.subscription=this.dt.tableService.sortSource$.subscribe(e=>{this.updateSortState()})}ngOnInit(){this.updateSortState()}onClick(e){e.preventDefault()}updateSortState(){if("single"===this.dt.sortMode)this.sortOrder=this.dt.isSorted(this.field)?this.dt.sortOrder:0;else if("multiple"===this.dt.sortMode){let e=this.dt.getSortMeta(this.field);this.sortOrder=e?e.order:0}this.cd.markForCheck()}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}};SortIcon.decorators=[{type:Component,args:[{selector:"p-sortIcon",template:"\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n    ",changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],SortIcon.ctorParameters=(()=>[{type:Table},{type:ChangeDetectorRef}]),SortIcon.propDecorators={field:[{type:Input}]};export class SelectableRow{constructor(e,t){this.dt=e,this.tableService=t,this.isEnabled()&&(this.subscription=this.dt.tableService.selectionSource$.subscribe(()=>{this.selected=this.dt.isSelected(this.data)}))}ngOnInit(){this.isEnabled()&&(this.selected=this.dt.isSelected(this.data))}onClick(e){this.isEnabled()&&this.dt.handleRowClick({originalEvent:e,rowData:this.data,rowIndex:this.index})}onTouchEnd(e){this.isEnabled()&&this.dt.handleRowTouchEnd(e)}onArrowDownKeyDown(e){if(!this.isEnabled())return;const t=e.currentTarget,i=this.findNextSelectableRow(t);i&&i.focus(),e.preventDefault()}onArrowUpKeyDown(e){if(!this.isEnabled())return;const t=e.currentTarget,i=this.findPrevSelectableRow(t);i&&i.focus(),e.preventDefault()}onEnterKeyDown(e){this.isEnabled()&&this.dt.handleRowClick({originalEvent:e,rowData:this.data,rowIndex:this.index})}findNextSelectableRow(e){let t=e.nextElementSibling;return t?DomHandler.hasClass(t,"p-selectable-row")?t:this.findNextSelectableRow(t):null}findPrevSelectableRow(e){let t=e.previousElementSibling;return t?DomHandler.hasClass(t,"p-selectable-row")?t:this.findPrevSelectableRow(t):null}isEnabled(){return!0!==this.pSelectableRowDisabled}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}};SelectableRow.decorators=[{type:Directive,args:[{selector:"[pSelectableRow]",host:{"[class.p-selectable-row]":"isEnabled()","[class.p-highlight]":"selected","[attr.tabindex]":"isEnabled() ? 0 : undefined"}}]}],SelectableRow.ctorParameters=(()=>[{type:Table},{type:TableService}]),SelectableRow.propDecorators={data:[{type:Input,args:["pSelectableRow"]}],index:[{type:Input,args:["pSelectableRowIndex"]}],pSelectableRowDisabled:[{type:Input}],onClick:[{type:HostListener,args:["click",["$event"]]}],onTouchEnd:[{type:HostListener,args:["touchend",["$event"]]}],onArrowDownKeyDown:[{type:HostListener,args:["keydown.arrowdown",["$event"]]}],onArrowUpKeyDown:[{type:HostListener,args:["keydown.arrowup",["$event"]]}],onEnterKeyDown:[{type:HostListener,args:["keydown.enter",["$event"]]},{type:HostListener,args:["keydown.shift.enter",["$event"]]},{type:HostListener,args:["keydown.meta.enter",["$event"]]}]};export class SelectableRowDblClick{constructor(e,t){this.dt=e,this.tableService=t,this.isEnabled()&&(this.subscription=this.dt.tableService.selectionSource$.subscribe(()=>{this.selected=this.dt.isSelected(this.data)}))}ngOnInit(){this.isEnabled()&&(this.selected=this.dt.isSelected(this.data))}onClick(e){this.isEnabled()&&this.dt.handleRowClick({originalEvent:e,rowData:this.data,rowIndex:this.index})}isEnabled(){return!0!==this.pSelectableRowDisabled}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}};SelectableRowDblClick.decorators=[{type:Directive,args:[{selector:"[pSelectableRowDblClick]",host:{"[class.p-selectable-row]":"isEnabled()","[class.p-highlight]":"selected"}}]}],SelectableRowDblClick.ctorParameters=(()=>[{type:Table},{type:TableService}]),SelectableRowDblClick.propDecorators={data:[{type:Input,args:["pSelectableRowDblClick"]}],index:[{type:Input,args:["pSelectableRowIndex"]}],pSelectableRowDisabled:[{type:Input}],onClick:[{type:HostListener,args:["dblclick",["$event"]]}]};export class ContextMenuRow{constructor(e,t,i){this.dt=e,this.tableService=t,this.el=i,this.isEnabled()&&(this.subscription=this.dt.tableService.contextMenuSource$.subscribe(e=>{this.selected=this.dt.equals(this.data,e)}))}onContextMenu(e){this.isEnabled()&&(this.dt.handleRowRightClick({originalEvent:e,rowData:this.data,rowIndex:this.index}),this.el.nativeElement.focus(),e.preventDefault())}isEnabled(){return!0!==this.pContextMenuRowDisabled}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}};ContextMenuRow.decorators=[{type:Directive,args:[{selector:"[pContextMenuRow]",host:{"[class.p-highlight-contextmenu]":"selected","[attr.tabindex]":"isEnabled() ? 0 : undefined"}}]}],ContextMenuRow.ctorParameters=(()=>[{type:Table},{type:TableService},{type:ElementRef}]),ContextMenuRow.propDecorators={data:[{type:Input,args:["pContextMenuRow"]}],index:[{type:Input,args:["pContextMenuRowIndex"]}],pContextMenuRowDisabled:[{type:Input}],onContextMenu:[{type:HostListener,args:["contextmenu",["$event"]]}]};export class RowToggler{constructor(e){this.dt=e}onClick(e){this.isEnabled()&&(this.dt.toggleRow(this.data,e),e.preventDefault())}isEnabled(){return!0!==this.pRowTogglerDisabled}};RowToggler.decorators=[{type:Directive,args:[{selector:"[pRowToggler]"}]}],RowToggler.ctorParameters=(()=>[{type:Table}]),RowToggler.propDecorators={data:[{type:Input,args:["pRowToggler"]}],pRowTogglerDisabled:[{type:Input}],onClick:[{type:HostListener,args:["click",["$event"]]}]};export class ResizableColumn{constructor(e,t,i){this.dt=e,this.el=t,this.zone=i}ngAfterViewInit(){this.isEnabled()&&(DomHandler.addClass(this.el.nativeElement,"p-resizable-column"),this.resizer=document.createElement("span"),this.resizer.className="p-column-resizer",this.el.nativeElement.appendChild(this.resizer),this.zone.runOutsideAngular(()=>{this.resizerMouseDownListener=this.onMouseDown.bind(this),this.resizer.addEventListener("mousedown",this.resizerMouseDownListener)}))}bindDocumentEvents(){this.zone.runOutsideAngular(()=>{this.documentMouseMoveListener=this.onDocumentMouseMove.bind(this),document.addEventListener("mousemove",this.documentMouseMoveListener),this.documentMouseUpListener=this.onDocumentMouseUp.bind(this),document.addEventListener("mouseup",this.documentMouseUpListener)})}unbindDocumentEvents(){this.documentMouseMoveListener&&(document.removeEventListener("mousemove",this.documentMouseMoveListener),this.documentMouseMoveListener=null),this.documentMouseUpListener&&(document.removeEventListener("mouseup",this.documentMouseUpListener),this.documentMouseUpListener=null)}onMouseDown(e){1===e.which&&(this.dt.onColumnResizeBegin(e),this.bindDocumentEvents())}onDocumentMouseMove(e){this.dt.onColumnResize(e)}onDocumentMouseUp(e){this.dt.onColumnResizeEnd(e,this.el.nativeElement),this.unbindDocumentEvents()}isEnabled(){return!0!==this.pResizableColumnDisabled}ngOnDestroy(){this.resizerMouseDownListener&&this.resizer.removeEventListener("mousedown",this.resizerMouseDownListener),this.unbindDocumentEvents()}};ResizableColumn.decorators=[{type:Directive,args:[{selector:"[pResizableColumn]"}]}],ResizableColumn.ctorParameters=(()=>[{type:Table},{type:ElementRef},{type:NgZone}]),ResizableColumn.propDecorators={pResizableColumnDisabled:[{type:Input}]};export class ReorderableColumn{constructor(e,t,i){this.dt=e,this.el=t,this.zone=i}ngAfterViewInit(){this.isEnabled()&&this.bindEvents()}bindEvents(){this.zone.runOutsideAngular(()=>{this.mouseDownListener=this.onMouseDown.bind(this),this.el.nativeElement.addEventListener("mousedown",this.mouseDownListener),this.dragStartListener=this.onDragStart.bind(this),this.el.nativeElement.addEventListener("dragstart",this.dragStartListener),this.dragOverListener=this.onDragEnter.bind(this),this.el.nativeElement.addEventListener("dragover",this.dragOverListener),this.dragEnterListener=this.onDragEnter.bind(this),this.el.nativeElement.addEventListener("dragenter",this.dragEnterListener),this.dragLeaveListener=this.onDragLeave.bind(this),this.el.nativeElement.addEventListener("dragleave",this.dragLeaveListener)})}unbindEvents(){this.mouseDownListener&&(document.removeEventListener("mousedown",this.mouseDownListener),this.mouseDownListener=null),this.dragOverListener&&(document.removeEventListener("dragover",this.dragOverListener),this.dragOverListener=null),this.dragEnterListener&&(document.removeEventListener("dragenter",this.dragEnterListener),this.dragEnterListener=null),this.dragEnterListener&&(document.removeEventListener("dragenter",this.dragEnterListener),this.dragEnterListener=null),this.dragLeaveListener&&(document.removeEventListener("dragleave",this.dragLeaveListener),this.dragLeaveListener=null)}onMouseDown(e){"INPUT"===e.target.nodeName||"TEXTAREA"===e.target.nodeName||DomHandler.hasClass(e.target,"p-column-resizer")?this.el.nativeElement.draggable=!1:this.el.nativeElement.draggable=!0}onDragStart(e){this.dt.onColumnDragStart(e,this.el.nativeElement)}onDragOver(e){e.preventDefault()}onDragEnter(e){this.dt.onColumnDragEnter(e,this.el.nativeElement)}onDragLeave(e){this.dt.onColumnDragLeave(e)}onDrop(e){this.isEnabled()&&this.dt.onColumnDrop(e,this.el.nativeElement)}isEnabled(){return!0!==this.pReorderableColumnDisabled}ngOnDestroy(){this.unbindEvents()}};ReorderableColumn.decorators=[{type:Directive,args:[{selector:"[pReorderableColumn]"}]}],ReorderableColumn.ctorParameters=(()=>[{type:Table},{type:ElementRef},{type:NgZone}]),ReorderableColumn.propDecorators={pReorderableColumnDisabled:[{type:Input}],onDrop:[{type:HostListener,args:["drop",["$event"]]}]};export class EditableColumn{constructor(e,t,i){this.dt=e,this.el=t,this.zone=i}ngAfterViewInit(){this.isEnabled()&&DomHandler.addClass(this.el.nativeElement,"p-editable-column")}onClick(e){if(this.isEnabled())if(this.dt.editingCellClick=!0,this.dt.editingCell){if(this.dt.editingCell!==this.el.nativeElement){if(!this.dt.isEditingCellValid())return;this.closeEditingCell(!0,e),this.openCell()}}else this.openCell()}openCell(){this.dt.updateEditingCell(this.el.nativeElement,this.data,this.field,this.rowIndex),DomHandler.addClass(this.el.nativeElement,"p-cell-editing"),this.dt.onEditInit.emit({field:this.field,data:this.data,index:this.rowIndex}),this.zone.runOutsideAngular(()=>{setTimeout(()=>{let e=this.pFocusCellSelector||"input, textarea, select",t=DomHandler.findSingle(this.el.nativeElement,e);t&&t.focus()},50)})}closeEditingCell(e,t){e?this.dt.onEditComplete.emit({field:this.dt.editingCellField,data:this.dt.editingCellData,originalEvent:t,index:this.dt.editingCellRowIndex}):this.dt.onEditCancel.emit({field:this.dt.editingCellField,data:this.dt.editingCellData,originalEvent:t,index:this.dt.editingCellRowIndex}),DomHandler.removeClass(this.dt.editingCell,"p-cell-editing"),this.dt.editingCell=null,this.dt.editingCellData=null,this.dt.editingCellField=null,this.dt.unbindDocumentEditListener()}onEnterKeyDown(e){this.isEnabled()&&(this.dt.isEditingCellValid()&&this.closeEditingCell(!0,e),e.preventDefault())}onEscapeKeyDown(e){this.isEnabled()&&(this.dt.isEditingCellValid()&&this.closeEditingCell(!1,e),e.preventDefault())}onShiftKeyDown(e){this.isEnabled()&&(e.shiftKey?this.moveToPreviousCell(e):this.moveToNextCell(e))}onArrowDown(e){if(this.isEnabled()){let t=this.findCell(e.target);if(t){let i=DomHandler.index(t),l=this.findNextEditableColumnByIndex(t,i);l&&(this.dt.isEditingCellValid()&&this.closeEditingCell(!0,e),DomHandler.invokeElementMethod(e.target,"blur"),DomHandler.invokeElementMethod(l,"click")),e.preventDefault()}}}onArrowUp(e){if(this.isEnabled()){let t=this.findCell(e.target);if(t){let i=DomHandler.index(t),l=this.findPrevEditableColumnByIndex(t,i);l&&(this.dt.isEditingCellValid()&&this.closeEditingCell(!0,e),DomHandler.invokeElementMethod(e.target,"blur"),DomHandler.invokeElementMethod(l,"click")),e.preventDefault()}}}onArrowLeft(e){this.isEnabled()&&this.moveToPreviousCell(e)}onArrowRight(e){this.isEnabled()&&this.moveToNextCell(e)}findCell(e){if(e){let t=e;for(;t&&!DomHandler.hasClass(t,"p-cell-editing");)t=t.parentElement;return t}return null}moveToPreviousCell(e){let t=this.findCell(e.target);if(t){let i=this.findPreviousEditableColumn(t);i&&(this.dt.isEditingCellValid()&&this.closeEditingCell(!0,e),DomHandler.invokeElementMethod(e.target,"blur"),DomHandler.invokeElementMethod(i,"click"),e.preventDefault())}}moveToNextCell(e){let t=this.findCell(e.target);if(t){let i=this.findNextEditableColumn(t);i&&(this.dt.isEditingCellValid()&&this.closeEditingCell(!0,e),DomHandler.invokeElementMethod(e.target,"blur"),DomHandler.invokeElementMethod(i,"click"),e.preventDefault())}}findPreviousEditableColumn(e){let t=e.previousElementSibling;if(!t){let i=e.parentElement.previousElementSibling;i&&(t=i.lastElementChild)}return t?DomHandler.hasClass(t,"p-editable-column")?t:this.findPreviousEditableColumn(t):null}findNextEditableColumn(e){let t=e.nextElementSibling;if(!t){let i=e.parentElement.nextElementSibling;i&&(t=i.firstElementChild)}return t?DomHandler.hasClass(t,"p-editable-column")?t:this.findNextEditableColumn(t):null}findNextEditableColumnByIndex(e,t){let i=e.parentElement.nextElementSibling;if(i){let e=i.children[t];return e&&DomHandler.hasClass(e,"p-editable-column")?e:null}return null}findPrevEditableColumnByIndex(e,t){let i=e.parentElement.previousElementSibling;if(i){let e=i.children[t];return e&&DomHandler.hasClass(e,"p-editable-column")?e:null}return null}isEnabled(){return!0!==this.pEditableColumnDisabled}};EditableColumn.decorators=[{type:Directive,args:[{selector:"[pEditableColumn]"}]}],EditableColumn.ctorParameters=(()=>[{type:Table},{type:ElementRef},{type:NgZone}]),EditableColumn.propDecorators={data:[{type:Input,args:["pEditableColumn"]}],field:[{type:Input,args:["pEditableColumnField"]}],rowIndex:[{type:Input,args:["pEditableColumnRowIndex"]}],pEditableColumnDisabled:[{type:Input}],pFocusCellSelector:[{type:Input}],onClick:[{type:HostListener,args:["click",["$event"]]}],onEnterKeyDown:[{type:HostListener,args:["keydown.enter",["$event"]]}],onEscapeKeyDown:[{type:HostListener,args:["keydown.escape",["$event"]]}],onShiftKeyDown:[{type:HostListener,args:["keydown.tab",["$event"]]},{type:HostListener,args:["keydown.shift.tab",["$event"]]},{type:HostListener,args:["keydown.meta.tab",["$event"]]}],onArrowDown:[{type:HostListener,args:["keydown.arrowdown",["$event"]]}],onArrowUp:[{type:HostListener,args:["keydown.arrowup",["$event"]]}],onArrowLeft:[{type:HostListener,args:["keydown.arrowleft",["$event"]]}],onArrowRight:[{type:HostListener,args:["keydown.arrowright",["$event"]]}]};export class EditableRow{constructor(e){this.el=e}isEnabled(){return!0!==this.pEditableRowDisabled}};EditableRow.decorators=[{type:Directive,args:[{selector:"[pEditableRow]"}]}],EditableRow.ctorParameters=(()=>[{type:ElementRef}]),EditableRow.propDecorators={data:[{type:Input,args:["pEditableRow"]}],pEditableRowDisabled:[{type:Input}]};export class InitEditableRow{constructor(e,t){this.dt=e,this.editableRow=t}onClick(e){this.dt.initRowEdit(this.editableRow.data),e.preventDefault()}};InitEditableRow.decorators=[{type:Directive,args:[{selector:"[pInitEditableRow]"}]}],InitEditableRow.ctorParameters=(()=>[{type:Table},{type:EditableRow}]),InitEditableRow.propDecorators={onClick:[{type:HostListener,args:["click",["$event"]]}]};export class SaveEditableRow{constructor(e,t){this.dt=e,this.editableRow=t}onClick(e){this.dt.saveRowEdit(this.editableRow.data,this.editableRow.el.nativeElement),e.preventDefault()}};SaveEditableRow.decorators=[{type:Directive,args:[{selector:"[pSaveEditableRow]"}]}],SaveEditableRow.ctorParameters=(()=>[{type:Table},{type:EditableRow}]),SaveEditableRow.propDecorators={onClick:[{type:HostListener,args:["click",["$event"]]}]};export class CancelEditableRow{constructor(e,t){this.dt=e,this.editableRow=t}onClick(e){this.dt.cancelRowEdit(this.editableRow.data),e.preventDefault()}};CancelEditableRow.decorators=[{type:Directive,args:[{selector:"[pCancelEditableRow]"}]}],CancelEditableRow.ctorParameters=(()=>[{type:Table},{type:EditableRow}]),CancelEditableRow.propDecorators={onClick:[{type:HostListener,args:["click",["$event"]]}]};export class CellEditor{constructor(e,t,i){this.dt=e,this.editableColumn=t,this.editableRow=i}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"input":this.inputTemplate=e.template;break;case"output":this.outputTemplate=e.template}})}get editing(){return this.dt.editingCell&&this.editableColumn&&this.dt.editingCell===this.editableColumn.el.nativeElement||this.editableRow&&"row"===this.dt.editMode&&this.dt.isRowEditing(this.editableRow.data)}};CellEditor.decorators=[{type:Component,args:[{selector:"p-cellEditor",template:'\n        <ng-container *ngIf="editing">\n            <ng-container *ngTemplateOutlet="inputTemplate"></ng-container>\n        </ng-container>\n        <ng-container *ngIf="!editing">\n            <ng-container *ngTemplateOutlet="outputTemplate"></ng-container>\n        </ng-container>\n    ',encapsulation:ViewEncapsulation.None}]}],CellEditor.ctorParameters=(()=>[{type:Table},{type:EditableColumn,decorators:[{type:Optional}]},{type:EditableRow,decorators:[{type:Optional}]}]),CellEditor.propDecorators={templates:[{type:ContentChildren,args:[PrimeTemplate]}]};export class TableRadioButton{constructor(e,t,i){this.dt=e,this.tableService=t,this.cd=i,this.subscription=this.dt.tableService.selectionSource$.subscribe(()=>{this.checked=this.dt.isSelected(this.value),this.cd.markForCheck()})}ngOnInit(){this.checked=this.dt.isSelected(this.value)}onClick(e){this.disabled||this.dt.toggleRowWithRadio({originalEvent:e,rowIndex:this.index},this.value),DomHandler.clearSelection()}onFocus(){DomHandler.addClass(this.boxViewChild.nativeElement,"p-focus")}onBlur(){DomHandler.removeClass(this.boxViewChild.nativeElement,"p-focus")}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}};TableRadioButton.decorators=[{type:Component,args:[{selector:"p-tableRadioButton",template:'\n        <div class="p-radiobutton p-component" (click)="onClick($event)">\n            <div class="p-hidden-accessible">\n                <input type="radio" [attr.id]="inputId" [attr.name]="name" [checked]="checked" (focus)="onFocus()" (blur)="onBlur()"\n                [disabled]="disabled" [attr.aria-label]="ariaLabel">\n            </div>\n            <div #box [ngClass]="{\'p-radiobutton-box p-component\':true,\n                \'p-highlight\':checked, \'p-disabled\':disabled}" role="radio" [attr.aria-checked]="checked">\n                <div class="p-radiobutton-icon"></div>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],TableRadioButton.ctorParameters=(()=>[{type:Table},{type:TableService},{type:ChangeDetectorRef}]),TableRadioButton.propDecorators={disabled:[{type:Input}],value:[{type:Input}],index:[{type:Input}],inputId:[{type:Input}],name:[{type:Input}],ariaLabel:[{type:Input}],boxViewChild:[{type:ViewChild,args:["box"]}]};export class TableCheckbox{constructor(e,t,i){this.dt=e,this.tableService=t,this.cd=i,this.subscription=this.dt.tableService.selectionSource$.subscribe(()=>{this.checked=this.dt.isSelected(this.value),this.cd.markForCheck()})}ngOnInit(){this.checked=this.dt.isSelected(this.value)}onClick(e){this.disabled||this.dt.toggleRowWithCheckbox({originalEvent:e,rowIndex:this.index},this.value),DomHandler.clearSelection()}onFocus(){DomHandler.addClass(this.boxViewChild.nativeElement,"p-focus")}onBlur(){DomHandler.removeClass(this.boxViewChild.nativeElement,"p-focus")}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}};TableCheckbox.decorators=[{type:Component,args:[{selector:"p-tableCheckbox",template:'\n        <div class="p-checkbox p-component" (click)="onClick($event)">\n            <div class="p-hidden-accessible">\n                <input type="checkbox" [attr.id]="inputId" [attr.name]="name" [checked]="checked" (focus)="onFocus()" (blur)="onBlur()" [disabled]="disabled"\n                [attr.required]="required" [attr.aria-label]="ariaLabel">\n            </div>\n            <div #box [ngClass]="{\'p-checkbox-box p-component\':true,\n                \'p-highlight\':checked, \'p-disabled\':disabled}" role="checkbox" [attr.aria-checked]="checked">\n                <span class="p-checkbox-icon" [ngClass]="{\'pi pi-check\':checked}"></span>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],TableCheckbox.ctorParameters=(()=>[{type:Table},{type:TableService},{type:ChangeDetectorRef}]),TableCheckbox.propDecorators={disabled:[{type:Input}],value:[{type:Input}],index:[{type:Input}],inputId:[{type:Input}],name:[{type:Input}],required:[{type:Input}],ariaLabel:[{type:Input}],boxViewChild:[{type:ViewChild,args:["box"]}]};export class TableHeaderCheckbox{constructor(e,t,i){this.dt=e,this.tableService=t,this.cd=i,this.valueChangeSubscription=this.dt.tableService.valueSource$.subscribe(()=>{this.checked=this.updateCheckedState()}),this.selectionChangeSubscription=this.dt.tableService.selectionSource$.subscribe(()=>{this.checked=this.updateCheckedState()})}ngOnInit(){this.checked=this.updateCheckedState()}onClick(e){this.disabled||this.dt.value&&this.dt.value.length>0&&this.dt.toggleRowsWithCheckbox(e,!this.checked),DomHandler.clearSelection()}onFocus(){DomHandler.addClass(this.boxViewChild.nativeElement,"p-focus")}onBlur(){DomHandler.removeClass(this.boxViewChild.nativeElement,"p-focus")}isDisabled(){return this.disabled||!this.dt.value||!this.dt.value.length}ngOnDestroy(){this.selectionChangeSubscription&&this.selectionChangeSubscription.unsubscribe(),this.valueChangeSubscription&&this.valueChangeSubscription.unsubscribe()}updateCheckedState(){if(this.cd.markForCheck(),this.dt.filteredValue){const e=this.dt.filteredValue;return e&&e.length>0&&this.dt.selection&&this.dt.selection.length>0&&this.isAllFilteredValuesChecked()}{const e=this.dt.value;return e&&e.length>0&&this.dt.selection&&this.dt.selection.length>0&&this.dt.selection.length===e.length}}isAllFilteredValuesChecked(){if(this.dt.filteredValue){for(let e of this.dt.filteredValue)if(!this.dt.isSelected(e))return!1;return!0}return!1}};TableHeaderCheckbox.decorators=[{type:Component,args:[{selector:"p-tableHeaderCheckbox",template:'\n        <div class="p-checkbox p-component" (click)="onClick($event)">\n            <div class="p-hidden-accessible">\n                <input #cb type="checkbox" [attr.id]="inputId" [attr.name]="name" [checked]="checked" (focus)="onFocus()" (blur)="onBlur()"\n                [disabled]="isDisabled()" [attr.aria-label]="ariaLabel">\n            </div>\n            <div #box [ngClass]="{\'p-checkbox-box\':true,\n                \'p-highlight\':checked, \'p-disabled\': isDisabled()}" role="checkbox" [attr.aria-checked]="checked">\n                <span class="p-checkbox-icon" [ngClass]="{\'pi pi-check\':checked}"></span>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],TableHeaderCheckbox.ctorParameters=(()=>[{type:Table},{type:TableService},{type:ChangeDetectorRef}]),TableHeaderCheckbox.propDecorators={boxViewChild:[{type:ViewChild,args:["box"]}],disabled:[{type:Input}],inputId:[{type:Input}],name:[{type:Input}],ariaLabel:[{type:Input}]};export class ReorderableRowHandle{constructor(e){this.el=e}ngAfterViewInit(){DomHandler.addClass(this.el.nativeElement,"p-datatable-reorderablerow-handle")}};ReorderableRowHandle.decorators=[{type:Directive,args:[{selector:"[pReorderableRowHandle]"}]}],ReorderableRowHandle.ctorParameters=(()=>[{type:ElementRef}]),ReorderableRowHandle.propDecorators={index:[{type:Input,args:["pReorderableRowHandle"]}]};export class ReorderableRow{constructor(e,t,i){this.dt=e,this.el=t,this.zone=i}ngAfterViewInit(){this.isEnabled()&&(this.el.nativeElement.droppable=!0,this.bindEvents())}bindEvents(){this.zone.runOutsideAngular(()=>{this.mouseDownListener=this.onMouseDown.bind(this),this.el.nativeElement.addEventListener("mousedown",this.mouseDownListener),this.dragStartListener=this.onDragStart.bind(this),this.el.nativeElement.addEventListener("dragstart",this.dragStartListener),this.dragEndListener=this.onDragEnd.bind(this),this.el.nativeElement.addEventListener("dragend",this.dragEndListener),this.dragOverListener=this.onDragOver.bind(this),this.el.nativeElement.addEventListener("dragover",this.dragOverListener),this.dragLeaveListener=this.onDragLeave.bind(this),this.el.nativeElement.addEventListener("dragleave",this.dragLeaveListener)})}unbindEvents(){this.mouseDownListener&&(document.removeEventListener("mousedown",this.mouseDownListener),this.mouseDownListener=null),this.dragStartListener&&(document.removeEventListener("dragstart",this.dragStartListener),this.dragStartListener=null),this.dragEndListener&&(document.removeEventListener("dragend",this.dragEndListener),this.dragEndListener=null),this.dragOverListener&&(document.removeEventListener("dragover",this.dragOverListener),this.dragOverListener=null),this.dragLeaveListener&&(document.removeEventListener("dragleave",this.dragLeaveListener),this.dragLeaveListener=null)}onMouseDown(e){DomHandler.hasClass(e.target,"p-datatable-reorderablerow-handle")?this.el.nativeElement.draggable=!0:this.el.nativeElement.draggable=!1}onDragStart(e){this.dt.onRowDragStart(e,this.index)}onDragEnd(e){this.dt.onRowDragEnd(e),this.el.nativeElement.draggable=!1}onDragOver(e){this.dt.onRowDragOver(e,this.index,this.el.nativeElement),e.preventDefault()}onDragLeave(e){this.dt.onRowDragLeave(e,this.el.nativeElement)}isEnabled(){return!0!==this.pReorderableRowDisabled}onDrop(e){this.isEnabled()&&this.dt.rowDragging&&this.dt.onRowDrop(e,this.el.nativeElement),e.preventDefault()}};ReorderableRow.decorators=[{type:Directive,args:[{selector:"[pReorderableRow]"}]}],ReorderableRow.ctorParameters=(()=>[{type:Table},{type:ElementRef},{type:NgZone}]),ReorderableRow.propDecorators={index:[{type:Input,args:["pReorderableRow"]}],pReorderableRowDisabled:[{type:Input}],onDrop:[{type:HostListener,args:["drop",["$event"]]}]};export class ColumnFilterFormElement{constructor(e){this.dt=e,this.useGrouping=!0}ngOnInit(){this.filterCallback=(e=>{this.filterConstraint.value=e,this.dt._filter()})}onModelChange(e){this.filterConstraint.value=e,"boolean"!==this.type&&""!==e||this.dt._filter()}onTextInputEnterKeyDown(e){this.dt._filter(),e.preventDefault()}onNumericInputKeyDown(e){"Enter"===e.key&&(this.dt._filter(),e.preventDefault())}};ColumnFilterFormElement.decorators=[{type:Component,args:[{selector:"p-columnFilterFormElement",template:'\n        <ng-container *ngIf="filterTemplate; else builtInElement">\n            <ng-container *ngTemplateOutlet="filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]="type">\n                <input *ngSwitchCase="\'text\'" type="text" pInputText [value]="filterConstraint?.value" (input)="onModelChange($event.target.value)"\n                    (keydown.enter)="onTextInputEnterKeyDown($event)" [attr.placeholder]="placeholder">\n                <p-inputNumber *ngSwitchCase="\'numeric\'" [ngModel]="filterConstraint?.value" (ngModelChange)="onModelChange($event)" (onKeyDown)="onNumericInputKeyDown($event)" [showButtons]="true" [attr.placeholder]="placeholder"\n                    [minFractionDigits]="minFractionDigits" [maxFractionDigits]="maxFractionDigits" [prefix]="prefix" [suffix]="suffix"\n                    [mode]="currency ? \'currency\' : \'decimal\'" [locale]="locale" [localeMatcher]="localeMatcher" [currency]="currency" [currencyDisplay]="currencyDisplay" [useGrouping]="useGrouping"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase="\'boolean\'" [ngModel]="filterConstraint?.value" (ngModelChange)="onModelChange($event)"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase="\'date\'" [ngModel]="filterConstraint?.value" (ngModelChange)="onModelChange($event)"></p-calendar>\n            </ng-container>\n        </ng-template>\n    ',encapsulation:ViewEncapsulation.None}]}],ColumnFilterFormElement.ctorParameters=(()=>[{type:Table}]),ColumnFilterFormElement.propDecorators={field:[{type:Input}],type:[{type:Input}],filterConstraint:[{type:Input}],filterTemplate:[{type:Input}],placeholder:[{type:Input}],minFractionDigits:[{type:Input}],maxFractionDigits:[{type:Input}],prefix:[{type:Input}],suffix:[{type:Input}],locale:[{type:Input}],localeMatcher:[{type:Input}],currency:[{type:Input}],currencyDisplay:[{type:Input}],useGrouping:[{type:Input}]};export class ColumnFilter{constructor(e,t,i,l){this.el=e,this.dt=t,this.renderer=i,this.config=l,this.type="text",this.display="row",this.showMenu=!0,this.operator=FilterOperator.AND,this.showOperator=!0,this.showClearButton=!0,this.showApplyButton=!0,this.showMatchModes=!0,this.showAddButton=!0,this.maxConstraints=2,this.useGrouping=!0}ngOnInit(){this.dt.filters[this.field]||this.initFieldFilterConstraint(),this.translationSubscription=this.config.translationObserver.subscribe(()=>{this.generateMatchModeOptions(),this.generateOperatorOptions()}),this.generateMatchModeOptions(),this.generateOperatorOptions()}generateMatchModeOptions(){var e;this.matchModes=this.matchModeOptions||(null===(e=this.config.filterMatchModeOptions[this.type])||void 0===e?void 0:e.map(e=>({label:this.config.getTranslation(e),value:e})))}generateOperatorOptions(){this.operatorOptions=[{label:this.config.getTranslation(TranslationKeys.MATCH_ALL),value:FilterOperator.AND},{label:this.config.getTranslation(TranslationKeys.MATCH_ANY),value:FilterOperator.OR}]}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"header":this.headerTemplate=e.template;break;case"filter":this.filterTemplate=e.template;break;case"footer":this.footerTemplate=e.template;break;default:this.filterTemplate=e.template}})}initFieldFilterConstraint(){let e=this.getDefaultMatchMode();this.dt.filters[this.field]="row"==this.display?{value:null,matchMode:e}:[{value:null,matchMode:e,operator:this.operator}]}onMenuMatchModeChange(e,t){t.matchMode=e,this.showApplyButton||this.dt._filter()}onRowMatchModeChange(e){this.dt.filters[this.field].matchMode=e,this.dt._filter(),this.hide()}onRowMatchModeKeyDown(e){let t=e.target;switch(e.key){case"ArrowDown":var i=this.findNextItem(t);i&&(t.removeAttribute("tabindex"),i.tabIndex="0",i.focus()),e.preventDefault();break;case"ArrowUp":var l=this.findPrevItem(t);l&&(t.removeAttribute("tabindex"),l.tabIndex="0",l.focus()),e.preventDefault()}}onRowClearItemClick(){this.clearFilter(),this.hide()}isRowMatchModeSelected(e){return this.dt.filters[this.field].matchMode===e}addConstraint(){this.dt.filters[this.field].push({value:null,matchMode:this.getDefaultMatchMode(),operator:this.getDefaultOperator()}),this.dt._filter()}removeConstraint(e){this.dt.filters[this.field]=this.dt.filters[this.field].filter(t=>t!==e),this.dt._filter()}onOperatorChange(e){this.dt.filters[this.field].forEach(t=>{t.operator=e}),this.showApplyButton||this.dt._filter()}toggleMenu(){this.overlayVisible=!this.overlayVisible}onToggleButtonKeyDown(e){switch(e.key){case"Escape":case"Tab":this.overlayVisible=!1;break;case"ArrowDown":if(this.overlayVisible){let t=DomHandler.getFocusableElements(this.overlay);t&&t[0].focus(),e.preventDefault()}else e.altKey&&(this.overlayVisible=!0,e.preventDefault())}}onEscape(){this.overlayVisible=!1,this.icon.nativeElement.focus()}findNextItem(e){let t=e.nextElementSibling;return t?DomHandler.hasClass(t,"p-column-filter-separator")?this.findNextItem(t):t:e.parentElement.firstElementChild}findPrevItem(e){let t=e.previousElementSibling;return t?DomHandler.hasClass(t,"p-column-filter-separator")?this.findPrevItem(t):t:e.parentElement.lastElementChild}onOverlayAnimationStart(e){switch(e.toState){case"visible":this.overlay=e.element,document.body.appendChild(this.overlay),this.overlay.style.zIndex=String(++DomHandler.zindex),DomHandler.absolutePosition(this.overlay,this.icon.nativeElement),this.bindDocumentClickListener(),this.bindDocumentResizeListener(),this.bindScrollListener();break;case"void":this.onOverlayHide()}}getDefaultMatchMode(){return this.matchMode?this.matchMode:"text"===this.type?FilterMatchMode.STARTS_WITH:"numeric"===this.type?FilterMatchMode.EQUALS:"date"===this.type?FilterMatchMode.EQUALS:FilterMatchMode.CONTAINS}getDefaultOperator(){return this.dt.filters?this.dt.filters[this.field][0].operator:this.operator}hasRowFilter(){return this.dt.filters[this.field]&&!this.dt.isFilterBlank(this.dt.filters[this.field].value)}get fieldConstraints(){return this.dt.filters?this.dt.filters[this.field]:null}get showRemoveIcon(){return!!this.fieldConstraints&&this.fieldConstraints.length>1}get showMenuButton(){return this.showMenu&&("row"!==this.display||"boolean"!==this.type)}get isShowOperator(){return this.showOperator&&"boolean"!==this.type}get isShowAddConstraint(){return this.showAddButton&&"boolean"!==this.type&&this.fieldConstraints&&this.fieldConstraints.length<this.maxConstraints}get applyButtonLabel(){return this.config.getTranslation(TranslationKeys.APPLY)}get clearButtonLabel(){return this.config.getTranslation(TranslationKeys.CLEAR)}get addRuleButtonLabel(){return this.config.getTranslation(TranslationKeys.ADD_RULE)}get removeRuleButtonLabel(){return this.config.getTranslation(TranslationKeys.REMOVE_RULE)}get noFilterLabel(){return this.config.getTranslation(TranslationKeys.NO_FILTER)}hasFilter(){let e=this.dt.filters[this.field];return!!e&&(Array.isArray(e)?!this.dt.isFilterBlank(e[0].value):!this.dt.isFilterBlank(e.value))}isOutsideClicked(e){return!(this.overlay.isSameNode(e.target)||this.overlay.contains(e.target)||this.icon.nativeElement.isSameNode(e.target)||this.icon.nativeElement.contains(e.target)||DomHandler.hasClass(e.target,"p-column-filter-add-button")||DomHandler.hasClass(e.target.parentElement,"p-column-filter-add-button")||DomHandler.hasClass(e.target,"p-column-filter-remove-button")||DomHandler.hasClass(e.target.parentElement,"p-column-filter-remove-button"))}bindDocumentClickListener(){if(!this.documentClickListener){const e=this.el?this.el.nativeElement.ownerDocument:"document";this.documentClickListener=this.renderer.listen(e,"mousedown",e=>{this.isOutsideClicked(e)&&this.hide()})}}unbindDocumentClickListener(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)}bindDocumentResizeListener(){this.documentResizeListener=(()=>this.hide()),window.addEventListener("resize",this.documentResizeListener)}unbindDocumentResizeListener(){this.documentResizeListener&&(window.removeEventListener("resize",this.documentResizeListener),this.documentResizeListener=null)}bindScrollListener(){this.scrollHandler||(this.scrollHandler=new ConnectedOverlayScrollHandler(this.icon.nativeElement,()=>{this.overlayVisible&&this.hide()})),this.scrollHandler.bindScrollListener()}unbindScrollListener(){this.scrollHandler&&this.scrollHandler.unbindScrollListener()}hide(){this.overlayVisible=!1}onOverlayHide(){this.unbindDocumentClickListener(),this.unbindDocumentResizeListener(),this.unbindScrollListener(),this.overlay=null}clearFilter(){this.initFieldFilterConstraint(),this.dt._filter()}applyFilter(){this.dt._filter(),this.hide()}ngOnDestroy(){this.overlay&&(this.el.nativeElement.appendChild(this.overlay),this.onOverlayHide()),this.translationSubscription&&this.translationSubscription.unsubscribe()}};ColumnFilter.decorators=[{type:Component,args:[{selector:"p-columnFilter",template:'\n        <div class="p-column-filter" [ngClass]="{\'p-column-filter-row\': display === \'row\', \'p-column-filter-menu\': display === \'menu\'}">\n            <p-columnFilterFormElement *ngIf="display === \'row\'" class="p-fluid" [type]="type" [field]="field" [filterConstraint]="dt.filters[field]" [filterTemplate]="filterTemplate" [placeholder]="placeholder" [minFractionDigits]="minFractionDigits" [maxFractionDigits]="maxFractionDigits" [prefix]="prefix" [suffix]="suffix"\n                                    [locale]="locale"  [localeMatcher]="localeMatcher" [currency]="currency" [currencyDisplay]="currencyDisplay" [useGrouping]="useGrouping"></p-columnFilterFormElement>\n            <button #icon *ngIf="showMenuButton" type="button" class="p-column-filter-menu-button p-link" aria-haspopup="true" [attr.aria-expanded]="overlayVisible"\n                [ngClass]="{\'p-column-filter-menu-button-open\': overlayVisible, \'p-column-filter-menu-button-active\': hasFilter()}" \n                (click)="toggleMenu()" (keydown)="onToggleButtonKeyDown($event)"><span class="pi pi-filter-icon pi-filter"></span></button>\n            <button #icon *ngIf="showMenuButton && display === \'row\'" [ngClass]="{\'p-hidden-space\': !hasRowFilter()}" type="button" class="p-column-filter-clear-button p-link" (click)="clearFilter()"><span class="pi pi-filter-slash"></span></button>\n            <div *ngIf="showMenu && overlayVisible" [ngClass]="{\'p-column-filter-overlay p-component p-fluid\': true, \'p-column-filter-overlay-menu\': display === \'menu\'}" \n                [@overlayAnimation]="\'visible\'" (@overlayAnimation.start)="onOverlayAnimationStart($event)" (keydown.escape)="onEscape()">\n                <ng-container *ngTemplateOutlet="headerTemplate; context: {$implicit: field}"></ng-container>\n                <ul *ngIf="display === \'row\'; else menu" class="p-column-filter-row-items">\n                    <li class="p-column-filter-row-item" *ngFor="let matchMode of matchModes; let i = index;" (click)="onRowMatchModeChange(matchMode.value)" (keydown)="onRowMatchModeKeyDown($event)" (keydown.enter)="this.onRowMatchModeChange(matchMode.value)"\n                        [ngClass]="{\'p-highlight\': isRowMatchModeSelected(matchMode.value)}" [attr.tabindex]="i === 0 ? \'0\' : null">{{matchMode.label}}</li>\n                    <li class="p-column-filter-separator"></li>\n                    <li class="p-column-filter-row-item" (click)="onRowClearItemClick()" (keydown)="onRowMatchModeKeyDown($event)" (keydown.enter)="onRowClearItemClick()">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class="p-column-filter-operator" *ngIf="isShowOperator">\n                        <p-dropdown [options]="operatorOptions" [ngModel]="operator" (ngModelChange)="onOperatorChange($event)" styleClass="p-column-filter-operator-dropdown"></p-dropdown>\n                    </div>\n                    <div class="p-column-filter-constraints">\n                        <div *ngFor="let fieldConstraint of fieldConstraints; let i = index" class="p-column-filter-constraint">\n                            <p-dropdown  *ngIf="showMatchModes && matchModes" [options]="matchModes" [ngModel]="fieldConstraint.matchMode" (ngModelChange)="onMenuMatchModeChange($event, fieldConstraint)" styleClass="p-column-filter-matchmode-dropdown"></p-dropdown>\n                            <p-columnFilterFormElement [type]="type" [field]="field" [filterConstraint]="fieldConstraint" [filterTemplate]="filterTemplate" [placeholder]="placeholder"\n                            [minFractionDigits]="minFractionDigits" [maxFractionDigits]="maxFractionDigits" [prefix]="prefix" [suffix]="suffix"\n                            [locale]="locale"  [localeMatcher]="localeMatcher" [currency]="currency" [currencyDisplay]="currencyDisplay" [useGrouping]="useGrouping"></p-columnFilterFormElement>\n                            <button *ngIf="showRemoveIcon" type="button" pButton icon="pi pi-trash" class="p-column-filter-remove-button p-button-text p-button-danger p-button-sm" (click)="removeConstraint(fieldConstraint)" pRipple [label]="removeRuleButtonLabel"></button>\n                        </div>\n                    </div>\n                    <div class="p-column-filter-add-rule" *ngIf="isShowAddConstraint">\n                        <button type="button" pButton [label]="addRuleButtonLabel" icon="pi pi-plus" class="p-column-filter-add-button p-button-text p-button-sm" (click)="addConstraint()" pRipple></button>\n                    </div>\n                    <div class="p-column-filter-buttonbar">\n                        <button type="button" pButton class="p-button-outlined" (click)="clearFilter()" [label]="clearButtonLabel" pRipple></button>\n                        <button type="button" pButton (click)="applyFilter()" [label]="applyButtonLabel" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet="footerTemplate; context: {$implicit: field}"></ng-container>\n            </div>\n        </div>\n    ',animations:[trigger("overlayAnimation",[transition(":enter",[style({opacity:0,transform:"scaleY(0.8)"}),animate(".12s cubic-bezier(0, 0, 0.2, 1)")]),transition(":leave",[animate(".1s linear",style({opacity:0}))])])],encapsulation:ViewEncapsulation.None}]}],ColumnFilter.ctorParameters=(()=>[{type:ElementRef},{type:Table},{type:Renderer2},{type:PrimeNGConfig}]),ColumnFilter.propDecorators={field:[{type:Input}],type:[{type:Input}],display:[{type:Input}],showMenu:[{type:Input}],matchMode:[{type:Input}],operator:[{type:Input}],showOperator:[{type:Input}],showClearButton:[{type:Input}],showApplyButton:[{type:Input}],showMatchModes:[{type:Input}],showAddButton:[{type:Input}],placeholder:[{type:Input}],matchModeOptions:[{type:Input}],maxConstraints:[{type:Input}],minFractionDigits:[{type:Input}],maxFractionDigits:[{type:Input}],prefix:[{type:Input}],suffix:[{type:Input}],locale:[{type:Input}],localeMatcher:[{type:Input}],currency:[{type:Input}],currencyDisplay:[{type:Input}],useGrouping:[{type:Input}],icon:[{type:ViewChild,args:["icon"]}],templates:[{type:ContentChildren,args:[PrimeTemplate]}]};export class TableModule{};TableModule.decorators=[{type:NgModule,args:[{imports:[CommonModule,PaginatorModule,InputTextModule,DropdownModule,ScrollingModule,FormsModule,ButtonModule,SelectButtonModule,CalendarModule,InputNumberModule,TriStateCheckboxModule],exports:[Table,SharedModule,SortableColumn,SelectableRow,RowToggler,ContextMenuRow,ResizableColumn,ReorderableColumn,EditableColumn,CellEditor,SortIcon,TableRadioButton,TableCheckbox,TableHeaderCheckbox,ReorderableRowHandle,ReorderableRow,SelectableRowDblClick,EditableRow,InitEditableRow,SaveEditableRow,CancelEditableRow,ScrollingModule,ColumnFilter],declarations:[Table,SortableColumn,SelectableRow,RowToggler,ContextMenuRow,ResizableColumn,ReorderableColumn,EditableColumn,CellEditor,TableBody,ScrollableView,SortIcon,TableRadioButton,TableCheckbox,TableHeaderCheckbox,ReorderableRowHandle,ReorderableRow,SelectableRowDblClick,EditableRow,InitEditableRow,SaveEditableRow,CancelEditableRow,ColumnFilter,ColumnFilterFormElement]}]}];