import{NgModule,Component,ElementRef,Input,ChangeDetectionStrategy,ViewEncapsulation}from"@angular/core";import{CommonModule}from"@angular/common";import{Calendar}from"@fullcalendar/core";export class FullCalendar{constructor(e){this.el=e}ngOnInit(){if(this.config={theme:!0},this.options)for(let e in this.options)this.config[e]=this.options[e]}ngAfterViewChecked(){!this.initialized&&this.el.nativeElement.offsetParent&&this.initialize()}get events(){return this._events}set events(e){this._events=e,this._events&&this.calendar&&(this.calendar.removeAllEventSources(),this.calendar.addEventSource(this._events))}get options(){return this._options}set options(e){if(this._options=e,this._options&&this.calendar)for(let e in this._options){let t=this._options[e];this.config[e]=t,this.calendar.setOption(e,t)}}initialize(){this.calendar=new Calendar(this.el.nativeElement.children[0],this.config),this.calendar.render(),this.initialized=!0,this.events&&(this.calendar.removeAllEventSources(),this.calendar.addEventSource(this.events))}getCalendar(){return this.calendar}ngOnDestroy(){this.calendar&&(this.calendar.destroy(),this.initialized=!1,this.calendar=null)}};FullCalendar.decorators=[{type:Component,args:[{selector:"p-fullCalendar",template:'<div [ngStyle]="style" [class]="styleClass"></div>',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],FullCalendar.ctorParameters=(()=>[{type:ElementRef}]),FullCalendar.propDecorators={style:[{type:Input}],styleClass:[{type:Input}],events:[{type:Input}],options:[{type:Input}]};export class FullCalendarModule{};FullCalendarModule.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[FullCalendar],declarations:[FullCalendar]}]}];