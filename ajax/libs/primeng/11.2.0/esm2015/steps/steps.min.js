import{NgModule,Component,Input,Output,EventEmitter,ChangeDetectionStrategy,ViewEncapsulation,ChangeDetectorRef}from"@angular/core";import{CommonModule}from"@angular/common";import{RouterModule,Router,ActivatedRoute}from"@angular/router";export class Steps{constructor(e,t,i){this.router=e,this.route=t,this.cd=i,this.activeIndex=0,this.readonly=!0,this.activeIndexChange=new EventEmitter}ngOnInit(){this.subscription=this.router.events.subscribe(()=>this.cd.markForCheck())}itemClick(e,t,i){this.readonly||t.disabled?e.preventDefault():(this.activeIndexChange.emit(i),t.url||e.preventDefault(),t.command&&t.command({originalEvent:e,item:t,index:i}))}isClickableRouterLink(e){return e.routerLink&&!this.readonly&&!e.disabled}isActive(e,t){return e.routerLink?this.router.isActive(e.routerLink,!1)||this.router.isActive(this.router.createUrlTree([e.routerLink],{relativeTo:this.route}).toString(),!1):t===this.activeIndex}ngOnDestroy(){this.subscription.unsubscribe()}};Steps.decorators=[{type:Component,args:[{selector:"p-steps",template:'\n        <div [ngClass]="{\'p-steps p-component\':true,\'p-readonly\':readonly}" [ngStyle]="style" [class]="styleClass">\n            <ul role="tablist">\n                <li *ngFor="let item of model; let i = index" class="p-steps-item" #menuitem [ngStyle]="item.style" [class]="item.styleClass" role="tab" [attr.aria-selected]="i === activeIndex" [attr.aria-expanded]="i === activeIndex"\n                    [ngClass]="{\'p-highlight p-steps-current\': isActive(item, i), \'p-disabled\': item.disabled || (readonly && !isActive(item, i))}">\n                    <a *ngIf="isClickableRouterLink(item); else elseBlock" [routerLink]="item.routerLink" [queryParams]="item.queryParams" role="presentation" [routerLinkActive]="\'p-menuitem-link-active\'" [routerLinkActiveOptions]="item.routerLinkActiveOptions||{exact:false}" class="p-menuitem-link" \n                        (click)="itemClick($event, item, i)" (keydown.enter)="itemClick($event, item, i)" [attr.target]="item.target" [attr.id]="item.id" [attr.tabindex]="item.disabled || readonly ? null : (item.tabindex ? item.tabindex : \'0\')"\n                        [fragment]="item.fragment" [queryParamsHandling]="item.queryParamsHandling" [preserveFragment]="item.preserveFragment" [skipLocationChange]="item.skipLocationChange" [replaceUrl]="item.replaceUrl" [state]="item.state">\n                        <span class="p-steps-number">{{i + 1}}</span>\n                        <span class="p-steps-title" *ngIf="item.escape !== false; else htmlLabel">{{item.label}}</span>\n                        <ng-template #htmlLabel><span class="p-steps-title" [innerHTML]="item.label"></span></ng-template>\n                    </a>\n                    <ng-template #elseBlock>\n                        <a [attr.href]="item.url" class="p-menuitem-link" role="presentation" (click)="itemClick($event, item, i)" (keydown.enter)="itemClick($event, item, i)" [attr.target]="item.target" [attr.id]="item.id" \n                            [attr.tabindex]="item.disabled||(i !== activeIndex && readonly) ? null : (item.tabindex ? item.tabindex : \'0\')">\n                            <span class="p-steps-number">{{i + 1}}</span>\n                            <span class="p-steps-title" *ngIf="item.escape !== false; else htmlRouteLabel">{{item.label}}</span>\n                            <ng-template #htmlRouteLabel><span class="p-steps-title" [innerHTML]="item.label"></span></ng-template>\n                        </a>\n                    </ng-template>\n                </li>\n            </ul>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-steps{position:relative}.p-steps ul{display:flex;list-style-type:none;margin:0;padding:0}.p-steps-item{display:flex;flex:1 1 auto;justify-content:center;position:relative}.p-steps-item .p-menuitem-link{align-items:center;display:inline-flex;flex-direction:column;overflow:hidden;text-decoration:none}.p-steps.p-steps-readonly .p-steps-item{cursor:auto}.p-steps-item.p-steps-current .p-menuitem-link{cursor:default}.p-steps-title{white-space:nowrap}.p-steps-number{align-items:center;display:flex;justify-content:center}.p-steps-title{display:block}"]}]}],Steps.ctorParameters=(()=>[{type:Router},{type:ActivatedRoute},{type:ChangeDetectorRef}]),Steps.propDecorators={activeIndex:[{type:Input}],model:[{type:Input}],readonly:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],activeIndexChange:[{type:Output}]};export class StepsModule{};StepsModule.decorators=[{type:NgModule,args:[{imports:[CommonModule,RouterModule],exports:[Steps,RouterModule],declarations:[Steps]}]}];