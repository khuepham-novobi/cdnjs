import{forwardRef,EventEmitter,Component,ChangeDetectionStrategy,ViewEncapsulation,ChangeDetectorRef,Input,ViewChild,Output,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";const CHECKBOX_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(()=>Checkbox),multi:!0};class Checkbox{constructor(e){this.cd=e,this.checkboxIcon="pi pi-check",this.onChange=new EventEmitter,this.onModelChange=(()=>{}),this.onModelTouched=(()=>{}),this.focused=!1,this.checked=!1}onClick(e,t,o){e.preventDefault(),this.disabled||this.readonly||(this.checked=!this.checked,this.updateModel(e),o&&t.focus())}updateModel(e){this.binary?this.onModelChange(this.checked):(this.checked?this.addValue():this.removeValue(),this.onModelChange(this.model),this.formControl&&this.formControl.setValue(this.model)),this.onChange.emit({checked:this.checked,originalEvent:e})}handleChange(e){this.readonly||(this.checked=e.target.checked,this.updateModel(e))}isChecked(){return this.binary?this.model:this.model&&this.model.indexOf(this.value)>-1}removeValue(){this.model=this.model.filter(e=>e!==this.value)}addValue(){this.model?this.model=[...this.model,this.value]:this.model=[this.value]}onFocus(){this.focused=!0}onBlur(){this.focused=!1,this.onModelTouched()}focus(){this.inputViewChild.nativeElement.focus()}writeValue(e){this.model=e,this.checked=this.isChecked(),this.cd.markForCheck()}registerOnChange(e){this.onModelChange=e}registerOnTouched(e){this.onModelTouched=e}setDisabledState(e){this.disabled=e,this.cd.markForCheck()}}Checkbox.decorators=[{type:Component,args:[{selector:"p-checkbox",template:'\n        <div [ngStyle]="style" [ngClass]="{\'p-checkbox p-component\': true, \'p-checkbox-checked\': checked, \'p-checkbox-disabled\': disabled, \'p-checkbox-focused\': focused}" [class]="styleClass">\n            <div class="p-hidden-accessible">\n                <input #cb type="checkbox" [attr.id]="inputId" [attr.name]="name" [readonly]="readonly" [value]="value" [checked]="checked" (focus)="onFocus()" (blur)="onBlur()"\n                (change)="handleChange($event)" [disabled]="disabled" [attr.tabindex]="tabindex" [attr.aria-labelledby]="ariaLabelledBy" [attr.required]="required">\n            </div>\n            <div class="p-checkbox-box" (click)="onClick($event,cb,true)"\n                        [ngClass]="{\'p-highlight\': checked, \'p-disabled\': disabled, \'p-focus\': focused}" role="checkbox" [attr.aria-checked]="checked">\n                <span class="p-checkbox-icon" [ngClass]="checked ? checkboxIcon : null"></span>\n            </div>\n        </div>\n        <label (click)="onClick($event,cb,true)" [class]="labelStyleClass"\n                [ngClass]="{\'p-checkbox-label\': true, \'p-checkbox-label-active\':checked, \'p-disabled\':disabled, \'p-checkbox-label-focus\':focused}"\n                *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[CHECKBOX_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-checkbox{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;display:inline-flex;user-select:none;vertical-align:bottom}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{align-items:center;display:flex;justify-content:center}p-checkbox{align-items:center;display:inline-flex;vertical-align:bottom}.p-checkbox-label{line-height:1}"]}]}],Checkbox.ctorParameters=(()=>[{type:ChangeDetectorRef}]),Checkbox.propDecorators={value:[{type:Input}],name:[{type:Input}],disabled:[{type:Input}],binary:[{type:Input}],label:[{type:Input}],ariaLabelledBy:[{type:Input}],tabindex:[{type:Input}],inputId:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],labelStyleClass:[{type:Input}],formControl:[{type:Input}],checkboxIcon:[{type:Input}],readonly:[{type:Input}],required:[{type:Input}],inputViewChild:[{type:ViewChild,args:["cb"]}],onChange:[{type:Output}]};class CheckboxModule{}CheckboxModule.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[Checkbox],declarations:[Checkbox]}]}];export{CHECKBOX_VALUE_ACCESSOR,Checkbox,CheckboxModule};