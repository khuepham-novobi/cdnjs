import{Component,EventEmitter,ChangeDetectionStrategy,ViewEncapsulation,ChangeDetectorRef,Input,ContentChildren,Output,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{ButtonModule}from"primeng/button";import{PrimeTemplate}from"primeng/api";class InplaceDisplay{}InplaceDisplay.decorators=[{type:Component,args:[{selector:"p-inplaceDisplay",template:"<ng-content></ng-content>"}]}];class InplaceContent{}InplaceContent.decorators=[{type:Component,args:[{selector:"p-inplaceContent",template:"<ng-content></ng-content>"}]}];class Inplace{constructor(e){this.cd=e,this.closeIcon="pi pi-times",this.onActivate=new EventEmitter,this.onDeactivate=new EventEmitter}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"display":this.displayTemplate=e.template;break;case"content":this.contentTemplate=e.template}})}onActivateClick(e){this.preventClick||this.activate(e)}onDeactivateClick(e){this.preventClick||this.deactivate(e)}activate(e){this.disabled||(this.active=!0,this.onActivate.emit(e),this.cd.markForCheck())}deactivate(e){this.disabled||(this.active=!1,this.hover=!1,this.onDeactivate.emit(e),this.cd.markForCheck())}onKeydown(e){13===e.which&&(this.activate(e),e.preventDefault())}}Inplace.decorators=[{type:Component,args:[{selector:"p-inplace",template:'\n        <div [ngClass]="{\'p-inplace p-component\': true, \'p-inplace-closable\': closable}" [ngStyle]="style" [class]="styleClass">\n            <div class="p-inplace-display" (click)="onActivateClick($event)" tabindex="0" (keydown)="onKeydown($event)"   \n                [ngClass]="{\'p-disabled\':disabled}" *ngIf="!active">\n                <ng-content select="[pInplaceDisplay]"></ng-content>\n                <ng-container *ngTemplateOutlet="displayTemplate"></ng-container>\n            </div>\n            <div class="p-inplace-content" *ngIf="active">\n                <ng-content select="[pInplaceContent]"></ng-content>\n                <ng-container *ngTemplateOutlet="contentTemplate"></ng-container>\n                <button type="button" [icon]="closeIcon" pButton (click)="onDeactivateClick($event)" *ngIf="closable"></button>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-inplace .p-inplace-display{cursor:pointer;display:inline}.p-inplace .p-inplace-content{display:inline}.p-fluid .p-inplace.p-inplace-closable .p-inplace-content{display:flex}.p-fluid .p-inplace.p-inplace-closable .p-inplace-content>.p-inputtext{flex:1 1 auto;width:1%}"]}]}],Inplace.ctorParameters=(()=>[{type:ChangeDetectorRef}]),Inplace.propDecorators={active:[{type:Input}],closable:[{type:Input}],disabled:[{type:Input}],preventClick:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],closeIcon:[{type:Input}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],onActivate:[{type:Output}],onDeactivate:[{type:Output}]};class InplaceModule{}InplaceModule.decorators=[{type:NgModule,args:[{imports:[CommonModule,ButtonModule],exports:[Inplace,InplaceDisplay,InplaceContent,ButtonModule],declarations:[Inplace,InplaceDisplay,InplaceContent]}]}];export{Inplace,InplaceContent,InplaceDisplay,InplaceModule};