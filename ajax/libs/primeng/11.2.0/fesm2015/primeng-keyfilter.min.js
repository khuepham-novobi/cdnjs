import{forwardRef,EventEmitter,Directive,ElementRef,Input,Output,HostListener,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{NG_VALIDATORS}from"@angular/forms";const KEYFILTER_VALIDATOR={provide:NG_VALIDATORS,useExisting:forwardRef(()=>KeyFilter),multi:!0},DEFAULT_MASKS={pint:/[\d]/,int:/[\d\-]/,pnum:/[\d\.]/,money:/[\d\.\s,]/,num:/[\d\-\.]/,hex:/[0-9a-f]/i,email:/[a-z0-9_\.\-@]/i,alpha:/[a-z_]/i,alphanum:/[a-z0-9_]/i},KEYS={TAB:9,RETURN:13,ESC:27,BACKSPACE:8,DELETE:46},SAFARI_KEYS={63234:37,63235:39,63232:38,63233:40,63276:33,63277:34,63272:46,63273:36,63275:35};class KeyFilter{constructor(e){this.el=e,this.ngModelChange=new EventEmitter,this.isAndroid=DomHandler.isAndroid()}get pattern(){return this._pattern}set pattern(e){this._pattern=e,this.regex=DEFAULT_MASKS[this._pattern]||this._pattern}isNavKeyPress(e){let t=e.keyCode;return(t=DomHandler.getBrowser().safari&&SAFARI_KEYS[t]||t)>=33&&t<=40||t==KEYS.RETURN||t==KEYS.TAB||t==KEYS.ESC}isSpecialKey(e){let t=e.keyCode||e.charCode;return 9==t||13==t||27==t||16==t||17==t||t>=18&&t<=20||DomHandler.getBrowser().opera&&!e.shiftKey&&(8==t||t>=33&&t<=35||t>=36&&t<=39||t>=44&&t<=45)}getKey(e){let t=e.keyCode||e.charCode;return DomHandler.getBrowser().safari&&SAFARI_KEYS[t]||t}getCharCode(e){return e.charCode||e.keyCode||e.which}findDelta(e,t){let r="";for(let i=0;i<e.length;i++){e.substr(0,i)+e.substr(i+e.length-t.length)===t&&(r=e.substr(i,e.length-t.length))}return r}isValidChar(e){return this.regex.test(e)}isValidString(e){for(let t=0;t<e.length;t++)if(!this.isValidChar(e.substr(t,1)))return!1;return!0}onInput(e){if(this.isAndroid&&!this.pValidateOnly){let e=this.el.nativeElement.value,t=this.lastValue||"",r=this.findDelta(e,t),i=this.findDelta(t,e);r.length>1||!r&&!i?this.isValidString(e)||(this.el.nativeElement.value=t,this.ngModelChange.emit(t)):i||this.isValidChar(r)||(this.el.nativeElement.value=t,this.ngModelChange.emit(t)),e=this.el.nativeElement.value,this.isValidString(e)&&(this.lastValue=e)}}onKeyPress(e){if(this.isAndroid||this.pValidateOnly)return;let t=DomHandler.getBrowser(),r=this.getKey(e);if(t.mozilla&&(e.ctrlKey||e.altKey))return;if(17==r||18==r)return;let i=this.getCharCode(e),a=String.fromCharCode(i),s=!0;(t.mozilla||!this.isSpecialKey(e)&&a)&&((s=this.regex.test(a))||e.preventDefault())}onPaste(e){const t=e.clipboardData||window.clipboardData.getData("text");if(t){const r=t.getData("text");for(let t of r.toString())if(!this.regex.test(t))return void e.preventDefault()}}validate(e){if(this.pValidateOnly){let e=this.el.nativeElement.value;if(e&&!this.regex.test(e))return{validatePattern:!1}}}}KeyFilter.decorators=[{type:Directive,args:[{selector:"[pKeyFilter]",providers:[KEYFILTER_VALIDATOR]}]}],KeyFilter.ctorParameters=(()=>[{type:ElementRef}]),KeyFilter.propDecorators={pValidateOnly:[{type:Input}],ngModelChange:[{type:Output}],pattern:[{type:Input,args:["pKeyFilter"]}],onInput:[{type:HostListener,args:["input",["$event"]]}],onKeyPress:[{type:HostListener,args:["keypress",["$event"]]}],onPaste:[{type:HostListener,args:["paste",["$event"]]}]};class KeyFilterModule{}KeyFilterModule.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[KeyFilter],declarations:[KeyFilter]}]}];export{KEYFILTER_VALIDATOR,KeyFilter,KeyFilterModule};