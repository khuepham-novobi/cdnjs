import{Injectable,EventEmitter,Component,ViewEncapsulation,ElementRef,NgZone,Input,Output,ViewChild,ContentChildren,ChangeDetectorRef,Directive,HostListener,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{Subject}from"rxjs";import{DomHandler}from"primeng/dom";import{PaginatorModule}from"primeng/paginator";import{FilterService,PrimeTemplate,SharedModule}from"primeng/api";import{ObjectUtils}from"primeng/utils";import{RippleModule}from"primeng/ripple";import{CdkVirtualScrollViewport,ScrollingModule}from"@angular/cdk/scrolling";class TreeTableService{constructor(){this.sortSource=new Subject,this.selectionSource=new Subject,this.contextMenuSource=new Subject,this.uiUpdateSource=new Subject,this.totalRecordsSource=new Subject,this.sortSource$=this.sortSource.asObservable(),this.selectionSource$=this.selectionSource.asObservable(),this.contextMenuSource$=this.contextMenuSource.asObservable(),this.uiUpdateSource$=this.uiUpdateSource.asObservable(),this.totalRecordsSource$=this.totalRecordsSource.asObservable()}onSort(e){this.sortSource.next(e)}onSelectionChange(){this.selectionSource.next()}onContextMenu(e){this.contextMenuSource.next(e)}onUIUpdate(e){this.uiUpdateSource.next(e)}onTotalRecordsChange(e){this.totalRecordsSource.next(e)}}TreeTableService.decorators=[{type:Injectable}];class TreeTable{constructor(e,t,i,l){this.el=e,this.zone=t,this.tableService=i,this.filterService=l,this.lazy=!1,this.lazyLoadOnInit=!0,this.first=0,this.pageLinks=5,this.alwaysShowPaginator=!0,this.paginatorPosition="bottom",this.currentPageReportTemplate="{currentPage} of {totalPages}",this.showFirstLastIcon=!0,this.showPageLinks=!0,this.defaultSortOrder=1,this.sortMode="single",this.resetPageOnSort=!0,this.selectionChange=new EventEmitter,this.contextMenuSelectionChange=new EventEmitter,this.contextMenuSelectionMode="separate",this.compareSelectionBy="deepEquals",this.loadingIcon="pi pi-spinner",this.showLoader=!0,this.virtualScrollDelay=150,this.virtualRowHeight=28,this.columnResizeMode="fit",this.rowTrackBy=((e,t)=>t),this.filters={},this.filterDelay=300,this.filterMode="lenient",this.onFilter=new EventEmitter,this.onNodeExpand=new EventEmitter,this.onNodeCollapse=new EventEmitter,this.onPage=new EventEmitter,this.onSort=new EventEmitter,this.onLazyLoad=new EventEmitter,this.sortFunction=new EventEmitter,this.onColResize=new EventEmitter,this.onColReorder=new EventEmitter,this.onNodeSelect=new EventEmitter,this.onNodeUnselect=new EventEmitter,this.onContextMenuSelect=new EventEmitter,this.onHeaderCheckboxToggle=new EventEmitter,this.onEditInit=new EventEmitter,this.onEditComplete=new EventEmitter,this.onEditCancel=new EventEmitter,this._value=[],this._totalRecords=0,this._sortOrder=1,this.selectionKeys={}}ngOnInit(){this.lazy&&this.lazyLoadOnInit&&this.onLazyLoad.emit(this.createLazyLoadMetadata()),this.initialized=!0}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"caption":this.captionTemplate=e.template;break;case"header":this.headerTemplate=e.template;break;case"body":this.bodyTemplate=e.template;break;case"loadingbody":this.loadingBodyTemplate=e.template;break;case"footer":this.footerTemplate=e.template;break;case"summary":this.summaryTemplate=e.template;break;case"colgroup":this.colGroupTemplate=e.template;break;case"emptymessage":this.emptyMessageTemplate=e.template;break;case"paginatorleft":this.paginatorLeftTemplate=e.template;break;case"paginatorright":this.paginatorRightTemplate=e.template;break;case"paginatordropdownitem":this.paginatorDropdownItemTemplate=e.template;break;case"frozenheader":this.frozenHeaderTemplate=e.template;break;case"frozenbody":this.frozenBodyTemplate=e.template;break;case"frozenfooter":this.frozenFooterTemplate=e.template;break;case"frozencolgroup":this.frozenColGroupTemplate=e.template}})}ngOnChanges(e){e.value&&(this._value=e.value.currentValue,this.lazy||(this.totalRecords=this._value?this._value.length:0,"single"==this.sortMode&&this.sortField?this.sortSingle():"multiple"==this.sortMode&&this.multiSortMeta?this.sortMultiple():this.hasFilter()&&this._filter()),this.updateSerializedValue(),this.tableService.onUIUpdate(this.value)),e.sortField&&(this._sortField=e.sortField.currentValue,this.lazy&&!this.initialized||"single"===this.sortMode&&this.sortSingle()),e.sortOrder&&(this._sortOrder=e.sortOrder.currentValue,this.lazy&&!this.initialized||"single"===this.sortMode&&this.sortSingle()),e.multiSortMeta&&(this._multiSortMeta=e.multiSortMeta.currentValue,"multiple"===this.sortMode&&this.sortMultiple()),e.selection&&(this._selection=e.selection.currentValue,this.preventSelectionSetterPropagation||(this.updateSelectionKeys(),this.tableService.onSelectionChange()),this.preventSelectionSetterPropagation=!1)}get value(){return this._value}set value(e){this._value=e}updateSerializedValue(){this.serializedValue=[],this.paginator?this.serializePageNodes():this.serializeNodes(null,this.filteredNodes||this.value,0,!0)}serializeNodes(e,t,i,l){if(t&&t.length)for(let o of t){o.parent=e;const t={node:o,parent:e,level:i,visible:l&&(!e||e.expanded)};this.serializedValue.push(t),t.visible&&o.expanded&&this.serializeNodes(o,o.children,i+1,t.visible)}}serializePageNodes(){let e=this.filteredNodes||this.value;if(this.serializedValue=[],e&&e.length){const t=this.lazy?0:this.first;for(let i=t;i<t+this.rows;i++){let t=e[i];t&&(this.serializedValue.push({node:t,parent:null,level:0,visible:!0}),this.serializeNodes(t,t.children,1,!0))}}}get totalRecords(){return this._totalRecords}set totalRecords(e){this._totalRecords=e,this.tableService.onTotalRecordsChange(this._totalRecords)}get sortField(){return this._sortField}set sortField(e){this._sortField=e}get sortOrder(){return this._sortOrder}set sortOrder(e){this._sortOrder=e}get multiSortMeta(){return this._multiSortMeta}set multiSortMeta(e){this._multiSortMeta=e}get selection(){return this._selection}set selection(e){this._selection=e}updateSelectionKeys(){if(this.dataKey&&this._selection)if(this.selectionKeys={},Array.isArray(this._selection))for(let e of this._selection)this.selectionKeys[String(ObjectUtils.resolveFieldData(e.data,this.dataKey))]=1;else this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection.data,this.dataKey))]=1}onPageChange(e){this.first=e.first,this.rows=e.rows,this.lazy?this.onLazyLoad.emit(this.createLazyLoadMetadata()):this.serializePageNodes(),this.onPage.emit({first:this.first,rows:this.rows}),this.tableService.onUIUpdate(this.value),this.scrollable&&this.resetScrollTop()}sort(e){let t=e.originalEvent;if("single"===this.sortMode&&(this._sortOrder=this.sortField===e.field?-1*this.sortOrder:this.defaultSortOrder,this._sortField=e.field,this.sortSingle(),this.resetPageOnSort&&this.scrollable&&this.resetScrollTop()),"multiple"===this.sortMode){let i=t.metaKey||t.ctrlKey,l=this.getSortMeta(e.field);l?i?l.order=-1*l.order:(this._multiSortMeta=[{field:e.field,order:-1*l.order}],this.resetPageOnSort&&this.scrollable&&this.resetScrollTop()):(i&&this.multiSortMeta||(this._multiSortMeta=[],this.resetPageOnSort&&this.scrollable&&this.resetScrollTop()),this.multiSortMeta.push({field:e.field,order:this.defaultSortOrder})),this.sortMultiple()}}sortSingle(){if(this.sortField&&this.sortOrder){this.lazy?this.onLazyLoad.emit(this.createLazyLoadMetadata()):this.value&&(this.sortNodes(this.value),this.hasFilter()&&this._filter());let e={field:this.sortField,order:this.sortOrder};this.onSort.emit(e),this.tableService.onSort(e),this.updateSerializedValue()}}sortNodes(e){if(e&&0!==e.length){this.customSort?this.sortFunction.emit({data:e,mode:this.sortMode,field:this.sortField,order:this.sortOrder}):e.sort((e,t)=>{let i=ObjectUtils.resolveFieldData(e.data,this.sortField),l=ObjectUtils.resolveFieldData(t.data,this.sortField),o=null;return o=null==i&&null!=l?-1:null!=i&&null==l?1:null==i&&null==l?0:"string"==typeof i&&"string"==typeof l?i.localeCompare(l,void 0,{numeric:!0}):i<l?-1:i>l?1:0,this.sortOrder*o});for(let t of e)this.sortNodes(t.children)}}sortMultiple(){this.multiSortMeta&&(this.lazy?this.onLazyLoad.emit(this.createLazyLoadMetadata()):this.value&&(this.sortMultipleNodes(this.value),this.hasFilter()&&this._filter()),this.onSort.emit({multisortmeta:this.multiSortMeta}),this.updateSerializedValue(),this.tableService.onSort(this.multiSortMeta))}sortMultipleNodes(e){if(e&&0!==e.length){this.customSort?this.sortFunction.emit({data:this.value,mode:this.sortMode,multiSortMeta:this.multiSortMeta}):e.sort((e,t)=>this.multisortField(e,t,this.multiSortMeta,0));for(let t of e)this.sortMultipleNodes(t.children)}}multisortField(e,t,i,l){let o=ObjectUtils.resolveFieldData(e.data,i[l].field),n=ObjectUtils.resolveFieldData(t.data,i[l].field),r=null;if(null==o&&null!=n?r=-1:null!=o&&null==n?r=1:null==o&&null==n&&(r=0),"string"==typeof o||o instanceof String){if(o.localeCompare&&o!=n)return i[l].order*o.localeCompare(n,void 0,{numeric:!0})}else r=o<n?-1:1;return o==n?i.length-1>l?this.multisortField(e,t,i,l+1):0:i[l].order*r}getSortMeta(e){if(this.multiSortMeta&&this.multiSortMeta.length)for(let t=0;t<this.multiSortMeta.length;t++)if(this.multiSortMeta[t].field===e)return this.multiSortMeta[t];return null}isSorted(e){if("single"===this.sortMode)return this.sortField&&this.sortField===e;if("multiple"===this.sortMode){let t=!1;if(this.multiSortMeta)for(let i=0;i<this.multiSortMeta.length;i++)if(this.multiSortMeta[i].field==e){t=!0;break}return t}}createLazyLoadMetadata(){return{first:this.first,rows:this.rows,sortField:this.sortField,sortOrder:this.sortOrder,filters:this.filters,globalFilter:this.filters&&this.filters.global?this.filters.global.value:null,multiSortMeta:this.multiSortMeta}}resetScrollTop(){this.virtualScroll?this.scrollToVirtualIndex(0):this.scrollTo({top:0})}scrollToVirtualIndex(e){this.scrollableViewChild&&this.scrollableViewChild.scrollToVirtualIndex(e),this.scrollableFrozenViewChild&&this.scrollableFrozenViewChild.scrollToVirtualIndex(e)}scrollTo(e){this.scrollableViewChild&&this.scrollableViewChild.scrollTo(e),this.scrollableFrozenViewChild&&this.scrollableFrozenViewChild.scrollTo(e)}isEmpty(){let e=this.filteredNodes||this.value;return null==e||0==e.length}getBlockableElement(){return this.el.nativeElement.children[0]}onColumnResizeBegin(e){let t=DomHandler.getOffset(this.containerViewChild.nativeElement).left;this.lastResizerHelperX=e.pageX-t+this.containerViewChild.nativeElement.scrollLeft,e.preventDefault()}onColumnResize(e){let t=DomHandler.getOffset(this.containerViewChild.nativeElement).left;DomHandler.addClass(this.containerViewChild.nativeElement,"p-unselectable-text"),this.resizeHelperViewChild.nativeElement.style.height=this.containerViewChild.nativeElement.offsetHeight+"px",this.resizeHelperViewChild.nativeElement.style.top="0px",this.resizeHelperViewChild.nativeElement.style.left=e.pageX-t+this.containerViewChild.nativeElement.scrollLeft+"px",this.resizeHelperViewChild.nativeElement.style.display="block"}onColumnResizeEnd(e,t){let i=this.resizeHelperViewChild.nativeElement.offsetLeft-this.lastResizerHelperX,l=t.offsetWidth,o=l+i,n=t.style.minWidth||15;if(l+i>parseInt(n)){if("fit"===this.columnResizeMode){let e=t.nextElementSibling;for(;!e.offsetParent;)e=e.nextElementSibling;if(e){let l=e.offsetWidth-i,n=e.style.minWidth||15;if(o>15&&l>parseInt(n))if(this.scrollable){let e=this.findParentScrollableView(t),i=DomHandler.findSingle(e,".p-treetable-scrollable-body table")||DomHandler.findSingle(e,".p-treetable-virtual-scrollable-body table"),n=DomHandler.findSingle(e,"table.p-treetable-scrollable-header-table"),r=DomHandler.findSingle(e,"table.p-treetable-scrollable-footer-table"),s=DomHandler.index(t);this.resizeColGroup(n,s,o,l),this.resizeColGroup(i,s,o,l),this.resizeColGroup(r,s,o,l)}else t.style.width=o+"px",e&&(e.style.width=l+"px")}}else if("expand"===this.columnResizeMode)if(this.scrollable){let e=this.findParentScrollableView(t),l=DomHandler.findSingle(e,".p-treetable-scrollable-body")||DomHandler.findSingle(e,"cdk-virtual-scroll-viewport"),n=DomHandler.findSingle(e,".p-treetable-scrollable-header"),r=DomHandler.findSingle(e,".p-treetable-scrollable-footer"),s=DomHandler.findSingle(e,".p-treetable-scrollable-body table")||DomHandler.findSingle(e,"cdk-virtual-scroll-viewport table"),a=DomHandler.findSingle(e,"table.p-treetable-scrollable-header-table"),d=DomHandler.findSingle(e,"table.p-treetable-scrollable-footer-table");s.style.width=s.offsetWidth+i+"px",a.style.width=a.offsetWidth+i+"px",d&&(d.style.width=d.offsetWidth+i+"px");let h=DomHandler.index(t);const c=t?s.offsetWidth+i:o,p=t?a.offsetWidth+i:o,u=this.containerViewChild.nativeElement.offsetWidth>=c;let b=(e,t,i,o)=>{e&&t&&(e.style.width=o?i+DomHandler.calculateScrollbarWidth(l)+"px":"auto",t.style.width=i+"px")};b(l,s,c,u),b(n,a,p,u),b(r,d,p,u),this.resizeColGroup(a,h,o,null),this.resizeColGroup(s,h,o,null),this.resizeColGroup(d,h,o,null)}else{this.tableViewChild.nativeElement.style.width=this.tableViewChild.nativeElement.offsetWidth+i+"px",t.style.width=o+"px";let e=this.tableViewChild.nativeElement.style.width;this.containerViewChild.nativeElement.style.width=e+"px"}this.onColResize.emit({element:t,delta:i})}this.resizeHelperViewChild.nativeElement.style.display="none",DomHandler.removeClass(this.containerViewChild.nativeElement,"p-unselectable-text")}findParentScrollableView(e){if(e){let t=e.parentElement;for(;t&&!DomHandler.hasClass(t,"p-treetable-scrollable-view");)t=t.parentElement;return t}return null}resizeColGroup(e,t,i,l){if(e){let o="COLGROUP"===e.children[0].nodeName?e.children[0]:null;if(!o)throw"Scrollable tables require a colgroup to support resizable columns";{let e=o.children[t],n=e.nextElementSibling;e.style.width=i+"px",n&&l&&(n.style.width=l+"px")}}}onColumnDragStart(e,t){this.reorderIconWidth=DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement),this.reorderIconHeight=DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement),this.draggedColumn=t,e.dataTransfer.setData("text","b")}onColumnDragEnter(e,t){if(this.reorderableColumns&&this.draggedColumn&&t){e.preventDefault();let i=DomHandler.getOffset(this.containerViewChild.nativeElement),l=DomHandler.getOffset(t);if(this.draggedColumn!=t){let o=l.left-i.left,n=(i.top,l.top,l.left+t.offsetWidth/2);this.reorderIndicatorUpViewChild.nativeElement.style.top=l.top-i.top-(this.reorderIconHeight-1)+"px",this.reorderIndicatorDownViewChild.nativeElement.style.top=l.top-i.top+t.offsetHeight+"px",e.pageX>n?(this.reorderIndicatorUpViewChild.nativeElement.style.left=o+t.offsetWidth-Math.ceil(this.reorderIconWidth/2)+"px",this.reorderIndicatorDownViewChild.nativeElement.style.left=o+t.offsetWidth-Math.ceil(this.reorderIconWidth/2)+"px",this.dropPosition=1):(this.reorderIndicatorUpViewChild.nativeElement.style.left=o-Math.ceil(this.reorderIconWidth/2)+"px",this.reorderIndicatorDownViewChild.nativeElement.style.left=o-Math.ceil(this.reorderIconWidth/2)+"px",this.dropPosition=-1),this.reorderIndicatorUpViewChild.nativeElement.style.display="block",this.reorderIndicatorDownViewChild.nativeElement.style.display="block"}else e.dataTransfer.dropEffect="none"}}onColumnDragLeave(e){this.reorderableColumns&&this.draggedColumn&&(e.preventDefault(),this.reorderIndicatorUpViewChild.nativeElement.style.display="none",this.reorderIndicatorDownViewChild.nativeElement.style.display="none")}onColumnDrop(e,t){if(e.preventDefault(),this.draggedColumn){let e=DomHandler.indexWithinGroup(this.draggedColumn,"ttreorderablecolumn"),i=DomHandler.indexWithinGroup(t,"ttreorderablecolumn"),l=e!=i;l&&(i-e==1&&-1===this.dropPosition||e-i==1&&1===this.dropPosition)&&(l=!1),l&&i<e&&1===this.dropPosition&&(i+=1),l&&i>e&&-1===this.dropPosition&&(i-=1),l&&(ObjectUtils.reorderArray(this.columns,e,i),this.onColReorder.emit({dragIndex:e,dropIndex:i,columns:this.columns})),this.reorderIndicatorUpViewChild.nativeElement.style.display="none",this.reorderIndicatorDownViewChild.nativeElement.style.display="none",this.draggedColumn.draggable=!1,this.draggedColumn=null,this.dropPosition=null}}handleRowClick(e){let t=e.originalEvent.target.nodeName;if("INPUT"!=t&&"BUTTON"!=t&&"A"!=t&&!DomHandler.hasClass(e.originalEvent.target,"p-clickable")){if(this.selectionMode){this.preventSelectionSetterPropagation=!0;let t=e.rowNode,i=this.isSelected(t.node),l=!this.rowTouched&&this.metaKeySelection,o=this.dataKey?String(ObjectUtils.resolveFieldData(t.node.data,this.dataKey)):null;if(l){let l=e.originalEvent.metaKey||e.originalEvent.ctrlKey;if(i&&l){if(this.isSingleSelectionMode())this._selection=null,this.selectionKeys={},this.selectionChange.emit(null);else{let e=this.findIndexInSelection(t.node);this._selection=this.selection.filter((t,i)=>i!=e),this.selectionChange.emit(this.selection),o&&delete this.selectionKeys[o]}this.onNodeUnselect.emit({originalEvent:e.originalEvent,node:t.node,type:"row"})}else this.isSingleSelectionMode()?(this._selection=t.node,this.selectionChange.emit(t.node),o&&(this.selectionKeys={},this.selectionKeys[o]=1)):this.isMultipleSelectionMode()&&(l?this._selection=this.selection||[]:(this._selection=[],this.selectionKeys={}),this._selection=[...this.selection,t.node],this.selectionChange.emit(this.selection),o&&(this.selectionKeys[o]=1)),this.onNodeSelect.emit({originalEvent:e.originalEvent,node:t.node,type:"row",index:e.rowIndex})}else if("single"===this.selectionMode)i?(this._selection=null,this.selectionKeys={},this.selectionChange.emit(this.selection),this.onNodeUnselect.emit({originalEvent:e.originalEvent,node:t.node,type:"row"})):(this._selection=t.node,this.selectionChange.emit(this.selection),this.onNodeSelect.emit({originalEvent:e.originalEvent,node:t.node,type:"row",index:e.rowIndex}),o&&(this.selectionKeys={},this.selectionKeys[o]=1));else if("multiple"===this.selectionMode)if(i){let i=this.findIndexInSelection(t.node);this._selection=this.selection.filter((e,t)=>t!=i),this.selectionChange.emit(this.selection),this.onNodeUnselect.emit({originalEvent:e.originalEvent,node:t.node,type:"row"}),o&&delete this.selectionKeys[o]}else this._selection=this.selection?[...this.selection,t.node]:[t.node],this.selectionChange.emit(this.selection),this.onNodeSelect.emit({originalEvent:e.originalEvent,node:t.node,type:"row",index:e.rowIndex}),o&&(this.selectionKeys[o]=1);this.tableService.onSelectionChange()}this.rowTouched=!1}}handleRowTouchEnd(e){this.rowTouched=!0}handleRowRightClick(e){if(this.contextMenu){const t=e.rowNode.node;if("separate"===this.contextMenuSelectionMode)this.contextMenuSelection=t,this.contextMenuSelectionChange.emit(t),this.onContextMenuSelect.emit({originalEvent:e.originalEvent,node:t}),this.contextMenu.show(e.originalEvent),this.tableService.onContextMenu(t);else if("joint"===this.contextMenuSelectionMode){this.preventSelectionSetterPropagation=!0;let i=this.isSelected(t),l=this.dataKey?String(ObjectUtils.resolveFieldData(t.data,this.dataKey)):null;i||(this.isSingleSelectionMode()?(this.selection=t,this.selectionChange.emit(t)):this.isMultipleSelectionMode()&&(this.selection=[t],this.selectionChange.emit(this.selection)),l&&(this.selectionKeys[l]=1)),this.contextMenu.show(e.originalEvent),this.onContextMenuSelect.emit({originalEvent:e.originalEvent,node:t})}}}toggleNodeWithCheckbox(e){this.selection=this.selection||[],this.preventSelectionSetterPropagation=!0;let t=e.rowNode.node;this.isSelected(t)?(this.propagateSelectionDown(t,!1),e.rowNode.parent&&this.propagateSelectionUp(t.parent,!1),this.selectionChange.emit(this.selection),this.onNodeUnselect.emit({originalEvent:e,node:t})):(this.propagateSelectionDown(t,!0),e.rowNode.parent&&this.propagateSelectionUp(t.parent,!0),this.selectionChange.emit(this.selection),this.onNodeSelect.emit({originalEvent:e,node:t})),this.tableService.onSelectionChange()}toggleNodesWithCheckbox(e,t){let i=this.filteredNodes||this.value;if(this._selection=t&&i?i.slice():[],t){if(i&&i.length)for(let e of i)this.propagateSelectionDown(e,!0)}else this._selection=[],this.selectionKeys={};this.preventSelectionSetterPropagation=!0,this.selectionChange.emit(this._selection),this.tableService.onSelectionChange(),this.onHeaderCheckboxToggle.emit({originalEvent:e,checked:t})}propagateSelectionUp(e,t){if(e.children&&e.children.length){let i=0,l=!1,o=this.dataKey?String(ObjectUtils.resolveFieldData(e.data,this.dataKey)):null;for(let t of e.children)this.isSelected(t)?i++:t.partialSelected&&(l=!0);if(t&&i==e.children.length)this._selection=[...this.selection||[],e],e.partialSelected=!1,o&&(this.selectionKeys[o]=1);else{if(!t){let t=this.findIndexInSelection(e);t>=0&&(this._selection=this.selection.filter((e,i)=>i!=t),o&&delete this.selectionKeys[o])}l||i>0&&i!=e.children.length?e.partialSelected=!0:e.partialSelected=!1}}let i=e.parent;i&&this.propagateSelectionUp(i,t)}propagateSelectionDown(e,t){let i=this.findIndexInSelection(e),l=this.dataKey?String(ObjectUtils.resolveFieldData(e.data,this.dataKey)):null;if(t&&-1==i?(this._selection=[...this.selection||[],e],l&&(this.selectionKeys[l]=1)):!t&&i>-1&&(this._selection=this.selection.filter((e,t)=>t!=i),l&&delete this.selectionKeys[l]),e.partialSelected=!1,e.children&&e.children.length)for(let i of e.children)this.propagateSelectionDown(i,t)}isSelected(e){return!(!e||!this.selection)&&(this.dataKey?void 0!==this.selectionKeys[ObjectUtils.resolveFieldData(e.data,this.dataKey)]:this.selection instanceof Array?this.findIndexInSelection(e)>-1:this.equals(e,this.selection))}findIndexInSelection(e){let t=-1;if(this.selection&&this.selection.length)for(let i=0;i<this.selection.length;i++)if(this.equals(e,this.selection[i])){t=i;break}return t}isSingleSelectionMode(){return"single"===this.selectionMode}isMultipleSelectionMode(){return"multiple"===this.selectionMode}equals(e,t){return"equals"===this.compareSelectionBy?e===t:ObjectUtils.equals(e.data,t.data,this.dataKey)}filter(e,t,i){this.filterTimeout&&clearTimeout(this.filterTimeout),this.isFilterBlank(e)?this.filters[t]&&delete this.filters[t]:this.filters[t]={value:e,matchMode:i},this.filterTimeout=setTimeout(()=>{this._filter(),this.filterTimeout=null},this.filterDelay)}filterGlobal(e,t){this.filter(e,"global",t)}isFilterBlank(e){return null==e||("string"==typeof e&&0==e.trim().length||e instanceof Array&&0==e.length)}_filter(){if(this.lazy)this.onLazyLoad.emit(this.createLazyLoadMetadata());else{if(!this.value)return;if(this.hasFilter()){let e;if(this.filters.global){if(!this.columns&&!this.globalFilterFields)throw new Error("Global filtering requires dynamic columns or globalFilterFields to be defined.");e=this.globalFilterFields||this.columns}this.filteredNodes=[];const t="strict"===this.filterMode;let i=!1;for(let l of this.value){let o,n=Object.assign({},l),r=!0,s=!1;for(let e in this.filters)if(this.filters.hasOwnProperty(e)&&"global"!==e){let i=this.filters[e],l=e,s=i.value,a=i.matchMode||"startsWith";if(o={filterField:l,filterValue:s,filterConstraint:this.filterService.filters[a],isStrictMode:t},(!t||this.findFilteredNodes(n,o)||this.isFilterMatched(n,o))&&(t||this.isFilterMatched(n,o)||this.findFilteredNodes(n,o))||(r=!1),!r)break}if(this.filters.global&&!s&&e)for(let i=0;i<e.length;i++){let l=Object.assign({},n);o={filterField:e[i].field||e[i],filterValue:this.filters.global.value,filterConstraint:this.filterService.filters[this.filters.global.matchMode],isStrictMode:t},(t&&(this.findFilteredNodes(l,o)||this.isFilterMatched(l,o))||!t&&(this.isFilterMatched(l,o)||this.findFilteredNodes(l,o)))&&(s=!0,n=l)}let a=r;this.filters.global&&(a=r&&s),a&&this.filteredNodes.push(n),i=i||!r||s||r&&this.filteredNodes.length>0||!s&&0===this.filteredNodes.length}i||(this.filteredNodes=null),this.paginator&&(this.totalRecords=this.filteredNodes?this.filteredNodes.length:this.value?this.value.length:0)}else this.filteredNodes=null,this.paginator&&(this.totalRecords=this.value?this.value.length:0)}this.first=0;const e=this.filteredNodes||this.value;this.onFilter.emit({filters:this.filters,filteredValue:e}),this.tableService.onUIUpdate(e),this.updateSerializedValue(),this.scrollable&&this.resetScrollTop()}findFilteredNodes(e,t){if(e){let i=!1;if(e.children){let l=[...e.children];e.children=[];for(let o of l){let l=Object.assign({},o);this.isFilterMatched(l,t)&&(i=!0,e.children.push(l))}}if(i)return!0}}isFilterMatched(e,{filterField:t,filterValue:i,filterConstraint:l,isStrictMode:o}){let n=!1;return l(ObjectUtils.resolveFieldData(e.data,t),i,this.filterLocale)&&(n=!0),(!n||o&&!this.isNodeLeaf(e))&&(n=this.findFilteredNodes(e,{filterField:t,filterValue:i,filterConstraint:l,isStrictMode:o})||n),n}isNodeLeaf(e){return!1!==e.leaf&&!(e.children&&e.children.length)}hasFilter(){let e=!0;for(let t in this.filters)if(this.filters.hasOwnProperty(t)){e=!1;break}return!e}reset(){this._sortField=null,this._sortOrder=1,this._multiSortMeta=null,this.tableService.onSort(null),this.filteredNodes=null,this.filters={},this.first=0,this.lazy?this.onLazyLoad.emit(this.createLazyLoadMetadata()):this.totalRecords=this._value?this._value.length:0}updateEditingCell(e){this.editingCell=e,this.bindDocumentEditListener()}isEditingCellValid(){return this.editingCell&&0===DomHandler.find(this.editingCell,".ng-invalid.ng-dirty").length}bindDocumentEditListener(){this.documentEditListener||(this.documentEditListener=(e=>{this.editingCell&&!this.editingCellClick&&this.isEditingCellValid()&&(DomHandler.removeClass(this.editingCell,"p-cell-editing"),this.editingCell=null,this.unbindDocumentEditListener()),this.editingCellClick=!1}),document.addEventListener("click",this.documentEditListener))}unbindDocumentEditListener(){this.documentEditListener&&(document.removeEventListener("click",this.documentEditListener),this.documentEditListener=null)}ngOnDestroy(){this.unbindDocumentEditListener(),this.editingCell=null,this.initialized=null}}TreeTable.decorators=[{type:Component,args:[{selector:"p-treeTable",template:'\n        <div #container [ngStyle]="style" [class]="styleClass" data-scrollselectors=".p-treetable-scrollable-body"\n                [ngClass]="{\'p-treetable p-component\': true,\n                \'p-treetable-hoverable-rows\': (rowHover||(selectionMode === \'single\' || selectionMode === \'multiple\')),\n                \'p-treetable-auto-layout\': autoLayout,\n                \'p-treetable-resizable\': resizableColumns,\n                \'p-treetable-resizable-fit\': (resizableColumns && columnResizeMode === \'fit\'),\n                \'p-treetable-flex-scrollable\': (scrollable && scrollHeight === \'flex\')}">\n            <div class="p-treetable-loading" *ngIf="loading && showLoader">\n                <div class="p-treetable-loading-overlay p-component-overlay">\n                    <i [class]="\'p-treetable-loading-icon pi-spin \' + loadingIcon"></i>\n                </div>\n            </div>\n            <div *ngIf="captionTemplate" class="p-treetable-header">\n                <ng-container *ngTemplateOutlet="captionTemplate"></ng-container>\n            </div>\n            <p-paginator [rows]="rows" [first]="first" [totalRecords]="totalRecords" [pageLinkSize]="pageLinks" styleClass="p-paginator-top" [alwaysShow]="alwaysShowPaginator"\n                (onPageChange)="onPageChange($event)" [rowsPerPageOptions]="rowsPerPageOptions" *ngIf="paginator && (paginatorPosition === \'top\' || paginatorPosition ==\'both\')"\n                [templateLeft]="paginatorLeftTemplate" [templateRight]="paginatorRightTemplate" [dropdownAppendTo]="paginatorDropdownAppendTo"\n                [currentPageReportTemplate]="currentPageReportTemplate" [showFirstLastIcon]="showFirstLastIcon" [dropdownItemTemplate]="paginatorDropdownItemTemplate" [showCurrentPageReport]="showCurrentPageReport" [showJumpToPageDropdown]="showJumpToPageDropdown" [showPageLinks]="showPageLinks"></p-paginator>\n\n            <div class="p-treetable-wrapper" *ngIf="!scrollable">\n                <table #table [ngClass]="tableStyleClass" [ngStyle]="tableStyle">\n                    <ng-container *ngTemplateOutlet="colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <thead class="p-treetable-thead">\n                        <ng-container *ngTemplateOutlet="headerTemplate; context: {$implicit: columns}"></ng-container>\n                    </thead>\n                    <tbody class="p-treetable-tbody" [pTreeTableBody]="columns" [pTreeTableBodyTemplate]="bodyTemplate"></tbody>\n                    <tfoot class="p-treetable-tfoot">\n                        <ng-container *ngTemplateOutlet="footerTemplate; context {$implicit: columns}"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class="p-treetable-scrollable-wrapper" *ngIf="scrollable">\n               <div class="p-treetable-scrollable-view p-treetable-frozen-view" *ngIf="frozenColumns||frozenBodyTemplate" #scrollableFrozenView [ttScrollableView]="frozenColumns" [frozen]="true" [ngStyle]="{width: frozenWidth}" [scrollHeight]="scrollHeight"></div>\n               <div class="p-treetable-scrollable-view" #scrollableView [ttScrollableView]="columns" [frozen]="false" [scrollHeight]="scrollHeight" [ngStyle]="{left: frozenWidth, width: \'calc(100% - \'+frozenWidth+\')\'}"></div>\n            </div>\n\n            <p-paginator [rows]="rows" [first]="first" [totalRecords]="totalRecords" [pageLinkSize]="pageLinks" styleClass="p-paginator-bottom" [alwaysShow]="alwaysShowPaginator"\n                (onPageChange)="onPageChange($event)" [rowsPerPageOptions]="rowsPerPageOptions" *ngIf="paginator && (paginatorPosition === \'bottom\' || paginatorPosition ==\'both\')"\n                [templateLeft]="paginatorLeftTemplate" [templateRight]="paginatorRightTemplate" [dropdownAppendTo]="paginatorDropdownAppendTo"\n                [currentPageReportTemplate]="currentPageReportTemplate" [showFirstLastIcon]="showFirstLastIcon" [dropdownItemTemplate]="paginatorDropdownItemTemplate" [showCurrentPageReport]="showCurrentPageReport" [showJumpToPageDropdown]="showJumpToPageDropdown" [showPageLinks]="showPageLinks"></p-paginator>\n            <div *ngIf="summaryTemplate" class="p-treetable-footer">\n                <ng-container *ngTemplateOutlet="summaryTemplate"></ng-container>\n            </div>\n\n            <div #resizeHelper class="p-column-resizer-helper" style="display:none" *ngIf="resizableColumns"></div>\n\n            <span #reorderIndicatorUp class="pi pi-arrow-down p-treetable-reorder-indicator-up" *ngIf="reorderableColumns"></span>\n            <span #reorderIndicatorDown class="pi pi-arrow-up p-treetable-reorder-indicator-down" *ngIf="reorderableColumns"></span>\n        </div>\n    ',providers:[TreeTableService],encapsulation:ViewEncapsulation.None,styles:[".p-treetable{position:relative}.p-treetable table{border-collapse:collapse;table-layout:fixed;width:100%}.p-treetable .p-sortable-column{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;user-select:none}.p-treetable .p-sortable-column .p-column-title,.p-treetable .p-sortable-column .p-sortable-column-badge,.p-treetable .p-sortable-column .p-sortable-column-icon{vertical-align:middle}.p-treetable .p-sortable-column .p-sortable-column-badge{align-items:center;display:inline-flex;justify-content:center}.p-treetable-auto-layout>.p-treetable-wrapper{overflow-x:auto}.p-treetable-auto-layout>.p-treetable-wrapper>table{table-layout:auto}.p-treetable-hoverable-rows .p-treetable-tbody>tr{cursor:pointer}.p-treetable-toggler{-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;display:inline-flex;justify-content:center;overflow:hidden;position:relative;user-select:none}.p-treetable-toggler,p-treetabletoggler+p-treetablecheckbox+span,p-treetabletoggler+p-treetablecheckbox .p-checkbox{vertical-align:middle}.p-treetable-scrollable-wrapper{position:relative}.p-treetable-scrollable-footer,.p-treetable-scrollable-header{overflow:hidden}.p-treetable-scrollable-body{overflow:auto;position:relative}.p-treetable-scrollable-body>table>.p-treetable-tbody>tr:first-child>td{border-top:0}.p-treetable-virtual-table{position:absolute}.p-treetable-frozen-view .p-treetable-scrollable-body{overflow:hidden}.p-treetable-frozen-view>.p-treetable-scrollable-body>table>.p-treetable-tbody>tr>td:last-child{border-right:0}.p-treetable-unfrozen-view{position:absolute;top:0}.p-treetable-flex-scrollable,.p-treetable-flex-scrollable .p-treetable-scrollable-view,.p-treetable-flex-scrollable .p-treetable-scrollable-wrapper{display:flex;flex:1;flex-direction:column;height:100%}.p-treetable-flex-scrollable .p-treetable-scrollable-body{flex:1}.p-treetable-resizable>.p-treetable-wrapper{overflow-x:auto}.p-treetable-resizable .p-treetable-tbody>tr>td,.p-treetable-resizable .p-treetable-tfoot>tr>td,.p-treetable-resizable .p-treetable-thead>tr>th{overflow:hidden}.p-treetable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-treetable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-treetable .p-column-resizer{border:1px solid transparent;cursor:col-resize;display:block;height:100%;margin:0;padding:0;position:absolute!important;right:0;top:0;width:.5rem}.p-treetable .p-column-resizer-helper{display:none;position:absolute;width:1px;z-index:10}.p-treetable .p-row-editor-cancel,.p-treetable .p-row-editor-init,.p-treetable .p-row-editor-save,.p-treetable .p-row-toggler{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;position:relative}.p-treetable-reorder-indicator-down,.p-treetable-reorder-indicator-up{display:none;position:absolute}[ttReorderableColumn]{cursor:move}.p-treetable .p-treetable-loading-overlay{align-items:center;display:flex;justify-content:center;position:absolute;z-index:2}"]}]}],TreeTable.ctorParameters=(()=>[{type:ElementRef},{type:NgZone},{type:TreeTableService},{type:FilterService}]),TreeTable.propDecorators={columns:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],tableStyle:[{type:Input}],tableStyleClass:[{type:Input}],autoLayout:[{type:Input}],lazy:[{type:Input}],lazyLoadOnInit:[{type:Input}],paginator:[{type:Input}],rows:[{type:Input}],first:[{type:Input}],pageLinks:[{type:Input}],rowsPerPageOptions:[{type:Input}],alwaysShowPaginator:[{type:Input}],paginatorPosition:[{type:Input}],paginatorDropdownAppendTo:[{type:Input}],currentPageReportTemplate:[{type:Input}],showCurrentPageReport:[{type:Input}],showJumpToPageDropdown:[{type:Input}],showFirstLastIcon:[{type:Input}],showPageLinks:[{type:Input}],defaultSortOrder:[{type:Input}],sortMode:[{type:Input}],resetPageOnSort:[{type:Input}],customSort:[{type:Input}],selectionMode:[{type:Input}],selectionChange:[{type:Output}],contextMenuSelection:[{type:Input}],contextMenuSelectionChange:[{type:Output}],contextMenuSelectionMode:[{type:Input}],dataKey:[{type:Input}],metaKeySelection:[{type:Input}],compareSelectionBy:[{type:Input}],rowHover:[{type:Input}],loading:[{type:Input}],loadingIcon:[{type:Input}],showLoader:[{type:Input}],scrollable:[{type:Input}],scrollHeight:[{type:Input}],virtualScroll:[{type:Input}],virtualScrollDelay:[{type:Input}],virtualRowHeight:[{type:Input}],minBufferPx:[{type:Input}],maxBufferPx:[{type:Input}],frozenWidth:[{type:Input}],frozenColumns:[{type:Input}],resizableColumns:[{type:Input}],columnResizeMode:[{type:Input}],reorderableColumns:[{type:Input}],contextMenu:[{type:Input}],rowTrackBy:[{type:Input}],filters:[{type:Input}],globalFilterFields:[{type:Input}],filterDelay:[{type:Input}],filterMode:[{type:Input}],filterLocale:[{type:Input}],onFilter:[{type:Output}],onNodeExpand:[{type:Output}],onNodeCollapse:[{type:Output}],onPage:[{type:Output}],onSort:[{type:Output}],onLazyLoad:[{type:Output}],sortFunction:[{type:Output}],onColResize:[{type:Output}],onColReorder:[{type:Output}],onNodeSelect:[{type:Output}],onNodeUnselect:[{type:Output}],onContextMenuSelect:[{type:Output}],onHeaderCheckboxToggle:[{type:Output}],onEditInit:[{type:Output}],onEditComplete:[{type:Output}],onEditCancel:[{type:Output}],containerViewChild:[{type:ViewChild,args:["container"]}],resizeHelperViewChild:[{type:ViewChild,args:["resizeHelper"]}],reorderIndicatorUpViewChild:[{type:ViewChild,args:["reorderIndicatorUp"]}],reorderIndicatorDownViewChild:[{type:ViewChild,args:["reorderIndicatorDown"]}],tableViewChild:[{type:ViewChild,args:["table"]}],scrollableViewChild:[{type:ViewChild,args:["scrollableView"]}],scrollableFrozenViewChild:[{type:ViewChild,args:["scrollableFrozenView"]}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],value:[{type:Input}],totalRecords:[{type:Input}],sortField:[{type:Input}],sortOrder:[{type:Input}],multiSortMeta:[{type:Input}],selection:[{type:Input}]};class TTBody{constructor(e,t,i){this.tt=e,this.treeTableService=t,this.cd=i,this.subscription=this.tt.tableService.uiUpdateSource$.subscribe(()=>{this.tt.virtualScroll&&this.cd.detectChanges()})}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}TTBody.decorators=[{type:Component,args:[{selector:"[pTreeTableBody]",template:'\n        <ng-container *ngIf="!tt.virtualScroll">\n            <ng-template ngFor let-serializedNode let-rowIndex="index" [ngForOf]="tt.serializedValue" [ngForTrackBy]="tt.rowTrackBy">\n                <ng-container *ngIf="serializedNode.visible">\n                    <ng-container *ngTemplateOutlet="template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf="tt.virtualScroll">\n            <ng-template cdkVirtualFor let-serializedNode let-rowIndex="index" [cdkVirtualForOf]="tt.serializedValue" [cdkVirtualForTrackBy]="tt.rowTrackBy" [cdkVirtualForTemplateCacheSize]="0">\n                <ng-container *ngIf="serializedNode.visible">\n                    <ng-container *ngTemplateOutlet="template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf="tt.isEmpty()">\n            <ng-container *ngTemplateOutlet="tt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}"></ng-container>\n        </ng-container>\n    ',encapsulation:ViewEncapsulation.None}]}],TTBody.ctorParameters=(()=>[{type:TreeTable},{type:TreeTableService},{type:ChangeDetectorRef}]),TTBody.propDecorators={columns:[{type:Input,args:["pTreeTableBody"]}],template:[{type:Input,args:["pTreeTableBodyTemplate"]}],frozen:[{type:Input}]};class TTScrollableView{constructor(e,t,i){this.tt=e,this.el=t,this.zone=i}get scrollHeight(){return this._scrollHeight}set scrollHeight(e){this._scrollHeight=e,null!=e&&(e.includes("%")||e.includes("calc"))&&console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight="flex" instead.'),this.tt.virtualScroll&&this.virtualScrollBody&&this.virtualScrollBody.ngOnInit()}ngAfterViewInit(){if(this.frozen)this.scrollableAlignerViewChild&&this.scrollableAlignerViewChild.nativeElement&&(this.scrollableAlignerViewChild.nativeElement.style.height=DomHandler.calculateScrollbarHeight()+"px");else{(this.tt.frozenColumns||this.tt.frozenBodyTemplate)&&DomHandler.addClass(this.el.nativeElement,"p-treetable-unfrozen-view");let e=this.el.nativeElement.previousElementSibling;e&&(this.tt.virtualScroll?this.frozenSiblingBody=DomHandler.findSingle(e,".p-treetable-virtual-scrollable-body"):this.frozenSiblingBody=DomHandler.findSingle(e,".p-treetable-scrollable-body"));let t=DomHandler.calculateScrollbarWidth();this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight=t+"px",this.scrollFooterBoxViewChild&&this.scrollFooterBoxViewChild.nativeElement&&(this.scrollFooterBoxViewChild.nativeElement.style.paddingRight=t+"px")}this.bindEvents()}bindEvents(){this.zone.runOutsideAngular(()=>{this.scrollHeaderViewChild&&this.scrollHeaderViewChild.nativeElement&&(this.headerScrollListener=this.onHeaderScroll.bind(this),this.scrollHeaderBoxViewChild.nativeElement.addEventListener("scroll",this.headerScrollListener)),this.scrollFooterViewChild&&this.scrollFooterViewChild.nativeElement&&(this.footerScrollListener=this.onFooterScroll.bind(this),this.scrollFooterViewChild.nativeElement.addEventListener("scroll",this.footerScrollListener)),this.frozen||(this.bodyScrollListener=this.onBodyScroll.bind(this),this.tt.virtualScroll?this.virtualScrollBody.getElementRef().nativeElement.addEventListener("scroll",this.bodyScrollListener):this.scrollBodyViewChild.nativeElement.addEventListener("scroll",this.bodyScrollListener))})}unbindEvents(){this.scrollHeaderViewChild&&this.scrollHeaderViewChild.nativeElement&&this.scrollHeaderBoxViewChild.nativeElement.removeEventListener("scroll",this.headerScrollListener),this.scrollFooterViewChild&&this.scrollFooterViewChild.nativeElement&&this.scrollFooterViewChild.nativeElement.removeEventListener("scroll",this.footerScrollListener),this.scrollBodyViewChild&&this.scrollBodyViewChild.nativeElement&&this.scrollBodyViewChild.nativeElement.removeEventListener("scroll",this.bodyScrollListener),this.virtualScrollBody&&this.virtualScrollBody.getElementRef()&&this.virtualScrollBody.getElementRef().nativeElement.removeEventListener("scroll",this.bodyScrollListener)}onHeaderScroll(){const e=this.scrollHeaderViewChild.nativeElement.scrollLeft;this.scrollBodyViewChild.nativeElement.scrollLeft=e,this.scrollFooterViewChild&&this.scrollFooterViewChild.nativeElement&&(this.scrollFooterViewChild.nativeElement.scrollLeft=e),this.preventBodyScrollPropagation=!0}onFooterScroll(){const e=this.scrollFooterViewChild.nativeElement.scrollLeft;this.scrollBodyViewChild.nativeElement.scrollLeft=e,this.scrollHeaderViewChild&&this.scrollHeaderViewChild.nativeElement&&(this.scrollHeaderViewChild.nativeElement.scrollLeft=e),this.preventBodyScrollPropagation=!0}onBodyScroll(e){this.preventBodyScrollPropagation?this.preventBodyScrollPropagation=!1:(this.scrollHeaderViewChild&&this.scrollHeaderViewChild.nativeElement&&(this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft=-1*e.target.scrollLeft+"px"),this.scrollFooterViewChild&&this.scrollFooterViewChild.nativeElement&&(this.scrollFooterBoxViewChild.nativeElement.style.marginLeft=-1*e.target.scrollLeft+"px"),this.frozenSiblingBody&&(this.frozenSiblingBody.scrollTop=e.target.scrollTop))}scrollToVirtualIndex(e){this.virtualScrollBody&&this.virtualScrollBody.scrollToIndex(e)}scrollTo(e){this.virtualScrollBody?this.virtualScrollBody.scrollTo(e):this.scrollBodyViewChild.nativeElement.scrollTo?this.scrollBodyViewChild.nativeElement.scrollTo(e):(this.scrollBodyViewChild.nativeElement.scrollLeft=e.left,this.scrollBodyViewChild.nativeElement.scrollTop=e.top)}ngOnDestroy(){this.unbindEvents(),this.frozenSiblingBody=null}}TTScrollableView.decorators=[{type:Component,args:[{selector:"[ttScrollableView]",template:'\n        <div #scrollHeader class="p-treetable-scrollable-header">\n            <div #scrollHeaderBox class="p-treetable-scrollable-header-box">\n                <table class="p-treetable-scrollable-header-table" [ngClass]="tt.tableStyleClass" [ngStyle]="tt.tableStyle">\n                    <ng-container *ngTemplateOutlet="frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <thead class="p-treetable-thead">\n                        <ng-container *ngTemplateOutlet="frozen ? tt.frozenHeaderTemplate||tt.headerTemplate : tt.headerTemplate; context {$implicit: columns}"></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n        <ng-container *ngIf="!tt.virtualScroll; else virtualScrollTemplate">\n            <div #scrollBody class="p-treetable-scrollable-body" [ngStyle]="{\'max-height\': tt.scrollHeight !== \'flex\' ? scrollHeight : undefined, \'overflow-y\': !frozen && tt.scrollHeight ? \'scroll\' : undefined}">\n                <table #scrollTable [class]="tt.tableStyleClass" [ngStyle]="tt.tableStyle">\n                    <ng-container *ngTemplateOutlet="frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <tbody class="p-treetable-tbody" [pTreeTableBody]="columns" [pTreeTableBodyTemplate]="frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate" [frozen]="frozen"></tbody>\n                </table>\n                <div #scrollableAligner style="background-color:transparent" *ngIf="frozen"></div>\n            </div>\n        </ng-container>\n        <ng-template #virtualScrollTemplate>\n            <cdk-virtual-scroll-viewport [itemSize]="tt.virtualRowHeight" [style.height]="tt.scrollHeight !== \'flex\' ? scrollHeight : undefined"\n                    [minBufferPx]="tt.minBufferPx" [maxBufferPx]="tt.maxBufferPx" class="p-treetable-virtual-scrollable-body">\n                <table #scrollTable [class]="tt.tableStyleClass" [ngStyle]="tt.tableStyle">\n                    <ng-container *ngTemplateOutlet="frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <tbody class="p-treetable-tbody" [pTreeTableBody]="columns" [pTreeTableBodyTemplate]="frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate" [frozen]="frozen"></tbody>\n                </table>\n                <div #scrollableAligner style="background-color:transparent" *ngIf="frozen"></div>\n            </cdk-virtual-scroll-viewport>\n        </ng-template>\n        <div #scrollFooter *ngIf="tt.footerTemplate" class="p-treetable-scrollable-footer">\n            <div #scrollFooterBox class="p-treetable-scrollable-footer-box">\n                <table class="p-treetable-scrollable-footer-table" [ngClass]="tt.tableStyleClass" [ngStyle]="tt.tableStyle">\n                    <ng-container *ngTemplateOutlet="frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}"></ng-container>\n                    <tfoot class="p-treetable-tfoot">\n                        <ng-container *ngTemplateOutlet="frozen ? tt.frozenFooterTemplate||tt.footerTemplate : tt.footerTemplate; context {$implicit: columns}"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    ',encapsulation:ViewEncapsulation.None}]}],TTScrollableView.ctorParameters=(()=>[{type:TreeTable},{type:ElementRef},{type:NgZone}]),TTScrollableView.propDecorators={columns:[{type:Input,args:["ttScrollableView"]}],frozen:[{type:Input}],scrollHeaderViewChild:[{type:ViewChild,args:["scrollHeader"]}],scrollHeaderBoxViewChild:[{type:ViewChild,args:["scrollHeaderBox"]}],scrollBodyViewChild:[{type:ViewChild,args:["scrollBody"]}],scrollTableViewChild:[{type:ViewChild,args:["scrollTable"]}],scrollLoadingTableViewChild:[{type:ViewChild,args:["loadingTable"]}],scrollFooterViewChild:[{type:ViewChild,args:["scrollFooter"]}],scrollFooterBoxViewChild:[{type:ViewChild,args:["scrollFooterBox"]}],scrollableAlignerViewChild:[{type:ViewChild,args:["scrollableAligner"]}],virtualScrollBody:[{type:ViewChild,args:[CdkVirtualScrollViewport]}],scrollHeight:[{type:Input}]};class TTSortableColumn{constructor(e){this.tt=e,this.isEnabled()&&(this.subscription=this.tt.tableService.sortSource$.subscribe(e=>{this.updateSortState()}))}ngOnInit(){this.isEnabled()&&this.updateSortState()}updateSortState(){this.sorted=this.tt.isSorted(this.field)}onClick(e){this.isEnabled()&&(this.updateSortState(),this.tt.sort({originalEvent:e,field:this.field}),DomHandler.clearSelection())}onEnterKey(e){this.onClick(e)}isEnabled(){return!0!==this.ttSortableColumnDisabled}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}TTSortableColumn.decorators=[{type:Directive,args:[{selector:"[ttSortableColumn]",host:{"[class.p-sortable-column]":"isEnabled()","[class.p-highlight]":"sorted","[attr.tabindex]":'isEnabled() ? "0" : null',"[attr.role]":'"columnheader"'}}]}],TTSortableColumn.ctorParameters=(()=>[{type:TreeTable}]),TTSortableColumn.propDecorators={field:[{type:Input,args:["ttSortableColumn"]}],ttSortableColumnDisabled:[{type:Input}],onClick:[{type:HostListener,args:["click",["$event"]]}],onEnterKey:[{type:HostListener,args:["keydown.enter",["$event"]]}]};class TTSortIcon{constructor(e,t){this.tt=e,this.cd=t,this.subscription=this.tt.tableService.sortSource$.subscribe(e=>{this.updateSortState(),this.cd.markForCheck()})}ngOnInit(){this.updateSortState()}onClick(e){e.preventDefault()}updateSortState(){if("single"===this.tt.sortMode)this.sortOrder=this.tt.isSorted(this.field)?this.tt.sortOrder:0;else if("multiple"===this.tt.sortMode){let e=this.tt.getSortMeta(this.field);this.sortOrder=e?e.order:0}}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}TTSortIcon.decorators=[{type:Component,args:[{selector:"p-treeTableSortIcon",template:"\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n    ",encapsulation:ViewEncapsulation.None,changeDetection:ChangeDetectionStrategy.OnPush}]}],TTSortIcon.ctorParameters=(()=>[{type:TreeTable},{type:ChangeDetectorRef}]),TTSortIcon.propDecorators={field:[{type:Input}],ariaLabelDesc:[{type:Input}],ariaLabelAsc:[{type:Input}]};class TTResizableColumn{constructor(e,t,i){this.tt=e,this.el=t,this.zone=i}ngAfterViewInit(){this.isEnabled()&&(DomHandler.addClass(this.el.nativeElement,"p-resizable-column"),this.resizer=document.createElement("span"),this.resizer.className="p-column-resizer",this.el.nativeElement.appendChild(this.resizer),this.zone.runOutsideAngular(()=>{this.resizerMouseDownListener=this.onMouseDown.bind(this),this.resizer.addEventListener("mousedown",this.resizerMouseDownListener)}))}bindDocumentEvents(){this.zone.runOutsideAngular(()=>{this.documentMouseMoveListener=this.onDocumentMouseMove.bind(this),document.addEventListener("mousemove",this.documentMouseMoveListener),this.documentMouseUpListener=this.onDocumentMouseUp.bind(this),document.addEventListener("mouseup",this.documentMouseUpListener)})}unbindDocumentEvents(){this.documentMouseMoveListener&&(document.removeEventListener("mousemove",this.documentMouseMoveListener),this.documentMouseMoveListener=null),this.documentMouseUpListener&&(document.removeEventListener("mouseup",this.documentMouseUpListener),this.documentMouseUpListener=null)}onMouseDown(e){this.tt.onColumnResizeBegin(e),this.bindDocumentEvents()}onDocumentMouseMove(e){this.tt.onColumnResize(e)}onDocumentMouseUp(e){this.tt.onColumnResizeEnd(e,this.el.nativeElement),this.unbindDocumentEvents()}isEnabled(){return!0!==this.ttResizableColumnDisabled}ngOnDestroy(){this.resizerMouseDownListener&&this.resizer.removeEventListener("mousedown",this.resizerMouseDownListener),this.unbindDocumentEvents()}}TTResizableColumn.decorators=[{type:Directive,args:[{selector:"[ttResizableColumn]"}]}],TTResizableColumn.ctorParameters=(()=>[{type:TreeTable},{type:ElementRef},{type:NgZone}]),TTResizableColumn.propDecorators={ttResizableColumnDisabled:[{type:Input}]};class TTReorderableColumn{constructor(e,t,i){this.tt=e,this.el=t,this.zone=i}ngAfterViewInit(){this.isEnabled()&&this.bindEvents()}bindEvents(){this.zone.runOutsideAngular(()=>{this.mouseDownListener=this.onMouseDown.bind(this),this.el.nativeElement.addEventListener("mousedown",this.mouseDownListener),this.dragStartListener=this.onDragStart.bind(this),this.el.nativeElement.addEventListener("dragstart",this.dragStartListener),this.dragOverListener=this.onDragEnter.bind(this),this.el.nativeElement.addEventListener("dragover",this.dragOverListener),this.dragEnterListener=this.onDragEnter.bind(this),this.el.nativeElement.addEventListener("dragenter",this.dragEnterListener),this.dragLeaveListener=this.onDragLeave.bind(this),this.el.nativeElement.addEventListener("dragleave",this.dragLeaveListener)})}unbindEvents(){this.mouseDownListener&&(document.removeEventListener("mousedown",this.mouseDownListener),this.mouseDownListener=null),this.dragOverListener&&(document.removeEventListener("dragover",this.dragOverListener),this.dragOverListener=null),this.dragEnterListener&&(document.removeEventListener("dragenter",this.dragEnterListener),this.dragEnterListener=null),this.dragEnterListener&&(document.removeEventListener("dragenter",this.dragEnterListener),this.dragEnterListener=null),this.dragLeaveListener&&(document.removeEventListener("dragleave",this.dragLeaveListener),this.dragLeaveListener=null)}onMouseDown(e){"INPUT"===e.target.nodeName||"TEXTAREA"===e.target.nodeName||DomHandler.hasClass(e.target,"p-column-resizer")?this.el.nativeElement.draggable=!1:this.el.nativeElement.draggable=!0}onDragStart(e){this.tt.onColumnDragStart(e,this.el.nativeElement)}onDragOver(e){e.preventDefault()}onDragEnter(e){this.tt.onColumnDragEnter(e,this.el.nativeElement)}onDragLeave(e){this.tt.onColumnDragLeave(e)}onDrop(e){this.isEnabled()&&this.tt.onColumnDrop(e,this.el.nativeElement)}isEnabled(){return!0!==this.ttReorderableColumnDisabled}ngOnDestroy(){this.unbindEvents()}}TTReorderableColumn.decorators=[{type:Directive,args:[{selector:"[ttReorderableColumn]"}]}],TTReorderableColumn.ctorParameters=(()=>[{type:TreeTable},{type:ElementRef},{type:NgZone}]),TTReorderableColumn.propDecorators={ttReorderableColumnDisabled:[{type:Input}],onDrop:[{type:HostListener,args:["drop",["$event"]]}]};class TTSelectableRow{constructor(e,t){this.tt=e,this.tableService=t,this.isEnabled()&&(this.subscription=this.tt.tableService.selectionSource$.subscribe(()=>{this.selected=this.tt.isSelected(this.rowNode.node)}))}ngOnInit(){this.isEnabled()&&(this.selected=this.tt.isSelected(this.rowNode.node))}onClick(e){this.isEnabled()&&this.tt.handleRowClick({originalEvent:e,rowNode:this.rowNode})}onEnterKey(e){13===e.which&&this.onClick(e)}onTouchEnd(e){this.isEnabled()&&this.tt.handleRowTouchEnd(e)}isEnabled(){return!0!==this.ttSelectableRowDisabled}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}TTSelectableRow.decorators=[{type:Directive,args:[{selector:"[ttSelectableRow]",host:{"[class.p-highlight]":"selected"}}]}],TTSelectableRow.ctorParameters=(()=>[{type:TreeTable},{type:TreeTableService}]),TTSelectableRow.propDecorators={rowNode:[{type:Input,args:["ttSelectableRow"]}],ttSelectableRowDisabled:[{type:Input}],onClick:[{type:HostListener,args:["click",["$event"]]}],onEnterKey:[{type:HostListener,args:["keydown",["$event"]]}],onTouchEnd:[{type:HostListener,args:["touchend",["$event"]]}]};class TTSelectableRowDblClick{constructor(e,t){this.tt=e,this.tableService=t,this.isEnabled()&&(this.subscription=this.tt.tableService.selectionSource$.subscribe(()=>{this.selected=this.tt.isSelected(this.rowNode.node)}))}ngOnInit(){this.isEnabled()&&(this.selected=this.tt.isSelected(this.rowNode.node))}onClick(e){this.isEnabled()&&this.tt.handleRowClick({originalEvent:e,rowNode:this.rowNode})}isEnabled(){return!0!==this.ttSelectableRowDisabled}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}TTSelectableRowDblClick.decorators=[{type:Directive,args:[{selector:"[ttSelectableRowDblClick]",host:{"[class.p-highlight]":"selected"}}]}],TTSelectableRowDblClick.ctorParameters=(()=>[{type:TreeTable},{type:TreeTableService}]),TTSelectableRowDblClick.propDecorators={rowNode:[{type:Input,args:["ttSelectableRowDblClick"]}],ttSelectableRowDisabled:[{type:Input}],onClick:[{type:HostListener,args:["dblclick",["$event"]]}]};class TTContextMenuRow{constructor(e,t,i){this.tt=e,this.tableService=t,this.el=i,this.isEnabled()&&(this.subscription=this.tt.tableService.contextMenuSource$.subscribe(e=>{this.selected=this.tt.equals(this.rowNode.node,e)}))}onContextMenu(e){this.isEnabled()&&(this.tt.handleRowRightClick({originalEvent:e,rowNode:this.rowNode}),this.el.nativeElement.focus(),e.preventDefault())}isEnabled(){return!0!==this.ttContextMenuRowDisabled}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}TTContextMenuRow.decorators=[{type:Directive,args:[{selector:"[ttContextMenuRow]",host:{"[class.p-highlight-contextmenu]":"selected","[attr.tabindex]":"isEnabled() ? 0 : undefined"}}]}],TTContextMenuRow.ctorParameters=(()=>[{type:TreeTable},{type:TreeTableService},{type:ElementRef}]),TTContextMenuRow.propDecorators={rowNode:[{type:Input,args:["ttContextMenuRow"]}],ttContextMenuRowDisabled:[{type:Input}],onContextMenu:[{type:HostListener,args:["contextmenu",["$event"]]}]};class TTCheckbox{constructor(e,t,i){this.tt=e,this.tableService=t,this.cd=i,this.subscription=this.tt.tableService.selectionSource$.subscribe(()=>{this.checked=this.tt.isSelected(this.rowNode.node),this.cd.markForCheck()})}ngOnInit(){this.checked=this.tt.isSelected(this.rowNode.node)}onClick(e){this.disabled||this.tt.toggleNodeWithCheckbox({originalEvent:e,rowNode:this.rowNode}),DomHandler.clearSelection()}onFocus(){DomHandler.addClass(this.boxViewChild.nativeElement,"p-focus")}onBlur(){DomHandler.removeClass(this.boxViewChild.nativeElement,"p-focus")}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}}TTCheckbox.decorators=[{type:Component,args:[{selector:"p-treeTableCheckbox",template:'\n        <div class="p-checkbox p-component" (click)="onClick($event)">\n            <div class="p-hidden-accessible">\n                <input type="checkbox" [checked]="checked" (focus)="onFocus()" (blur)="onBlur()">\n            </div>\n            <div #box [ngClass]="{\'p-checkbox-box\':true,\n                \'p-highlight\':checked, \'p-disabled\':disabled}"  role="checkbox" [attr.aria-checked]="checked">\n                <span class="p-checkbox-icon pi" [ngClass]="{\'pi-check\':checked, \'pi-minus\': rowNode.node.partialSelected}"></span>\n            </div>\n        </div>\n    ',encapsulation:ViewEncapsulation.None,changeDetection:ChangeDetectionStrategy.OnPush}]}],TTCheckbox.ctorParameters=(()=>[{type:TreeTable},{type:TreeTableService},{type:ChangeDetectorRef}]),TTCheckbox.propDecorators={disabled:[{type:Input}],rowNode:[{type:Input,args:["value"]}],boxViewChild:[{type:ViewChild,args:["box"]}]};class TTHeaderCheckbox{constructor(e,t,i){this.tt=e,this.tableService=t,this.cd=i,this.valueChangeSubscription=this.tt.tableService.uiUpdateSource$.subscribe(()=>{this.checked=this.updateCheckedState()}),this.selectionChangeSubscription=this.tt.tableService.selectionSource$.subscribe(()=>{this.checked=this.updateCheckedState()})}ngOnInit(){this.checked=this.updateCheckedState()}onClick(e,t){this.tt.value&&this.tt.value.length>0&&this.tt.toggleNodesWithCheckbox(e,!t),DomHandler.clearSelection()}onFocus(){DomHandler.addClass(this.boxViewChild.nativeElement,"p-focus")}onBlur(){DomHandler.removeClass(this.boxViewChild.nativeElement,"p-focus")}ngOnDestroy(){this.selectionChangeSubscription&&this.selectionChangeSubscription.unsubscribe(),this.valueChangeSubscription&&this.valueChangeSubscription.unsubscribe()}updateCheckedState(){let e;this.cd.markForCheck();const t=this.tt.filteredNodes||this.tt.value;if(t)for(let i of t){if(!this.tt.isSelected(i)){e=!1;break}e=!0}else e=!1;return e}}TTHeaderCheckbox.decorators=[{type:Component,args:[{selector:"p-treeTableHeaderCheckbox",template:'\n        <div class="p-checkbox p-component" (click)="onClick($event, cb.checked)">\n            <div class="p-hidden-accessible">\n                <input #cb type="checkbox" [checked]="checked" (focus)="onFocus()" (blur)="onBlur()" [disabled]="!tt.value||tt.value.length === 0">\n            </div>\n            <div #box [ngClass]="{\'p-checkbox-box\':true,\n                \'p-highlight\':checked, \'p-disabled\': (!tt.value || tt.value.length === 0)}"  role="checkbox" [attr.aria-checked]="checked">\n                <span class="p-checkbox-icon" [ngClass]="{\'pi pi-check\':checked}"></span>\n            </div>\n        </div>\n    ',encapsulation:ViewEncapsulation.None,changeDetection:ChangeDetectionStrategy.OnPush}]}],TTHeaderCheckbox.ctorParameters=(()=>[{type:TreeTable},{type:TreeTableService},{type:ChangeDetectorRef}]),TTHeaderCheckbox.propDecorators={boxViewChild:[{type:ViewChild,args:["box"]}]};class TTEditableColumn{constructor(e,t,i){this.tt=e,this.el=t,this.zone=i}ngAfterViewInit(){this.isEnabled()&&DomHandler.addClass(this.el.nativeElement,"p-editable-column")}onClick(e){if(this.isEnabled())if(this.tt.editingCellClick=!0,this.tt.editingCell){if(this.tt.editingCell!==this.el.nativeElement){if(!this.tt.isEditingCellValid())return;DomHandler.removeClass(this.tt.editingCell,"p-cell-editing"),this.openCell()}}else this.openCell()}openCell(){this.tt.updateEditingCell(this.el.nativeElement),DomHandler.addClass(this.el.nativeElement,"p-cell-editing"),this.tt.onEditInit.emit({field:this.field,data:this.data}),this.tt.editingCellClick=!0,this.zone.runOutsideAngular(()=>{setTimeout(()=>{let e=DomHandler.findSingle(this.el.nativeElement,"input, textarea");e&&e.focus()},50)})}closeEditingCell(){DomHandler.removeClass(this.tt.editingCell,"p-checkbox-icon"),this.tt.editingCell=null,this.tt.unbindDocumentEditListener()}onKeyDown(e){this.isEnabled()&&(13==e.keyCode?(this.tt.isEditingCellValid()&&(DomHandler.removeClass(this.tt.editingCell,"p-cell-editing"),this.closeEditingCell(),this.tt.onEditComplete.emit({field:this.field,data:this.data})),e.preventDefault()):27==e.keyCode?(this.tt.isEditingCellValid()&&(DomHandler.removeClass(this.tt.editingCell,"p-cell-editing"),this.closeEditingCell(),this.tt.onEditCancel.emit({field:this.field,data:this.data})),e.preventDefault()):9==e.keyCode&&(this.tt.onEditComplete.emit({field:this.field,data:this.data}),e.shiftKey?this.moveToPreviousCell(e):this.moveToNextCell(e)))}findCell(e){if(e){let t=e;for(;t&&!DomHandler.hasClass(t,"p-cell-editing");)t=t.parentElement;return t}return null}moveToPreviousCell(e){let t=this.findCell(e.target),i=(t.parentElement,this.findPreviousEditableColumn(t));i&&(DomHandler.invokeElementMethod(i,"click"),e.preventDefault())}moveToNextCell(e){let t=this.findCell(e.target),i=(t.parentElement,this.findNextEditableColumn(t));i&&(DomHandler.invokeElementMethod(i,"click"),e.preventDefault())}findPreviousEditableColumn(e){let t=e.previousElementSibling;if(!t){let i=e.parentElement?e.parentElement.previousElementSibling:null;i&&(t=i.lastElementChild)}return t?DomHandler.hasClass(t,"p-editable-column")?t:this.findPreviousEditableColumn(t):null}findNextEditableColumn(e){let t=e.nextElementSibling;if(!t){let i=e.parentElement?e.parentElement.nextElementSibling:null;i&&(t=i.firstElementChild)}return t?DomHandler.hasClass(t,"p-editable-column")?t:this.findNextEditableColumn(t):null}isEnabled(){return!0!==this.ttEditableColumnDisabled}}TTEditableColumn.decorators=[{type:Directive,args:[{selector:"[ttEditableColumn]"}]}],TTEditableColumn.ctorParameters=(()=>[{type:TreeTable},{type:ElementRef},{type:NgZone}]),TTEditableColumn.propDecorators={data:[{type:Input,args:["ttEditableColumn"]}],field:[{type:Input,args:["ttEditableColumnField"]}],ttEditableColumnDisabled:[{type:Input}],onClick:[{type:HostListener,args:["click",["$event"]]}],onKeyDown:[{type:HostListener,args:["keydown",["$event"]]}]};class TreeTableCellEditor{constructor(e,t){this.tt=e,this.editableColumn=t}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"input":this.inputTemplate=e.template;break;case"output":this.outputTemplate=e.template}})}}TreeTableCellEditor.decorators=[{type:Component,args:[{selector:"p-treeTableCellEditor",template:'\n        <ng-container *ngIf="tt.editingCell === editableColumn.el.nativeElement">\n            <ng-container *ngTemplateOutlet="inputTemplate"></ng-container>\n        </ng-container>\n        <ng-container *ngIf="!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement">\n            <ng-container *ngTemplateOutlet="outputTemplate"></ng-container>\n        </ng-container>\n    ',encapsulation:ViewEncapsulation.None}]}],TreeTableCellEditor.ctorParameters=(()=>[{type:TreeTable},{type:TTEditableColumn}]),TreeTableCellEditor.propDecorators={templates:[{type:ContentChildren,args:[PrimeTemplate]}]};class TTRow{constructor(e,t,i){this.tt=e,this.el=t,this.zone=i}onKeyDown(e){switch(e.which){case 40:let t=this.el.nativeElement.nextElementSibling;t&&t.focus(),e.preventDefault();break;case 38:let i=this.el.nativeElement.previousElementSibling;i&&i.focus(),e.preventDefault();break;case 37:this.rowNode.node.expanded&&(this.tt.toggleRowIndex=DomHandler.index(this.el.nativeElement),this.rowNode.node.expanded=!1,this.tt.onNodeCollapse.emit({originalEvent:e,node:this.rowNode.node}),this.tt.updateSerializedValue(),this.tt.tableService.onUIUpdate(this.tt.value),this.restoreFocus());break;case 39:this.rowNode.node.expanded||(this.tt.toggleRowIndex=DomHandler.index(this.el.nativeElement),this.rowNode.node.expanded=!0,this.tt.onNodeExpand.emit({originalEvent:e,node:this.rowNode.node}),this.tt.updateSerializedValue(),this.tt.tableService.onUIUpdate(this.tt.value),this.restoreFocus())}}restoreFocus(){this.zone.runOutsideAngular(()=>{setTimeout(()=>{let e=DomHandler.findSingle(this.tt.containerViewChild.nativeElement,".p-treetable-tbody").children[this.tt.toggleRowIndex];e&&e.focus()},25)})}}TTRow.decorators=[{type:Directive,args:[{selector:"[ttRow]",host:{"[attr.tabindex]":'"0"'}}]}],TTRow.ctorParameters=(()=>[{type:TreeTable},{type:ElementRef},{type:NgZone}]),TTRow.propDecorators={rowNode:[{type:Input,args:["ttRow"]}],onKeyDown:[{type:HostListener,args:["keydown",["$event"]]}]};class TreeTableToggler{constructor(e){this.tt=e}onClick(e){this.rowNode.node.expanded=!this.rowNode.node.expanded,this.rowNode.node.expanded?this.tt.onNodeExpand.emit({originalEvent:e,node:this.rowNode.node}):this.tt.onNodeCollapse.emit({originalEvent:e,node:this.rowNode.node}),this.tt.updateSerializedValue(),this.tt.tableService.onUIUpdate(this.tt.value),e.preventDefault()}}TreeTableToggler.decorators=[{type:Component,args:[{selector:"p-treeTableToggler",template:'\n        <button type="button" class="p-treetable-toggler p-link" (click)="onClick($event)" tabindex="-1" pRipple\n            [style.visibility]="rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? \'visible\' : \'hidden\'" [style.marginLeft]="rowNode.level * 16 + \'px\'">\n            <i [ngClass]="rowNode.node.expanded ? \'pi pi-fw pi-chevron-down\' : \'pi pi-fw pi-chevron-right\'"></i>\n        </button>\n    ',encapsulation:ViewEncapsulation.None}]}],TreeTableToggler.ctorParameters=(()=>[{type:TreeTable}]),TreeTableToggler.propDecorators={rowNode:[{type:Input}]};class TreeTableModule{}TreeTableModule.decorators=[{type:NgModule,args:[{imports:[CommonModule,PaginatorModule,ScrollingModule,RippleModule],exports:[TreeTable,SharedModule,TreeTableToggler,TTSortableColumn,TTSortIcon,TTResizableColumn,TTRow,TTReorderableColumn,TTSelectableRow,TTSelectableRowDblClick,TTContextMenuRow,TTCheckbox,TTHeaderCheckbox,TTEditableColumn,TreeTableCellEditor,ScrollingModule],declarations:[TreeTable,TreeTableToggler,TTScrollableView,TTBody,TTSortableColumn,TTSortIcon,TTResizableColumn,TTRow,TTReorderableColumn,TTSelectableRow,TTSelectableRowDblClick,TTContextMenuRow,TTCheckbox,TTHeaderCheckbox,TTEditableColumn,TreeTableCellEditor]}]}];export{TTBody,TTCheckbox,TTContextMenuRow,TTEditableColumn,TTHeaderCheckbox,TTReorderableColumn,TTResizableColumn,TTRow,TTScrollableView,TTSelectableRow,TTSelectableRowDblClick,TTSortIcon,TTSortableColumn,TreeTable,TreeTableCellEditor,TreeTableModule,TreeTableService,TreeTableToggler};