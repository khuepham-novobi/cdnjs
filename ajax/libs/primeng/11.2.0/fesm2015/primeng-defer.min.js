import{EventEmitter,Directive,ElementRef,Renderer2,ViewContainerRef,Output,ContentChild,TemplateRef,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";class DeferredLoader{constructor(e,t,r){this.el=e,this.renderer=t,this.viewContainer=r,this.onLoad=new EventEmitter}ngAfterViewInit(){this.shouldLoad()&&this.load(),this.isLoaded()||(this.documentScrollListener=this.renderer.listen("window","scroll",()=>{this.shouldLoad()&&(this.load(),this.documentScrollListener(),this.documentScrollListener=null)}))}shouldLoad(){if(this.isLoaded())return!1;{let e=this.el.nativeElement.getBoundingClientRect();return document.documentElement.clientHeight>=e.top}}load(){this.view=this.viewContainer.createEmbeddedView(this.template),this.onLoad.emit()}isLoaded(){return null!=this.view}ngOnDestroy(){this.view=null,this.documentScrollListener&&this.documentScrollListener()}}DeferredLoader.decorators=[{type:Directive,args:[{selector:"[pDefer]"}]}],DeferredLoader.ctorParameters=(()=>[{type:ElementRef},{type:Renderer2},{type:ViewContainerRef}]),DeferredLoader.propDecorators={onLoad:[{type:Output}],template:[{type:ContentChild,args:[TemplateRef]}]};class DeferModule{}DeferModule.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[DeferredLoader],declarations:[DeferredLoader]}]}];export{DeferModule,DeferredLoader};