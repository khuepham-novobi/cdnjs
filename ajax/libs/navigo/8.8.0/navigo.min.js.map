{"version":3,"sources":["webpack://Navigo/webpack/universalModuleDefinition","webpack://Navigo/./src/constants.ts","webpack://Navigo/./src/utils.ts","webpack://Navigo/./src/Q.ts","webpack://Navigo/./src/middlewares/setLocationPath.ts","webpack://Navigo/./src/middlewares/matchPathToRegisteredRoutes.ts","webpack://Navigo/./src/middlewares/checkForDeprecationMethods.ts","webpack://Navigo/./src/middlewares/checkForForceOp.ts","webpack://Navigo/./src/middlewares/updateBrowserURL.ts","webpack://Navigo/./src/middlewares/checkForLeaveHook.ts","webpack://Navigo/./src/lifecycles.ts","webpack://Navigo/./src/middlewares/checkForAlreadyHook.ts","webpack://Navigo/./src/middlewares/checkForBeforeHook.ts","webpack://Navigo/./src/middlewares/callHandler.ts","webpack://Navigo/./src/middlewares/checkForAfterHook.ts","webpack://Navigo/./src/middlewares/checkForNotFoundHandler.ts","webpack://Navigo/./src/middlewares/errorOut.ts","webpack://Navigo/./src/middlewares/flushCurrent.ts","webpack://Navigo/./src/middlewares/processMatches.ts","webpack://Navigo/./src/middlewares/updateState.ts","webpack://Navigo/./src/index.ts","webpack://Navigo/webpack/bootstrap","webpack://Navigo/webpack/startup","webpack://Navigo/webpack/runtime/define property getters","webpack://Navigo/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","self","this","PARAMETER_REGEXP","WILDCARD_REGEXP","NOT_SURE_REGEXP","getCurrentEnvURL","fallback","windowAvailable","location","pathname","search","hash","clean","s","replace","isString","extractHashFromURL","url","indexOf","split","pop","extractGETParameters","tmp","slice","join","parseQuery","queryString","query","pairs","i","length","pair","key","decodeURIComponent","Array","isArray","push","matchRoute","context","route","pattern","currentLocationPath","current","GETParams","params","paramNames","path","full","dots","name","hashString","to","data","regexp","RegExp","match","names","reduce","value","index","regExpResultToParams","pushStateAvailable","window","history","pushState","undefinedOrTrue","obj","accumulateHooks","hooks","result","filter","h","forEach","type","Q","funcs","c","done","idx","next","splice","moveForward","setLocationPath","instance","_checkForAHash","matchPathToRegisteredRoutes","routes","matches","resolveOptions","strategy","checkForDeprecationMethods","navigateOptions","console","warn","checkForForceOp","force","_setCurrent","_pathToMatchObject","if","condition","one","two","isWindowAvailable","isPushStateAvailable","updateBrowserURL","isItUsingHash","historyAPIMethod","stateObj","title","__freezeListening","setTimeout","href","checkForLeaveHook","lastResolved","map","oldMatch","_","leaveLoopDone","leave","runHook","newLocationVSOldMatch","matchLocation","find","f","d","undefined","concat","foundLifecycle","already","before","handler","updatePageLinks","after","notFoundLifeCycle","notFoundRoute","_notFoundRoute","notFoundHandled","notFoundMatch","noMatchWarning","processMatches","nextMatch","updateState","Navigo","appRoute","genericHooks","DEFAULT_RESOLVE_OPTIONS","destroyed","composePathWithRoot","createRoute","String","resolve","options","navigate","call","document","querySelectorAll","link","getAttribute","hasListenerAttached","navigoHandler","e","ctrlKey","metaKey","target","tagName","toLowerCase","URL","u","err","source","str","temp","v","parseNavigateOptions","preventDefault","stopPropagation","addEventListener","removeEventListener","generate","r","pathToMatchObject","addHook","func","getRoute","nameOrHandler","on","Object","keys","p","uses","as","off","what","navigateByName","destroy","__popstateListener","notFound","getLinkPath","currentLocation","getCurrentLocation","addBeforeHook","bind","addAfterHook","addAlreadyHook","addLeaveHook","_clean","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty"],"mappings":"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","file":"navigo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_WILDCARD = \"?(?:.*)\";\nexport const NOT_SURE_REGEXP = /\\/\\?/g;\nexport const REPLACE_NOT_SURE = \"/?([^/]+|)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import {\n  RouteHooksStorage,\n  Match,\n  Route,\n  NavigateOptions,\n  ResolveOptions,\n  QContext,\n  ResolveStrategy,\n} from \"../index\";\n\nimport {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n  REPLACE_NOT_SURE,\n  NOT_SURE_REGEXP,\n} from \"./constants\";\n\nexport function getCurrentEnvURL(fallback = \"/\"): string {\n  if (windowAvailable()) {\n    return location.pathname + location.search + location.hash;\n  }\n  return fallback;\n}\nexport function clean(s: string) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function extractHashFromURL(url: string) {\n  if (url && url.indexOf(\"#\") >= 0) {\n    return url.split(\"#\").pop() || \"\";\n  }\n  return \"\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(context: QContext, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(\n    clean(context.currentLocationPath)\n  );\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD)\n        .replace(NOT_SURE_REGEXP, REPLACE_NOT_SURE) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          hashString: extractHashFromURL(context.to),\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n  // console.log(current, regexp);\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.slice(1);\n    return {\n      url: current,\n      queryString: GETParams,\n      hashString: extractHashFromURL(context.to),\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\nexport function undefinedOrTrue(obj, key: string): boolean {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateOptions(source?: string): NavigateOptions {\n  if (!source) return {};\n  const pairs = source.split(\",\");\n  const options: NavigateOptions = {};\n  let resolveOptions: ResolveOptions;\n\n  pairs.forEach((str) => {\n    const temp = str.split(\":\").map((v) => v.replace(/(^ +| +$)/g, \"\"));\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n      case \"resolveOptionsStrategy\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.strategy = temp[1] as ResolveStrategy;\n        break;\n      case \"resolveOptionsHash\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.hash = temp[1] === \"true\";\n        break;\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n  if (resolveOptions) {\n    options.resolveOptions = resolveOptions;\n  }\n  return options;\n}\nexport function windowAvailable() {\n  return typeof window !== \"undefined\";\n}\nexport function accumulateHooks(\n  hooks = [],\n  result: RouteHooksStorage = {}\n): RouteHooksStorage {\n  hooks\n    .filter((h) => h)\n    .forEach((h) => {\n      [\"before\", \"after\", \"already\", \"leave\"].forEach((type) => {\n        if (h[type]) {\n          if (!result[type]) result[type] = [];\n          result[type].push(h[type]);\n        }\n      });\n    });\n  return result as RouteHooksStorage;\n}\n","type QChild = {\n  type: \"child\";\n  funcs: Array<Function | Array<any> | QChild>;\n};\n\nexport default function Q(\n  funcs: Array<Function | Array<any> | QChild>,\n  c?: any,\n  done?: Function\n) {\n  const context = c || {};\n  let idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) {\n      if (done) {\n        done(context);\n      }\n      return;\n    }\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice(\n        idx,\n        1,\n        ...(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2])\n      );\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" / \" + JSON.stringify(context));\n      // console.log(funcs[idx].name);\n      (funcs[idx] as Function)(context, (moveForward) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        } else if (done) {\n          done(context);\n        }\n      });\n    }\n  })();\n}\n\nQ.if = function (condition: Function, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};\n","import { QContext } from \"../../index\";\nimport { getCurrentEnvURL } from \"../utils\";\n\nexport default function setLocationPath(context: QContext, done) {\n  if (typeof context.currentLocationPath === \"undefined\") {\n    context.currentLocationPath = context.to = getCurrentEnvURL(\n      context.instance.root\n    );\n  }\n  context.currentLocationPath = context.instance._checkForAHash(\n    context.currentLocationPath\n  );\n  done();\n}\n","import { matchRoute } from \"../utils\";\nimport { QContext, Match } from \"../../index\";\n\nexport default function matchPathToRegisteredRoutes(context: QContext, done) {\n  for (let i = 0; i < context.instance.routes.length; i++) {\n    const route = context.instance.routes[i];\n    const match: false | Match = matchRoute(context, route);\n    if (match) {\n      if (!context.matches) context.matches = [];\n      context.matches.push(match);\n      if (context.resolveOptions.strategy === \"ONE\") {\n        done();\n        return;\n      }\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForDeprecationMethods(context: QContext, done) {\n  if (context.navigateOptions) {\n    if (typeof context.navigateOptions[\"shouldResolve\"] !== \"undefined\") {\n      console.warn(\n        `\"shouldResolve\" is deprecated. Please check the documentation.`\n      );\n    }\n    if (typeof context.navigateOptions[\"silent\"] !== \"undefined\") {\n      console.warn(`\"silent\" is deprecated. Please check the documentation.`);\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForForceOp(context: QContext, done) {\n  if (context.navigateOptions.force === true) {\n    context.instance._setCurrent([\n      context.instance._pathToMatchObject(context.to),\n    ]);\n    done(false);\n  } else {\n    done();\n  }\n}\n","import { undefinedOrTrue, pushStateAvailable, windowAvailable } from \"../utils\";\nimport { QContext } from \"../../index\";\n\nconst isWindowAvailable = windowAvailable();\nconst isPushStateAvailable = pushStateAvailable();\n\nexport default function updateBrowserURL(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateBrowserURL\")) {\n    const value = `/${context.to}`.replace(/\\/\\//g, \"/\"); // making sure that we don't have two slashes\n    const isItUsingHash =\n      isWindowAvailable &&\n      context.resolveOptions &&\n      context.resolveOptions.hash === true;\n    if (isPushStateAvailable) {\n      history[context.navigateOptions.historyAPIMethod || \"pushState\"](\n        context.navigateOptions.stateObj || {},\n        context.navigateOptions.title || \"\",\n        isItUsingHash ? `#${value}` : value\n      );\n      // This is to solve a nasty bug where the page doesn't scroll to the anchor.\n      // We set a microtask to update the hash only.\n      if (location && location.hash) {\n        context.instance.__freezeListening = true;\n        setTimeout(() => {\n          let tmp = location.hash;\n          location.hash = \"\";\n          location.hash = tmp;\n          context.instance.__freezeListening = false;\n        }, 1);\n      }\n    } else if (isWindowAvailable) {\n      window.location.href = context.to;\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForLeaveHook(context: QContext, done) {\n  const instance = context.instance;\n  if (!instance.lastResolved()) {\n    done();\n    return;\n  }\n  Q(\n    instance.lastResolved().map((oldMatch) => {\n      return (_, leaveLoopDone) => {\n        // no leave hook\n        if (!oldMatch.route.hooks || !oldMatch.route.hooks.leave) {\n          leaveLoopDone();\n          return;\n        }\n        let runHook = false;\n        const newLocationVSOldMatch = context.instance.matchLocation(\n          oldMatch.route.path as string,\n          context.currentLocationPath\n        );\n        if (oldMatch.route.path !== \"*\") {\n          runHook = !newLocationVSOldMatch;\n        } else {\n          const someOfTheLastOnesMatch = context.matches\n            ? context.matches.find((match) => {\n                return oldMatch.route.path === match.route.path;\n              })\n            : false;\n          runHook = !someOfTheLastOnesMatch;\n        }\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\") && runHook) {\n          Q(\n            oldMatch.route.hooks.leave\n              .map((f) => {\n                // just so we match the Q interface\n                return (_, d) =>\n                  f(\n                    d,\n                    context.matches && context.matches.length > 0\n                      ? context.matches.length === 1\n                        ? context.matches[0]\n                        : context.matches\n                      : undefined\n                  );\n              })\n              .concat([() => leaveLoopDone()])\n          );\n          return;\n        } else {\n          leaveLoopDone();\n        }\n      };\n    }),\n    {},\n    () => done()\n  );\n}\n","import { QContext } from \"../index\";\nimport Q from \"./Q\";\nimport checkForLeaveHook from \"./middlewares/checkForLeaveHook\";\nimport checkForBeforeHook from \"./middlewares/checkForBeforeHook\";\nimport callHandler from \"./middlewares/callHandler\";\nimport checkForAfterHook from \"./middlewares/checkForAfterHook\";\nimport checkForAlreadyHook from \"./middlewares/checkForAlreadyHook\";\nimport checkForNotFoundHandler from \"./middlewares/checkForNotFoundHandler\";\nimport errorOut from \"./middlewares/errorOut\";\nimport flushCurrent from \"./middlewares/flushCurrent\";\n\nexport const foundLifecycle = [\n  checkForAlreadyHook,\n  checkForBeforeHook,\n  callHandler,\n  checkForAfterHook,\n];\n\nexport const notFoundLifeCycle = [\n  checkForLeaveHook,\n  checkForNotFoundHandler,\n  Q.if(({ notFoundHandled }: QContext) => notFoundHandled, foundLifecycle, [\n    errorOut,\n  ]),\n  flushCurrent,\n];\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAlreadyHook(context: QContext, done) {\n  const current = context.instance.lastResolved();\n  if (\n    current &&\n    current[0] &&\n    current[0].route === context.match.route &&\n    current[0].url === context.match.url &&\n    current[0].queryString === context.match.queryString\n  ) {\n    current.forEach((c) => {\n      if (c.route.hooks && c.route.hooks.already) {\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n          c.route.hooks.already.forEach((f) => f(context.match));\n        }\n      }\n    });\n    done(false);\n    return;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForBeforeHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.before &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    Q(\n      context.match.route.hooks.before\n        .map((f) => {\n          // just so we match the Q interface\n          return function beforeHookInternal(_, d) {\n            return f(d, context.match);\n          };\n        })\n        .concat([() => done()])\n    );\n  } else {\n    done();\n  }\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function callHandler(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"callHandler\")) {\n    context.match.route.handler(context.match);\n  }\n  context.instance.updatePageLinks();\n  done();\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAfterHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.after &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    context.match.route.hooks.after.forEach((f) => f(context.match));\n  }\n  done();\n}\n","import { QContext, Match } from \"../../index\";\nimport {\n  parseQuery,\n  extractGETParameters,\n  clean,\n  extractHashFromURL,\n} from \"../utils\";\n\nexport default function checkForNotFoundHandler(context: QContext, done) {\n  const notFoundRoute = context.instance._notFoundRoute;\n  if (notFoundRoute) {\n    context.notFoundHandled = true;\n    const [url, queryString] = extractGETParameters(\n      context.currentLocationPath\n    );\n    const hashString = extractHashFromURL(context.to);\n    notFoundRoute.path = clean(url);\n    const notFoundMatch: Match = {\n      url: notFoundRoute.path,\n      queryString,\n      hashString,\n      data: null,\n      route: notFoundRoute,\n      params: queryString !== \"\" ? parseQuery(queryString) : null,\n    };\n    context.matches = [notFoundMatch];\n    context.match = notFoundMatch;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function errorOut(context: QContext, done) {\n  if (\n    !context.resolveOptions ||\n    context.resolveOptions.noMatchWarning === false ||\n    typeof context.resolveOptions.noMatchWarning === \"undefined\"\n  )\n    console.warn(\n      `Navigo: \"${context.currentLocationPath}\" didn't match any of the registered routes.`\n    );\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function flushCurrent(context: QContext, done) {\n  context.instance._setCurrent(null);\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { foundLifecycle } from \"../lifecycles\";\nimport updateState from \"./updateState\";\nimport checkForLeaveHook from \"./checkForLeaveHook\";\n\nexport default function processMatches(context: QContext, done) {\n  let idx = 0;\n  function nextMatch() {\n    if (idx === context.matches.length) {\n      updateState(context, done);\n      return;\n    }\n    Q(\n      foundLifecycle,\n      { ...context, match: context.matches[idx] },\n      function end() {\n        idx += 1;\n        nextMatch();\n      }\n    );\n  }\n  checkForLeaveHook(context, nextMatch);\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function callHandler(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateState\")) {\n    context.instance._setCurrent(context.matches);\n  }\n  done();\n}\n","import {\n  Match,\n  Route,\n  RouteHooks,\n  QContext,\n  NavigateOptions,\n  ResolveOptions,\n} from \"../index\";\nimport NavigoRouter from \"../index\";\nimport {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n  parseNavigateOptions,\n  windowAvailable,\n  getCurrentEnvURL,\n  accumulateHooks,\n  extractHashFromURL,\n} from \"./utils\";\nimport Q from \"./Q\";\nimport setLocationPath from \"./middlewares/setLocationPath\";\nimport matchPathToRegisteredRoutes from \"./middlewares/matchPathToRegisteredRoutes\";\nimport checkForDeprecationMethods from \"./middlewares/checkForDeprecationMethods\";\nimport checkForForceOp from \"./middlewares/checkForForceOp\";\nimport updateBrowserURL from \"./middlewares/updateBrowserURL\";\nimport processMatches from \"./middlewares/processMatches\";\n\nimport { notFoundLifeCycle } from \"./lifecycles\";\n\nexport default function Navigo(\n  appRoute?: string,\n  resolveOptions?: ResolveOptions\n) {\n  let DEFAULT_RESOLVE_OPTIONS: ResolveOptions = resolveOptions || {\n    strategy: \"ONE\",\n    hash: false,\n    noMatchWarning: false,\n  };\n  let self: NavigoRouter = this;\n  let root = \"/\";\n  let current: Match[] = null;\n  let routes: Route[] = [];\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = windowAvailable();\n\n  if (!appRoute) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(appRoute);\n  }\n\n  function _checkForAHash(url: string): string {\n    if (url.indexOf(\"#\") >= 0) {\n      if (DEFAULT_RESOLVE_OPTIONS.hash === true) {\n        url = url.split(\"#\")[1] || \"/\";\n      } else {\n        url = url.split(\"#\")[0];\n      }\n    }\n    return url;\n  }\n  function composePathWithRoot(path: string) {\n    return clean(`${root}/${clean(path)}`);\n  }\n  function createRoute(\n    path: string | RegExp,\n    handler: Function,\n    hooks: RouteHooks[],\n    name?: string\n  ): Route {\n    path = isString(path) ? composePathWithRoot(path as string) : path;\n    return {\n      name: name || clean(String(path)),\n      path,\n      handler,\n      hooks: accumulateHooks(hooks),\n    };\n  }\n\n  // public APIs\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Function,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, [genericHooks, hooks], name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Function;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, [genericHooks, hooks])\n    );\n    return this;\n  }\n  function resolve(to?: string, options?: ResolveOptions): false | Match[] {\n    to = to ? `${clean(root)}/${clean(to)}` : undefined;\n    const context: QContext = {\n      instance: self,\n      to,\n      currentLocationPath: to,\n      navigateOptions: {},\n      resolveOptions: { ...DEFAULT_RESOLVE_OPTIONS, ...options },\n    };\n    Q(\n      [\n        setLocationPath,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n      ],\n      context\n    );\n\n    return context.matches ? context.matches : false;\n  }\n  function navigate(to: string, navigateOptions?: NavigateOptions): void {\n    to = `${clean(root)}/${clean(to)}`;\n    const context: QContext = {\n      instance: self,\n      to,\n      navigateOptions: navigateOptions || {},\n      resolveOptions:\n        navigateOptions && navigateOptions.resolveOptions\n          ? navigateOptions.resolveOptions\n          : DEFAULT_RESOLVE_OPTIONS,\n      currentLocationPath: _checkForAHash(to),\n    };\n    Q(\n      [\n        checkForDeprecationMethods,\n        checkForForceOp,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n        updateBrowserURL,\n      ],\n      context\n    );\n  }\n  function navigateByName(\n    name: string,\n    data?: Object,\n    options?: NavigateOptions\n  ): boolean {\n    const url = generate(name, data);\n    if (url !== null) {\n      navigate(url, options);\n      return true;\n    }\n    return false;\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        if (!self.__freezeListening) {\n          resolve();\n        }\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    self._notFoundRoute = createRoute(\n      \"*\",\n      handler,\n      [genericHooks, hooks],\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (\n        \"false\" === link.getAttribute(\"data-navigo\") ||\n        \"_blank\" === link.getAttribute(\"target\")\n      ) {\n        if (link.hasListenerAttached) {\n          link.removeEventListener(\"click\", link.navigoHandler);\n        }\n        return;\n      }\n      if (!link.hasListenerAttached) {\n        link.hasListenerAttached = true;\n        link.navigoHandler = function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          let location = link.getAttribute(\"href\");\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          }\n          // handling absolute paths\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              const u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n          const options = parseNavigateOptions(\n            link.getAttribute(\"data-navigo-options\")\n          );\n\n          if (!destroyed) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.navigate(clean(location), options);\n          }\n        };\n        link.addEventListener(\"click\", link.navigoHandler);\n      }\n    });\n    return self;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match[] | null {\n    return current;\n  }\n  function generate(name: string, data?: Object): string {\n    const route = routes.find((r) => r.name === name);\n    if (route) {\n      let result = route.path as string;\n      if (data) {\n        for (let key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      return !result.match(/^\\//) ? `/${result}` : result;\n    }\n    return null;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const hashString = extractHashFromURL(path);\n    const route = createRoute(url, () => {}, [genericHooks], url);\n    return {\n      url,\n      queryString,\n      hashString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n  function getCurrentLocation(): Match {\n    return pathToMatchObject(\n      clean(getCurrentEnvURL(root)).replace(new RegExp(`^${root}`), \"\")\n    );\n  }\n  function directMatchWithRegisteredRoutes(path: string): false | Match[] {\n    const context: QContext = {\n      instance: self,\n      currentLocationPath: path,\n      to: path,\n      navigateOptions: {},\n      resolveOptions: DEFAULT_RESOLVE_OPTIONS,\n    };\n    matchPathToRegisteredRoutes(context, () => {});\n    return context.matches ? context.matches : false;\n  }\n  function directMatchWithLocation(\n    path: string,\n    currentLocation?: string\n  ): false | Match {\n    const context: QContext = {\n      instance: self,\n      to: currentLocation,\n      currentLocationPath: currentLocation,\n    };\n    setLocationPath(context, () => {});\n    path = clean(path);\n    const match = matchRoute(context, {\n      name: path,\n      path,\n      handler: () => {},\n      hooks: {},\n    });\n    return match ? match : false;\n  }\n  function addHook(\n    type: string,\n    route: Route | string,\n    func: Function\n  ): Function {\n    if (typeof route === \"string\") {\n      route = getRoute(route);\n    }\n    if (route) {\n      if (!route.hooks[type]) route.hooks[type] = [];\n      route.hooks[type].push(func);\n      return () => {\n        (route as Route).hooks[type] = (route as Route).hooks[type].filter(\n          (f) => f !== func\n        );\n      };\n    } else {\n      console.warn(`Route doesn't exists: ${route}`);\n    }\n    return () => {};\n  }\n  function getRoute(nameOrHandler: string | Function): Route | undefined {\n    if (typeof nameOrHandler === \"string\") {\n      return routes.find((r) => r.name === composePathWithRoot(nameOrHandler));\n    }\n    return routes.find((r) => r.handler === nameOrHandler);\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n  this.__freezeListening = false;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.navigateByName = navigateByName;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = (url) =>\n    extractGETParameters(_checkForAHash(url));\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this.getCurrentLocation = getCurrentLocation;\n  this.addBeforeHook = addHook.bind(this, \"before\");\n  this.addAfterHook = addHook.bind(this, \"after\");\n  this.addAlreadyHook = addHook.bind(this, \"already\");\n  this.addLeaveHook = addHook.bind(this, \"leave\");\n  this.getRoute = getRoute;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n  this._checkForAHash = _checkForAHash;\n  this._setCurrent = (c) => (current = self.current = c);\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(783);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}