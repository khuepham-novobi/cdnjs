{"version":3,"sources":["webpack://Navigo.amd/./src/constants.ts","webpack://Navigo.amd/./src/utils.ts","webpack://Navigo.amd/./src/Q.ts","webpack://Navigo.amd/./src/middlewares/setLocationPath.ts","webpack://Navigo.amd/./src/middlewares/matchPathToRegisteredRoutes.ts","webpack://Navigo.amd/./src/middlewares/checkForDeprecationMethods.ts","webpack://Navigo.amd/./src/middlewares/checkForForceOp.ts","webpack://Navigo.amd/./src/middlewares/updateBrowserURL.ts","webpack://Navigo.amd/./src/middlewares/checkForLeaveHook.ts","webpack://Navigo.amd/./src/lifecycles.ts","webpack://Navigo.amd/./src/middlewares/checkForAlreadyHook.ts","webpack://Navigo.amd/./src/middlewares/checkForBeforeHook.ts","webpack://Navigo.amd/./src/middlewares/callHandler.ts","webpack://Navigo.amd/./src/middlewares/checkForAfterHook.ts","webpack://Navigo.amd/./src/middlewares/checkForNotFoundHandler.ts","webpack://Navigo.amd/./src/middlewares/errorOut.ts","webpack://Navigo.amd/./src/middlewares/flushCurrent.ts","webpack://Navigo.amd/./src/middlewares/processMatches.ts","webpack://Navigo.amd/./src/middlewares/updateState.ts","webpack://Navigo.amd/./src/index.ts","webpack://Navigo.amd/webpack/bootstrap","webpack://Navigo.amd/webpack/startup","webpack://Navigo.amd/webpack/runtime/define property getters","webpack://Navigo.amd/webpack/runtime/hasOwnProperty shorthand"],"names":["PARAMETER_REGEXP","WILDCARD_REGEXP","NOT_SURE_REGEXP","getCurrentEnvURL","fallback","windowAvailable","location","pathname","search","hash","clean","s","replace","isString","extractGETParameters","url","tmp","split","slice","join","parseQuery","queryString","query","pairs","i","length","pair","key","decodeURIComponent","Array","isArray","push","matchRoute","currentPath","route","pattern","current","GETParams","params","paramNames","path","full","dots","name","data","regexp","RegExp","match","names","reduce","value","index","regExpResultToParams","pushStateAvailable","window","history","pushState","undefinedOrTrue","obj","accumulateHooks","hooks","result","filter","h","forEach","type","Q","funcs","c","done","context","idx","next","splice","moveForward","_setLocationPath","currentLocationPath","instance","root","_checkForAHash","matchPathToRegisteredRoutes","routes","matches","resolveOptions","strategy","checkForDeprecationMethods","navigateOptions","console","warn","checkForForceOp","force","_setCurrent","_pathToMatchObject","to","if","condition","one","two","isWindowAvailable","isPushStateAvailable","updateBrowserURL","isItUsingHash","historyAPIMethod","stateObj","title","setTimeout","href","checkForLeaveHook","lastResolved","map","oldMatch","_","leaveLoopDone","leave","someOfTheLastOnesMatch","find","f","d","undefined","concat","foundLifecycle","already","before","handler","updatePageLinks","after","notFoundLifeCycle","notFoundRoute","_notFoundRoute","notFoundHandled","notFoundMatch","noMatchWarning","processMatches","nextMatch","updateState","Navigo","appRoute","genericHooks","DEFAULT_RESOLVE_OPTIONS","self","this","destroyed","indexOf","composePathWithRoot","createRoute","String","resolve","options","setLocationPath","call","document","querySelectorAll","link","getAttribute","hasListenerAttached","navigoHandler","e","ctrlKey","metaKey","target","tagName","toLowerCase","URL","u","err","source","str","temp","v","parseNavigateOptions","preventDefault","stopPropagation","navigate","addEventListener","removeEventListener","pathToMatchObject","addHook","func","getRoute","nameOrHandler","r","on","Object","keys","p","uses","as","off","what","destroy","__popstateListener","notFound","generate","getLinkPath","matchLocation","currentLocation","getCurrentLocation","addBeforeHook","bind","addAfterHook","addAlreadyHook","addLeaveHook","_clean","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty"],"mappings":"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","file":"navigo.amd.min.js","sourcesContent":["export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_WILDCARD = \"?(?:.*)\";\nexport const NOT_SURE_REGEXP = /\\/\\?/g;\nexport const REPLACE_NOT_SURE = \"/?([^/]+|)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import {\n  RouteHooksStorage,\n  Match,\n  Route,\n  NavigateOptions,\n  ResolveOptions,\n} from \"../index\";\n\nimport {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n  REPLACE_NOT_SURE,\n  NOT_SURE_REGEXP,\n} from \"./constants\";\n\nexport function getCurrentEnvURL(fallback = \"/\"): string {\n  if (windowAvailable()) {\n    return location.pathname + location.search + location.hash;\n  }\n  return fallback;\n}\nexport function clean(s: string) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(currentPath: string, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(clean(currentPath));\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD)\n        .replace(NOT_SURE_REGEXP, REPLACE_NOT_SURE) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n  // console.log(current, regexp);\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.slice(1);\n    return {\n      url: current,\n      queryString: GETParams,\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\nexport function undefinedOrTrue(obj, key: string): boolean {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateOptions(source?: string): NavigateOptions {\n  if (!source) return {};\n  const pairs = source.split(\",\");\n  const options: NavigateOptions = {};\n  let resolveOptions: ResolveOptions;\n\n  pairs.forEach((str) => {\n    const temp = str.split(\":\").map((v) => v.replace(/(^ +| +$)/g, \"\"));\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n      case \"resolveOptionsStrategy\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.strategy = temp[1];\n        break;\n      case \"resolveOptionsHash\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.hash = temp[1] === \"true\";\n        break;\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n  if (resolveOptions) {\n    options.resolveOptions = resolveOptions;\n  }\n  return options;\n}\nexport function windowAvailable() {\n  return typeof window !== \"undefined\";\n}\nexport function accumulateHooks(\n  hooks = [],\n  result: RouteHooksStorage = {}\n): RouteHooksStorage {\n  hooks\n    .filter((h) => h)\n    .forEach((h) => {\n      [\"before\", \"after\", \"already\", \"leave\"].forEach((type) => {\n        if (h[type]) {\n          if (!result[type]) result[type] = [];\n          result[type].push(h[type]);\n        }\n      });\n    });\n  return result as RouteHooksStorage;\n}\n","type QChild = {\n  type: \"child\";\n  funcs: Array<Function | Array<any> | QChild>;\n};\n\nexport default function Q(\n  funcs: Array<Function | Array<any> | QChild>,\n  c?: any,\n  done?: Function\n) {\n  const context = c || {};\n  let idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) {\n      if (done) {\n        done(context);\n      }\n      return;\n    }\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice(\n        idx,\n        1,\n        ...(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2])\n      );\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" / \" + JSON.stringify(context));\n      // console.log(funcs[idx].name);\n      (funcs[idx] as Function)(context, (moveForward) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        } else if (done) {\n          done(context);\n        }\n      });\n    }\n  })();\n}\n\nQ.if = function (condition: Function, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};\n","import { QContext } from \"../../index\";\nimport { getCurrentEnvURL } from \"../utils\";\n\nexport default function _setLocationPath(context: QContext, done) {\n  if (typeof context.currentLocationPath === \"undefined\") {\n    context.currentLocationPath = getCurrentEnvURL(context.instance.root);\n  }\n  context.currentLocationPath = context.instance._checkForAHash(\n    context.currentLocationPath\n  );\n  done();\n}\n","import { matchRoute } from \"../utils\";\nimport { QContext, Match } from \"../../index\";\n\nexport default function matchPathToRegisteredRoutes(context: QContext, done) {\n  for (let i = 0; i < context.instance.routes.length; i++) {\n    const route = context.instance.routes[i];\n    const match: false | Match = matchRoute(context.currentLocationPath, route);\n    if (match) {\n      if (!context.matches) context.matches = [];\n      context.matches.push(match);\n      if (context.resolveOptions.strategy === \"ONE\") {\n        done();\n        return;\n      }\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForDeprecationMethods(context: QContext, done) {\n  if (context.navigateOptions) {\n    if (typeof context.navigateOptions[\"shouldResolve\"] !== \"undefined\") {\n      console.warn(\n        `\"shouldResolve\" is deprecated. Please check the documentation.`\n      );\n    }\n    if (typeof context.navigateOptions[\"silent\"] !== \"undefined\") {\n      console.warn(`\"silent\" is deprecated. Please check the documentation.`);\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForForceOp(context: QContext, done) {\n  if (context.navigateOptions.force === true) {\n    context.instance._setCurrent([\n      context.instance._pathToMatchObject(context.to),\n    ]);\n    done(false);\n  } else {\n    done();\n  }\n}\n","import { undefinedOrTrue, pushStateAvailable, windowAvailable } from \"../utils\";\nimport { QContext } from \"../../index\";\n\nconst isWindowAvailable = windowAvailable();\nconst isPushStateAvailable = pushStateAvailable();\n\nexport default function updateBrowserURL(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateBrowserURL\")) {\n    const value = `/${context.to}`.replace(/\\/\\//g, \"/\"); // making sure that we don't have two slashes\n    const isItUsingHash =\n      isWindowAvailable &&\n      context.resolveOptions &&\n      context.resolveOptions.hash === true;\n    if (isPushStateAvailable) {\n      history[context.navigateOptions.historyAPIMethod || \"pushState\"](\n        context.navigateOptions.stateObj || {},\n        context.navigateOptions.title || \"\",\n        isItUsingHash ? `#${value}` : value\n      );\n      // This is to solve a nasty bug where the page doesn't scroll to the anchor.\n      // We set a microtask to update the hash only.\n      if (location && location.hash) {\n        setTimeout(() => {\n          let tmp = location.hash;\n          location.hash = \"\";\n          location.hash = tmp;\n        }, 1);\n      }\n    } else if (isWindowAvailable) {\n      window.location.href = context.to;\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForLeaveHook(context: QContext, done) {\n  const instance = context.instance;\n  if (!instance.lastResolved()) {\n    done();\n    return;\n  }\n  Q(\n    instance.lastResolved().map((oldMatch) => {\n      return (_, leaveLoopDone) => {\n        // no leave hook\n        if (!oldMatch.route.hooks || !oldMatch.route.hooks.leave) {\n          leaveLoopDone();\n          return;\n        }\n        const someOfTheLastOnesMatch = context.matches\n          ? context.matches.find((match) => {\n              return oldMatch.route.path === match.route.path;\n            })\n          : false;\n        if (\n          undefinedOrTrue(context.navigateOptions, \"callHooks\") &&\n          !someOfTheLastOnesMatch\n        ) {\n          Q(\n            oldMatch.route.hooks.leave\n              .map((f) => {\n                // just so we match the Q interface\n                return (_, d) =>\n                  f(\n                    d,\n                    context.matches && context.matches.length > 0\n                      ? context.matches.length === 1\n                        ? context.matches[0]\n                        : context.matches\n                      : undefined\n                  );\n              })\n              .concat([() => leaveLoopDone()])\n          );\n          return;\n        } else {\n          leaveLoopDone();\n        }\n      };\n    }),\n    {},\n    () => done()\n  );\n}\n","import { QContext } from \"../index\";\nimport Q from \"./Q\";\nimport checkForLeaveHook from \"./middlewares/checkForLeaveHook\";\nimport checkForBeforeHook from \"./middlewares/checkForBeforeHook\";\nimport callHandler from \"./middlewares/callHandler\";\nimport checkForAfterHook from \"./middlewares/checkForAfterHook\";\nimport checkForAlreadyHook from \"./middlewares/checkForAlreadyHook\";\nimport checkForNotFoundHandler from \"./middlewares/checkForNotFoundHandler\";\nimport errorOut from \"./middlewares/errorOut\";\nimport flushCurrent from \"./middlewares/flushCurrent\";\n\nexport const foundLifecycle = [\n  checkForAlreadyHook,\n  checkForBeforeHook,\n  callHandler,\n  checkForAfterHook,\n];\n\nexport const notFoundLifeCycle = [\n  checkForLeaveHook,\n  checkForNotFoundHandler,\n  Q.if(({ notFoundHandled }: QContext) => notFoundHandled, foundLifecycle, [\n    errorOut,\n  ]),\n  flushCurrent,\n];\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAlreadyHook(context: QContext, done) {\n  const current = context.instance.lastResolved();\n  if (\n    current &&\n    current[0] &&\n    current[0].route === context.match.route &&\n    current[0].url === context.match.url &&\n    current[0].queryString === context.match.queryString\n  ) {\n    current.forEach((c) => {\n      if (c.route.hooks && c.route.hooks.already) {\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n          c.route.hooks.already.forEach((f) => f(context.match));\n        }\n      }\n    });\n    done(false);\n    return;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForBeforeHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.before &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    Q(\n      context.match.route.hooks.before\n        .map((f) => {\n          // just so we match the Q interface\n          return function beforeHookInternal(_, d) {\n            return f(d, context.match);\n          };\n        })\n        .concat([() => done()])\n    );\n  } else {\n    done();\n  }\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function callHandler(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"callHandler\")) {\n    context.match.route.handler(context.match);\n  }\n  context.instance.updatePageLinks();\n  done();\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function _checkForAfterHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.after &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    context.match.route.hooks.after.forEach((f) => f(context.match));\n  }\n  done();\n}\n","import { QContext, Match } from \"../../index\";\nimport { parseQuery, extractGETParameters, clean } from \"../utils\";\n\nexport default function checkForNotFoundHandler(context: QContext, done) {\n  const notFoundRoute = context.instance._notFoundRoute;\n  if (notFoundRoute) {\n    context.notFoundHandled = true;\n    const [url, queryString] = extractGETParameters(\n      context.currentLocationPath\n    );\n    notFoundRoute.path = clean(url);\n    const notFoundMatch: Match = {\n      url: notFoundRoute.path,\n      queryString,\n      data: null,\n      route: notFoundRoute,\n      params: queryString !== \"\" ? parseQuery(queryString) : null,\n    };\n    context.matches = [notFoundMatch];\n    context.match = notFoundMatch;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function errorOut(context: QContext, done) {\n  if (\n    !context.resolveOptions ||\n    context.resolveOptions.noMatchWarning === false ||\n    typeof context.resolveOptions.noMatchWarning === \"undefined\"\n  )\n    console.warn(\n      `Navigo: \"${context.currentLocationPath}\" didn't match any of the registered routes.`\n    );\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function flushCurrent(context: QContext, done) {\n  context.instance._setCurrent(null);\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { foundLifecycle } from \"../lifecycles\";\nimport updateState from \"./updateState\";\nimport checkForLeaveHook from \"./checkForLeaveHook\";\n\nexport default function processMatches(context: QContext, done) {\n  let idx = 0;\n  function nextMatch() {\n    if (idx === context.matches.length) {\n      updateState(context, done);\n      return;\n    }\n    Q(\n      foundLifecycle,\n      { ...context, match: context.matches[idx] },\n      function end() {\n        idx += 1;\n        nextMatch();\n      }\n    );\n  }\n  checkForLeaveHook(context, nextMatch);\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function callHandler(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateState\")) {\n    context.instance._setCurrent(context.matches);\n  }\n  done();\n}\n","import {\n  Match,\n  Route,\n  RouteHooks,\n  QContext,\n  NavigateOptions,\n  ResolveOptions,\n} from \"../index\";\nimport NavigoRouter from \"../index\";\nimport {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n  parseNavigateOptions,\n  windowAvailable,\n  getCurrentEnvURL,\n  accumulateHooks,\n} from \"./utils\";\nimport Q from \"./Q\";\nimport setLocationPath from \"./middlewares/setLocationPath\";\nimport matchPathToRegisteredRoutes from \"./middlewares/matchPathToRegisteredRoutes\";\nimport checkForDeprecationMethods from \"./middlewares/checkForDeprecationMethods\";\nimport checkForForceOp from \"./middlewares/checkForForceOp\";\nimport updateBrowserURL from \"./middlewares/updateBrowserURL\";\nimport processMatches from \"./middlewares/processMatches\";\n\nimport { notFoundLifeCycle } from \"./lifecycles\";\n\nexport default function Navigo(\n  appRoute?: string,\n  resolveOptions?: ResolveOptions\n) {\n  let DEFAULT_RESOLVE_OPTIONS: ResolveOptions = resolveOptions || {\n    strategy: \"ONE\",\n    hash: false,\n    noMatchWarning: false,\n  };\n  let self: NavigoRouter = this;\n  let root = \"/\";\n  let current: Match[] = null;\n  let routes: Route[] = [];\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = windowAvailable();\n\n  if (!appRoute) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(appRoute);\n  }\n\n  function _checkForAHash(url: string): string {\n    if (url.indexOf(\"#\") >= 0) {\n      if (DEFAULT_RESOLVE_OPTIONS.hash === true) {\n        url = url.split(\"#\")[1] || \"/\";\n      } else {\n        url = url.split(\"#\")[0];\n      }\n    }\n    return url;\n  }\n  function composePathWithRoot(path: string) {\n    return clean(`${root}/${clean(path)}`);\n  }\n  function createRoute(\n    path: string | RegExp,\n    handler: Function,\n    hooks: RouteHooks[],\n    name?: string\n  ): Route {\n    path = isString(path) ? composePathWithRoot(path as string) : path;\n    return {\n      name: name || clean(String(path)),\n      path,\n      handler,\n      hooks: accumulateHooks(hooks),\n    };\n  }\n\n  // public APIs\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Function,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, [genericHooks, hooks], name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Function;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, [genericHooks, hooks])\n    );\n    return this;\n  }\n  function resolve(to?: string, options?: ResolveOptions): false | Match[] {\n    const context: QContext = {\n      instance: self,\n      currentLocationPath: to ? `${clean(root)}/${clean(to)}` : undefined,\n      navigateOptions: {},\n      resolveOptions: options || DEFAULT_RESOLVE_OPTIONS,\n    };\n    Q(\n      [\n        setLocationPath,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => {\n            // console.log(`${currentLocationPath} -> Matches: ${matches.length}`);\n            return matches && matches.length > 0;\n          },\n          processMatches,\n          notFoundLifeCycle\n        ),\n      ],\n      context\n    );\n\n    return context.matches ? context.matches : false;\n  }\n  function navigate(to: string, navigateOptions?: NavigateOptions): void {\n    to = `${clean(root)}/${clean(to)}`;\n    const context: QContext = {\n      instance: self,\n      to,\n      navigateOptions: navigateOptions || {},\n      resolveOptions:\n        navigateOptions && navigateOptions.resolveOptions\n          ? navigateOptions.resolveOptions\n          : DEFAULT_RESOLVE_OPTIONS,\n      currentLocationPath: _checkForAHash(to),\n    };\n    Q(\n      [\n        checkForDeprecationMethods,\n        checkForForceOp,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n        updateBrowserURL,\n      ],\n      context\n    );\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        resolve();\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    self._notFoundRoute = createRoute(\n      \"*\",\n      handler,\n      [genericHooks, hooks],\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (\n        \"false\" === link.getAttribute(\"data-navigo\") ||\n        \"_blank\" === link.getAttribute(\"target\")\n      ) {\n        if (link.hasListenerAttached) {\n          link.removeEventListener(\"click\", link.navigoHandler);\n        }\n        return;\n      }\n      if (!link.hasListenerAttached) {\n        link.hasListenerAttached = true;\n        link.navigoHandler = function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          let location = link.getAttribute(\"href\");\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          }\n          // handling absolute paths\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              const u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n          const options = parseNavigateOptions(\n            link.getAttribute(\"data-navigo-options\")\n          );\n\n          if (!destroyed) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.navigate(clean(location), options);\n          }\n        };\n        link.addEventListener(\"click\", link.navigoHandler);\n      }\n    });\n    return self;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match[] | null {\n    return current;\n  }\n  function generate(name: string, data?: Object): string {\n    const result = routes.reduce((result, route) => {\n      let key;\n\n      if (route.name === name) {\n        result = route.path as string;\n        for (key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      return result;\n    }, \"\");\n    return !result.match(/^\\//) ? `/${result}` : result;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const route = createRoute(url, () => {}, [genericHooks], url);\n    return {\n      url,\n      queryString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n  function getCurrentLocation(): Match {\n    return pathToMatchObject(\n      clean(getCurrentEnvURL(root)).replace(new RegExp(`^${root}`), \"\")\n    );\n  }\n  function directMatchWithRegisteredRoutes(path: string): false | Match[] {\n    const context: QContext = {\n      instance: self,\n      currentLocationPath: path,\n      navigateOptions: {},\n      resolveOptions: DEFAULT_RESOLVE_OPTIONS,\n    };\n    matchPathToRegisteredRoutes(context, () => {});\n    return context.matches ? context.matches : false;\n  }\n  function directMatchWithLocation(\n    path: string,\n    currentLocation?: string\n  ): false | Match {\n    const context: QContext = {\n      instance: self,\n      currentLocationPath: currentLocation,\n    };\n    setLocationPath(context, () => {});\n    path = clean(path);\n    const match = matchRoute(context.currentLocationPath, {\n      name: path,\n      path,\n      handler: () => {},\n      hooks: {},\n    });\n    return match ? match : false;\n  }\n  function addHook(\n    type: string,\n    route: Route | string,\n    func: Function\n  ): Function {\n    if (typeof route === \"string\") {\n      route = getRoute(route);\n    }\n    if (route) {\n      if (!route.hooks[type]) route.hooks[type] = [];\n      route.hooks[type].push(func);\n      return () => {\n        (route as Route).hooks[type] = (route as Route).hooks[type].filter(\n          (f) => f !== func\n        );\n      };\n    } else {\n      console.warn(`Route doesn't exists: ${route}`);\n    }\n    return () => {};\n  }\n  function getRoute(nameOrHandler: string | Function): Route | undefined {\n    if (typeof nameOrHandler === \"string\") {\n      return routes.find((r) => r.name === composePathWithRoot(nameOrHandler));\n    }\n    return routes.find((r) => r.handler === nameOrHandler);\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = (url) =>\n    extractGETParameters(_checkForAHash(url));\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this.getCurrentLocation = getCurrentLocation;\n  this.addBeforeHook = addHook.bind(this, \"before\");\n  this.addAfterHook = addHook.bind(this, \"after\");\n  this.addAlreadyHook = addHook.bind(this, \"already\");\n  this.addLeaveHook = addHook.bind(this, \"leave\");\n  this.getRoute = getRoute;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n  this._checkForAHash = _checkForAHash;\n  this._setCurrent = (c) => (current = self.current = c);\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(783);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}