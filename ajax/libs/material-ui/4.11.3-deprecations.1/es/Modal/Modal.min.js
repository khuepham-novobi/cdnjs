import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import*as ReactDOM from"react-dom";import PropTypes from"prop-types";import{getThemeProps,useTheme}from"@material-ui/styles";import{elementAcceptingRef,HTMLElementType}from"@material-ui/utils";import deprecatedPropType from"../utils/deprecatedPropType";import ownerDocument from"../utils/ownerDocument";import Portal from"../Portal";import createChainedFunction from"../utils/createChainedFunction";import useForkRef from"../utils/useForkRef";import useEventCallback from"../utils/useEventCallback";import zIndex from"../styles/zIndex";import ModalManager,{ariaHidden}from"./ModalManager";import TrapFocus from"../Unstable_TrapFocus";import SimpleBackdrop from"./SimpleBackdrop";function getContainer(e){return e="function"==typeof e?e():e,ReactDOM.findDOMNode(e)}function getHasTransition(e){return!!e.children&&e.children.props.hasOwnProperty("in")}const defaultManager=new ModalManager;export const styles=e=>({root:{position:"fixed",zIndex:e.zIndex.modal,right:0,bottom:0,top:0,left:0},hidden:{visibility:"hidden"}});const Modal=React.forwardRef(function(e,o){const r=useTheme(),t=getThemeProps({name:"MuiModal",props:_extends({},e),theme:r}),{BackdropComponent:n=SimpleBackdrop,BackdropProps:a,children:s,closeAfterTransition:p=!1,container:c,disableAutoFocus:l=!1,disableBackdropClick:i=!1,disableEnforceFocus:d=!1,disableEscapeKeyDown:u=!1,disablePortal:m=!1,disableRestoreFocus:b=!1,disableScrollLock:f=!1,hideBackdrop:y=!1,keepMounted:T=!1,manager:k=defaultManager,onBackdropClick:P,onClose:h,onEscapeKeyDown:R,onRendered:C,open:E}=t,g=_objectWithoutPropertiesLoose(t,["BackdropComponent","BackdropProps","children","closeAfterTransition","container","disableAutoFocus","disableBackdropClick","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open"]),[F,M]=React.useState(!0),x=React.useRef({}),w=React.useRef(null),B=React.useRef(null),D=useForkRef(B,o),v=getHasTransition(t),A=()=>ownerDocument(w.current),I=()=>(x.current.modalRef=B.current,x.current.mountNode=w.current,x.current),K=()=>{k.mount(I(),{disableScrollLock:f}),B.current.scrollTop=0},L=useEventCallback(()=>{const e=getContainer(c)||A().body;k.add(I(),e),B.current&&K()}),_=React.useCallback(()=>k.isTopModal(I()),[k]),S=useEventCallback(e=>{w.current=e,e&&(C&&C(),E&&_()?K():ariaHidden(B.current,!0))}),O=React.useCallback(()=>{k.remove(I())},[k]);if(React.useEffect(()=>()=>{O()},[O]),React.useEffect(()=>{E?L():v&&p||O()},[E,O,v,p,L]),!T&&!E&&(!v||F))return null;const z=()=>{M(!1)},H=()=>{M(!0),p&&O()},j=styles(r||{zIndex:zIndex}),U={};return void 0===s.props.tabIndex&&(U.tabIndex=s.props.tabIndex||"-1"),v&&(U.onEnter=createChainedFunction(z,s.props.onEnter),U.onExited=createChainedFunction(H,s.props.onExited)),React.createElement(Portal,{ref:S,container:c,disablePortal:m},React.createElement("div",_extends({ref:D,onKeyDown:e=>{"Escape"===e.key&&_()&&(R&&R(e),u||(e.stopPropagation(),h&&h(e,"escapeKeyDown")))},role:"presentation"},g,{style:_extends({},j.root,!E&&F?j.hidden:{},g.style)}),y?null:React.createElement(n,_extends({open:E,onClick:e=>{e.target===e.currentTarget&&(P&&P(e),!i&&h&&h(e,"backdropClick"))}},a)),React.createElement(TrapFocus,{disableEnforceFocus:d,disableAutoFocus:l,disableRestoreFocus:b,getDoc:A,isEnabled:_,open:E},React.cloneElement(s,U))))});"production"!==process.env.NODE_ENV&&(Modal.propTypes={BackdropComponent:PropTypes.elementType,BackdropProps:PropTypes.object,children:elementAcceptingRef.isRequired,closeAfterTransition:PropTypes.bool,container:PropTypes.oneOfType([HTMLElementType,PropTypes.instanceOf(React.Component),PropTypes.func]),disableAutoFocus:PropTypes.bool,disableBackdropClick:deprecatedPropType(PropTypes.bool,"Use the onClose prop with the `reason` argument to filter the `backdropClick` events."),disableEnforceFocus:PropTypes.bool,disableEscapeKeyDown:PropTypes.bool,disablePortal:PropTypes.bool,disableRestoreFocus:PropTypes.bool,disableScrollLock:PropTypes.bool,hideBackdrop:PropTypes.bool,keepMounted:PropTypes.bool,manager:PropTypes.object,onBackdropClick:deprecatedPropType(PropTypes.func,"Use the onClose prop with the `reason` argument to handle the `backdropClick` events."),onClose:PropTypes.func,onEscapeKeyDown:deprecatedPropType(PropTypes.func,"Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events."),onRendered:deprecatedPropType(PropTypes.func,"Use the ref instead."),open:PropTypes.bool.isRequired});export default Modal;