import*as React from"react";import*as ReactDOM from"react-dom";import PropTypes from"prop-types";import ownerDocument from"../utils/ownerDocument";import useForkRef from"../utils/useForkRef";import useEventCallback from"../utils/useEventCallback";import{elementAcceptingRef,exactProp}from"@material-ui/utils";function mapEventPropToEvent(e){return e.substring(2).toLowerCase()}function clickedRootScrollbar(e){return document.documentElement.clientWidth<e.clientX||document.documentElement.clientHeight<e.clientY}function ClickAwayListener(e){var t=e.children,n=e.disableReactTree,r=void 0!==n&&n,o=e.mouseEvent,c=void 0===o?"onClick":o,u=e.onClickAway,i=e.touchEvent,a=void 0===i?"onTouchEnd":i,s=React.useRef(!1),l=React.useRef(null),f=React.useRef(!1),p=React.useRef(!1);React.useEffect(function(){return setTimeout(function(){f.current=!0},0),function(){f.current=!1}},[]);var m=React.useCallback(function(e){l.current=ReactDOM.findDOMNode(e)},[]),v=useForkRef(t.ref,m),d=useEventCallback(function(e){var t=p.current;if(p.current=!1,f.current&&l.current&&!clickedRootScrollbar(e))if(s.current)s.current=!1;else{var n;if(e.composedPath)n=e.composedPath().indexOf(l.current)>-1;else n=!ownerDocument(l.current).documentElement.contains(e.target)||l.current.contains(e.target);n||!r&&t||u(e)}}),E=function(e){return function(n){p.current=!0;var r=t.props[e];r&&r(n)}},R={ref:v};return!1!==a&&(R[a]=E(a)),React.useEffect(function(){if(!1!==a){var e=mapEventPropToEvent(a),t=ownerDocument(l.current),n=function(){s.current=!0};return t.addEventListener(e,d),t.addEventListener("touchmove",n),function(){t.removeEventListener(e,d),t.removeEventListener("touchmove",n)}}},[d,a]),!1!==c&&(R[c]=E(c)),React.useEffect(function(){if(!1!==c){var e=mapEventPropToEvent(c),t=ownerDocument(l.current);return t.addEventListener(e,d),function(){t.removeEventListener(e,d)}}},[d,c]),React.createElement(React.Fragment,null,React.cloneElement(t,R))}"production"!==process.env.NODE_ENV&&(ClickAwayListener.propTypes={children:elementAcceptingRef.isRequired,disableReactTree:PropTypes.bool,mouseEvent:PropTypes.oneOf(["onClick","onMouseDown","onMouseUp",!1]),onClickAway:PropTypes.func.isRequired,touchEvent:PropTypes.oneOf(["onTouchEnd","onTouchStart",!1])}),"production"!==process.env.NODE_ENV&&(ClickAwayListener.propTypes=exactProp(ClickAwayListener.propTypes));export default ClickAwayListener;