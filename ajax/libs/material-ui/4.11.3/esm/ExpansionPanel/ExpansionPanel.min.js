import _extends from"@babel/runtime/helpers/esm/extends";import _toArray from"@babel/runtime/helpers/esm/toArray";import _slicedToArray from"@babel/runtime/helpers/esm/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{chainPropTypes}from"@material-ui/utils";import Collapse from"../Collapse";import Paper from"../Paper";import withStyles from"../styles/withStyles";import ExpansionPanelContext from"./ExpansionPanelContext";import useControlled from"../utils/useControlled";export var styles=function(e){var o={duration:e.transitions.duration.shortest};return{root:{position:"relative",transition:e.transitions.create(["margin"],o),"&:before":{position:"absolute",left:0,top:-1,right:0,height:1,content:'""',opacity:1,backgroundColor:e.palette.divider,transition:e.transitions.create(["opacity","background-color"],o)},"&:first-child":{"&:before":{display:"none"}},"&$expanded":{margin:"16px 0","&:first-child":{marginTop:0},"&:last-child":{marginBottom:0},"&:before":{opacity:0}},"&$expanded + &":{"&:before":{display:"none"}},"&$disabled":{backgroundColor:e.palette.action.disabledBackground}},rounded:{borderRadius:0,"&:first-child":{borderTopLeftRadius:e.shape.borderRadius,borderTopRightRadius:e.shape.borderRadius},"&:last-child":{borderBottomLeftRadius:e.shape.borderRadius,borderBottomRightRadius:e.shape.borderRadius,"@supports (-ms-ime-align: auto)":{borderBottomLeftRadius:0,borderBottomRightRadius:0}}},expanded:{},disabled:{}}};var warnedOnce=!1,ExpansionPanel=React.forwardRef(function(e,o){"production"!==process.env.NODE_ENV&&(warnedOnce||(warnedOnce=!0,console.error(["Material-UI: the ExpansionPanel component was renamed to Accordion to use a more common naming convention.","","You should use `import { Accordion } from '@material-ui/core'`","or `import Accordion from '@material-ui/core/Accordion'`"].join("\n"))));var r=e.children,a=e.classes,t=e.className,n=e.defaultExpanded,i=void 0!==n&&n,s=e.disabled,d=void 0!==s&&s,l=e.expanded,p=e.onChange,c=e.square,m=void 0!==c&&c,u=e.TransitionComponent,b=void 0===u?Collapse:u,f=e.TransitionProps,h=_objectWithoutProperties(e,["children","classes","className","defaultExpanded","disabled","expanded","onChange","square","TransitionComponent","TransitionProps"]),x=useControlled({controlled:l,default:i,name:"ExpansionPanel",state:"expanded"}),y=_slicedToArray(x,2),P=y[0],T=y[1],R=React.useCallback(function(e){T(!P),p&&p(e,!P)},[P,p,T]),g=React.Children.toArray(r),E=_toArray(g),C=E[0],v=E.slice(1),A=React.useMemo(function(){return{expanded:P,disabled:d,toggle:R}},[P,d,R]);return React.createElement(Paper,_extends({className:clsx(a.root,t,P&&a.expanded,d&&a.disabled,!m&&a.rounded),ref:o,square:m},h),React.createElement(ExpansionPanelContext.Provider,{value:A},C),React.createElement(b,_extends({in:P,timeout:"auto"},f),React.createElement("div",{"aria-labelledby":C.props.id,id:C.props["aria-controls"],role:"region"},v)))});"production"!==process.env.NODE_ENV&&(ExpansionPanel.propTypes={children:chainPropTypes(PropTypes.node.isRequired,function(e){var o=React.Children.toArray(e.children)[0];return isFragment(o)?new Error("Material-UI: The ExpansionPanel doesn't accept a Fragment as a child. Consider providing an array instead."):React.isValidElement(o)?null:new Error("Material-UI: Expected the first child of ExpansionPanel to be a valid element.")}),classes:PropTypes.object,className:PropTypes.string,defaultExpanded:PropTypes.bool,disabled:PropTypes.bool,expanded:PropTypes.bool,onChange:PropTypes.func,square:PropTypes.bool,TransitionComponent:PropTypes.elementType,TransitionProps:PropTypes.object});export default withStyles(styles,{name:"MuiExpansionPanel"})(ExpansionPanel);