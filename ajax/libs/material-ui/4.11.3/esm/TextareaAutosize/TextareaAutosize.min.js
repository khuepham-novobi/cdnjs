import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import debounce from"../utils/debounce";import useForkRef from"../utils/useForkRef";function getStyleValue(e,t){return parseInt(e[t],10)||0}var useEnhancedEffect="undefined"!=typeof window?React.useLayoutEffect:React.useEffect,styles={shadow:{visibility:"hidden",position:"absolute",overflow:"hidden",height:0,top:0,left:0,transform:"translateZ(0)"}},TextareaAutosize=React.forwardRef(function(e,t){var r=e.onChange,o=e.rows,n=e.rowsMax,s=e.rowsMin,a=void 0===s?1:s,u=e.style,i=e.value,l=_objectWithoutProperties(e,["onChange","rows","rowsMax","rowsMin","style","value"]),p=o||a,c=React.useRef(null!=i).current,f=React.useRef(null),d=useForkRef(t,f),y=React.useRef(null),h=React.useRef(0),m=React.useState({}),b=m[0],w=m[1],T=React.useCallback(function(){var t=f.current,r=window.getComputedStyle(t),o=y.current;o.style.width=r.width,o.value=t.value||e.placeholder||"x","\n"===o.value.slice(-1)&&(o.value+=" ");var s=r["box-sizing"],a=getStyleValue(r,"padding-bottom")+getStyleValue(r,"padding-top"),u=getStyleValue(r,"border-bottom-width")+getStyleValue(r,"border-top-width"),i=o.scrollHeight-a;o.value="x";var l=o.scrollHeight-a,c=i;p&&(c=Math.max(Number(p)*l,c)),n&&(c=Math.min(Number(n)*l,c));var d=(c=Math.max(c,l))+("border-box"===s?a+u:0),m=Math.abs(c-i)<=1;w(function(e){return h.current<20&&(d>0&&Math.abs((e.outerHeightStyle||0)-d)>1||e.overflow!==m)?(h.current+=1,{overflow:m,outerHeightStyle:d}):("production"!==process.env.NODE_ENV&&20===h.current&&console.error(["Material-UI: Too many re-renders. The layout is unstable.","TextareaAutosize limits the number of renders to prevent an infinite loop."].join("\n")),e)})},[n,p,e.placeholder]);React.useEffect(function(){var e=debounce(function(){h.current=0,T()});return window.addEventListener("resize",e),function(){e.clear(),window.removeEventListener("resize",e)}},[T]),useEnhancedEffect(function(){T()}),React.useEffect(function(){h.current=0},[i]);return React.createElement(React.Fragment,null,React.createElement("textarea",_extends({value:i,onChange:function(e){h.current=0,c||T(),r&&r(e)},ref:d,rows:p,style:_extends({height:b.outerHeightStyle,overflow:b.overflow?"hidden":null},u)},l)),React.createElement("textarea",{"aria-hidden":!0,className:e.className,readOnly:!0,ref:y,tabIndex:-1,style:_extends({},styles.shadow,u)}))});"production"!==process.env.NODE_ENV&&(TextareaAutosize.propTypes={className:PropTypes.string,onChange:PropTypes.func,placeholder:PropTypes.string,rows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),rowsMax:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),rowsMin:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),style:PropTypes.object,value:PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string),PropTypes.number,PropTypes.string])});export default TextareaAutosize;