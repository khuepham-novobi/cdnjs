import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import withStyles from"../styles/withStyles";import ButtonBase from"../ButtonBase";import unsupportedProp from"../utils/unsupportedProp";export var styles=function(e){return{root:{transition:e.transitions.create(["color","padding-top"],{duration:e.transitions.duration.short}),padding:"6px 12px 8px",minWidth:80,maxWidth:168,color:e.palette.text.secondary,flex:"1","&$iconOnly":{paddingTop:16},"&$selected":{paddingTop:6,color:e.palette.primary.main}},selected:{},iconOnly:{},wrapper:{display:"inline-flex",alignItems:"center",justifyContent:"center",width:"100%",flexDirection:"column"},label:{fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(12),opacity:1,transition:"font-size 0.2s, opacity 0.2s",transitionDelay:"0.1s","&$iconOnly":{opacity:0,transitionDelay:"0s"},"&$selected":{fontSize:e.typography.pxToRem(14)}}}};var BottomNavigationAction=React.forwardRef(function(e,t){var o=e.classes,n=e.className,s=e.icon,a=e.label,r=e.onChange,i=e.onClick,p=e.selected,l=e.showLabel,c=e.value,m=_objectWithoutProperties(e,["classes","className","icon","label","onChange","onClick","selected","showLabel","value"]);return React.createElement(ButtonBase,_extends({ref:t,className:clsx(o.root,n,p?o.selected:!l&&o.iconOnly),focusRipple:!0,onClick:function(e){r&&r(e,c),i&&i(e)}},m),React.createElement("span",{className:o.wrapper},s,React.createElement("span",{className:clsx(o.label,p?o.selected:!l&&o.iconOnly)},a)))});"production"!==process.env.NODE_ENV&&(BottomNavigationAction.propTypes={children:unsupportedProp,classes:PropTypes.object,className:PropTypes.string,icon:PropTypes.node,label:PropTypes.node,onChange:PropTypes.func,onClick:PropTypes.func,selected:PropTypes.bool,showLabel:PropTypes.bool,value:PropTypes.any});export default withStyles(styles,{name:"MuiBottomNavigationAction"})(BottomNavigationAction);