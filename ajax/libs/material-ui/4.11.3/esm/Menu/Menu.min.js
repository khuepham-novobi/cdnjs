import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{HTMLElementType}from"@material-ui/utils";import withStyles from"../styles/withStyles";import Popover from"../Popover";import MenuList from"../MenuList";import*as ReactDOM from"react-dom";import setRef from"../utils/setRef";import useTheme from"../styles/useTheme";var RTL_ORIGIN={vertical:"top",horizontal:"right"},LTR_ORIGIN={vertical:"top",horizontal:"left"};export var styles={paper:{maxHeight:"calc(100% - 96px)",WebkitOverflowScrolling:"touch"},list:{outline:0}};var Menu=React.forwardRef(function(e,o){var r=e.autoFocus,t=void 0===r||r,n=e.children,s=e.classes,p=e.disableAutoFocusItem,i=void 0!==p&&p,a=e.MenuListProps,c=void 0===a?{}:a,u=e.onClose,l=e.onEntering,m=e.open,f=e.PaperProps,P=void 0===f?{}:f,d=e.PopoverClasses,y=e.transitionDuration,T=void 0===y?"auto":y,R=e.variant,v=void 0===R?"selectedMenu":R,h=_objectWithoutProperties(e,["autoFocus","children","classes","disableAutoFocusItem","MenuListProps","onClose","onEntering","open","PaperProps","PopoverClasses","transitionDuration","variant"]),b=useTheme(),E=t&&!i&&m,M=React.useRef(null),O=React.useRef(null),x=-1;React.Children.map(n,function(e,o){React.isValidElement(e)&&("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Menu component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),e.props.disabled||("menu"!==v&&e.props.selected?x=o:-1===x&&(x=o)))});var I=React.Children.map(n,function(e,o){return o===x?React.cloneElement(e,{ref:function(o){O.current=ReactDOM.findDOMNode(o),setRef(e.ref,o)}}):e});return React.createElement(Popover,_extends({getContentAnchorEl:function(){return O.current},classes:d,onClose:u,onEntering:function(e,o){M.current&&M.current.adjustStyleForScrollbar(e,b),l&&l(e,o)},anchorOrigin:"rtl"===b.direction?RTL_ORIGIN:LTR_ORIGIN,transformOrigin:"rtl"===b.direction?RTL_ORIGIN:LTR_ORIGIN,PaperProps:_extends({},P,{classes:_extends({},P.classes,{root:s.paper})}),open:m,ref:o,transitionDuration:T},h),React.createElement(MenuList,_extends({onKeyDown:function(e){"Tab"===e.key&&(e.preventDefault(),u&&u(e,"tabKeyDown"))},actions:M,autoFocus:t&&(-1===x||i),autoFocusItem:E,variant:v},c,{className:clsx(s.list,c.className)}),I))});"production"!==process.env.NODE_ENV&&(Menu.propTypes={anchorEl:PropTypes.oneOfType([HTMLElementType,PropTypes.func]),autoFocus:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,disableAutoFocusItem:PropTypes.bool,MenuListProps:PropTypes.object,onClose:PropTypes.func,onEnter:PropTypes.func,onEntered:PropTypes.func,onEntering:PropTypes.func,onExit:PropTypes.func,onExited:PropTypes.func,onExiting:PropTypes.func,open:PropTypes.bool.isRequired,PaperProps:PropTypes.object,PopoverClasses:PropTypes.object,transitionDuration:PropTypes.oneOfType([PropTypes.oneOf(["auto"]),PropTypes.number,PropTypes.shape({appear:PropTypes.number,enter:PropTypes.number,exit:PropTypes.number})]),variant:PropTypes.oneOf(["menu","selectedMenu"])});export default withStyles(styles,{name:"MuiMenu"})(Menu);