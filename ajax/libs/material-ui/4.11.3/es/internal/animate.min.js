function easeInOutSin(n){return(1+Math.sin(Math.PI*n-Math.PI/2))/2}export default function animate(n,t,e,a={},r=(()=>{})){const{ease:i=easeInOutSin,duration:o=300}=a;let u=null;const l=t[n];let s=!1;const m=()=>{s=!0},c=a=>{if(s)return void r(new Error("Animation cancelled"));null===u&&(u=a);const m=Math.min(1,(a-u)/o);t[n]=i(m)*(e-l)+l,m>=1?requestAnimationFrame(()=>{r(null)}):requestAnimationFrame(c)};return l===e?(r(new Error("Element already at target position")),m):(requestAnimationFrame(c),m)};