import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{HTMLElementType}from"@material-ui/utils";import withStyles from"../styles/withStyles";import Popover from"../Popover";import MenuList from"../MenuList";import*as ReactDOM from"react-dom";import setRef from"../utils/setRef";import useTheme from"../styles/useTheme";const RTL_ORIGIN={vertical:"top",horizontal:"right"},LTR_ORIGIN={vertical:"top",horizontal:"left"};export const styles={paper:{maxHeight:"calc(100% - 96px)",WebkitOverflowScrolling:"touch"},list:{outline:0}};const Menu=React.forwardRef(function(e,o){const{autoFocus:t=!0,children:r,classes:s,disableAutoFocusItem:n=!1,MenuListProps:p={},onClose:i,onEntering:a,open:c,PaperProps:l={},PopoverClasses:u,transitionDuration:m="auto",variant:P="selectedMenu"}=e,y=_objectWithoutPropertiesLoose(e,["autoFocus","children","classes","disableAutoFocusItem","MenuListProps","onClose","onEntering","open","PaperProps","PopoverClasses","transitionDuration","variant"]),T=useTheme(),f=t&&!n&&c,d=React.useRef(null),R=React.useRef(null);let h=-1;React.Children.map(r,(e,o)=>{React.isValidElement(e)&&("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Menu component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),e.props.disabled||("menu"!==P&&e.props.selected?h=o:-1===h&&(h=o)))});const b=React.Children.map(r,(e,o)=>o===h?React.cloneElement(e,{ref:o=>{R.current=ReactDOM.findDOMNode(o),setRef(e.ref,o)}}):e);return React.createElement(Popover,_extends({getContentAnchorEl:()=>R.current,classes:u,onClose:i,onEntering:(e,o)=>{d.current&&d.current.adjustStyleForScrollbar(e,T),a&&a(e,o)},anchorOrigin:"rtl"===T.direction?RTL_ORIGIN:LTR_ORIGIN,transformOrigin:"rtl"===T.direction?RTL_ORIGIN:LTR_ORIGIN,PaperProps:_extends({},l,{classes:_extends({},l.classes,{root:s.paper})}),open:c,ref:o,transitionDuration:m},y),React.createElement(MenuList,_extends({onKeyDown:e=>{"Tab"===e.key&&(e.preventDefault(),i&&i(e,"tabKeyDown"))},actions:d,autoFocus:t&&(-1===h||n),autoFocusItem:f,variant:P},p,{className:clsx(s.list,p.className)}),b))});"production"!==process.env.NODE_ENV&&(Menu.propTypes={anchorEl:PropTypes.oneOfType([HTMLElementType,PropTypes.func]),autoFocus:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,disableAutoFocusItem:PropTypes.bool,MenuListProps:PropTypes.object,onClose:PropTypes.func,onEnter:PropTypes.func,onEntered:PropTypes.func,onEntering:PropTypes.func,onExit:PropTypes.func,onExited:PropTypes.func,onExiting:PropTypes.func,open:PropTypes.bool.isRequired,PaperProps:PropTypes.object,PopoverClasses:PropTypes.object,transitionDuration:PropTypes.oneOfType([PropTypes.oneOf(["auto"]),PropTypes.number,PropTypes.shape({appear:PropTypes.number,enter:PropTypes.number,exit:PropTypes.number})]),variant:PropTypes.oneOf(["menu","selectedMenu"])});export default withStyles(styles,{name:"MuiMenu"})(Menu);