import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import debounce from"../utils/debounce";import withStyles from"../styles/withStyles";import isMuiElement from"../utils/isMuiElement";export const styles={root:{boxSizing:"border-box",flexShrink:0},tile:{position:"relative",display:"block",height:"100%",overflow:"hidden"},imgFullHeight:{height:"100%",transform:"translateX(-50%)",position:"relative",left:"50%"},imgFullWidth:{width:"100%",position:"relative",transform:"translateY(-50%)",top:"50%"}};const fit=(e,t)=>{e&&e.complete&&(e.width/e.height>e.parentElement.offsetWidth/e.parentElement.offsetHeight?(e.classList.remove(...t.imgFullWidth.split(" ")),e.classList.add(...t.imgFullHeight.split(" "))):(e.classList.remove(...t.imgFullHeight.split(" ")),e.classList.add(...t.imgFullWidth.split(" "))))};function ensureImageCover(e,t){e&&(e.complete?fit(e,t):e.addEventListener("load",()=>{fit(e,t)}))}const GridListTile=React.forwardRef(function(e,t){const{children:s,classes:i,className:o,cols:r=1,component:l="li",rows:n=1}=e,c=_objectWithoutPropertiesLoose(e,["children","classes","className","cols","component","rows"]),a=React.useRef(null);return React.useEffect(()=>{ensureImageCover(a.current,i)}),React.useEffect(()=>{const e=debounce(()=>{fit(a.current,i)});return window.addEventListener("resize",e),()=>{e.clear(),window.removeEventListener("resize",e)}},[i]),React.createElement(l,_extends({className:clsx(i.root,o),ref:t},c),React.createElement("div",{className:i.tile},React.Children.map(s,e=>React.isValidElement(e)?"img"===e.type||isMuiElement(e,["Image"])?React.cloneElement(e,{ref:a}):e:null)))});"production"!==process.env.NODE_ENV&&(GridListTile.propTypes={children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,cols:PropTypes.number,component:PropTypes.elementType,rows:PropTypes.number});export default withStyles(styles,{name:"MuiGridListTile"})(GridListTile);