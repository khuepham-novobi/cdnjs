import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import debounce from"../utils/debounce";import useForkRef from"../utils/useForkRef";function getStyleValue(e,t){return parseInt(e[t],10)||0}const useEnhancedEffect="undefined"!=typeof window?React.useLayoutEffect:React.useEffect,styles={shadow:{visibility:"hidden",position:"absolute",overflow:"hidden",height:0,top:0,left:0,transform:"translateZ(0)"}},TextareaAutosize=React.forwardRef(function(e,t){const{onChange:r,rows:o,rowsMax:s,rowsMin:n=1,style:a,value:l}=e,u=_objectWithoutPropertiesLoose(e,["onChange","rows","rowsMax","rowsMin","style","value"]),i=o||n,{current:p}=React.useRef(null!=l),c=React.useRef(null),d=useForkRef(t,c),f=React.useRef(null),y=React.useRef(0),[h,m]=React.useState({}),b=React.useCallback(()=>{const t=c.current,r=window.getComputedStyle(t),o=f.current;o.style.width=r.width,o.value=t.value||e.placeholder||"x","\n"===o.value.slice(-1)&&(o.value+=" ");const n=r["box-sizing"],a=getStyleValue(r,"padding-bottom")+getStyleValue(r,"padding-top"),l=getStyleValue(r,"border-bottom-width")+getStyleValue(r,"border-top-width"),u=o.scrollHeight-a;o.value="x";const p=o.scrollHeight-a;let d=u;i&&(d=Math.max(Number(i)*p,d)),s&&(d=Math.min(Number(s)*p,d));const h=(d=Math.max(d,p))+("border-box"===n?a+l:0),b=Math.abs(d-u)<=1;m(e=>y.current<20&&(h>0&&Math.abs((e.outerHeightStyle||0)-h)>1||e.overflow!==b)?(y.current+=1,{overflow:b,outerHeightStyle:h}):("production"!==process.env.NODE_ENV&&20===y.current&&console.error(["Material-UI: Too many re-renders. The layout is unstable.","TextareaAutosize limits the number of renders to prevent an infinite loop."].join("\n")),e))},[s,i,e.placeholder]);React.useEffect(()=>{const e=debounce(()=>{y.current=0,b()});return window.addEventListener("resize",e),()=>{e.clear(),window.removeEventListener("resize",e)}},[b]),useEnhancedEffect(()=>{b()}),React.useEffect(()=>{y.current=0},[l]);return React.createElement(React.Fragment,null,React.createElement("textarea",_extends({value:l,onChange:e=>{y.current=0,p||b(),r&&r(e)},ref:d,rows:i,style:_extends({height:h.outerHeightStyle,overflow:h.overflow?"hidden":null},a)},u)),React.createElement("textarea",{"aria-hidden":!0,className:e.className,readOnly:!0,ref:f,tabIndex:-1,style:_extends({},styles.shadow,a)}))});"production"!==process.env.NODE_ENV&&(TextareaAutosize.propTypes={className:PropTypes.string,onChange:PropTypes.func,placeholder:PropTypes.string,rows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),rowsMax:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),rowsMin:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),style:PropTypes.object,value:PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string),PropTypes.number,PropTypes.string])});export default TextareaAutosize;