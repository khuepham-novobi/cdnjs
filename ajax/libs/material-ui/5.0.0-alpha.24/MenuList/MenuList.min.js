import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import ownerDocument from"../utils/ownerDocument";import List from"../List";import getScrollbarSize from"../utils/getScrollbarSize";import useForkRef from"../utils/useForkRef";import useEnhancedEffect from"../utils/useEnhancedEffect";function nextItem(e,t,r){return e===t?e.firstChild:t&&t.nextElementSibling?t.nextElementSibling:r?null:e.firstChild}function previousItem(e,t,r){return e===t?r?e.firstChild:e.lastChild:t&&t.previousElementSibling?t.previousElementSibling:r?null:e.lastChild}function textCriteriaMatches(e,t){if(void 0===t)return!0;let r=e.innerText;return void 0===r&&(r=e.textContent),0!==(r=r.trim().toLowerCase()).length&&(t.repeating?r[0]===t.keys[0]:0===r.indexOf(t.keys.join("")))}function moveFocus(e,t,r,o,n,s){let i=!1,a=n(e,t,!!t&&r);for(;a;){if(a===e.firstChild){if(i)return;i=!0}const t=!o&&(a.disabled||"true"===a.getAttribute("aria-disabled"));if(a.hasAttribute("tabindex")&&textCriteriaMatches(a,s)&&!t)return void a.focus();a=n(e,a,r)}}const MenuList=React.forwardRef(function(e,t){const{actions:r,autoFocus:o=!1,autoFocusItem:n=!1,children:s,className:i,disabledItemsFocusable:a=!1,disableListWrap:c=!1,onKeyDown:l,variant:u="selectedMenu"}=e,p=_objectWithoutPropertiesLoose(e,["actions","autoFocus","autoFocusItem","children","className","disabledItemsFocusable","disableListWrap","onKeyDown","variant"]),m=React.useRef(null),d=React.useRef({keys:[],repeating:!0,previousKeyMatched:!0,lastTime:null});useEnhancedEffect(()=>{o&&m.current.focus()},[o]),React.useImperativeHandle(r,()=>({adjustStyleForScrollbar:(e,t)=>{const r=!m.current.style.width;if(e.clientHeight<m.current.clientHeight&&r){const r=`${getScrollbarSize(ownerDocument(e))}px`;m.current.style["rtl"===t.direction?"paddingLeft":"paddingRight"]=r,m.current.style.width=`calc(100% + ${r})`}return m.current}}),[]);const f=useForkRef(m,t);let h=-1;React.Children.forEach(s,(e,t)=>{React.isValidElement(e)&&("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Menu component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),e.props.disabled||("selectedMenu"===u&&e.props.selected?h=t:-1===h&&(h=t)))});const b=React.Children.map(s,(e,t)=>{if(t===h){const t={};return n&&(t.autoFocus=!0),void 0===e.props.tabIndex&&"selectedMenu"===u&&(t.tabIndex=0),React.cloneElement(e,t)}return e});return React.createElement(List,_extends({role:"menu",ref:f,className:i,onKeyDown:e=>{const t=m.current,r=e.key,o=ownerDocument(t).activeElement;if("ArrowDown"===r)e.preventDefault(),moveFocus(t,o,c,a,nextItem);else if("ArrowUp"===r)e.preventDefault(),moveFocus(t,o,c,a,previousItem);else if("Home"===r)e.preventDefault(),moveFocus(t,null,c,a,nextItem);else if("End"===r)e.preventDefault(),moveFocus(t,null,c,a,previousItem);else if(1===r.length){const n=d.current,s=r.toLowerCase(),i=performance.now();n.keys.length>0&&(i-n.lastTime>500?(n.keys=[],n.repeating=!0,n.previousKeyMatched=!0):n.repeating&&s!==n.keys[0]&&(n.repeating=!1)),n.lastTime=i,n.keys.push(s);const c=o&&!n.repeating&&textCriteriaMatches(o,n);n.previousKeyMatched&&(c||moveFocus(t,o,!1,a,nextItem,n))?e.preventDefault():n.previousKeyMatched=!1}l&&l(e)},tabIndex:o?0:-1},p),b)});"production"!==process.env.NODE_ENV&&(MenuList.propTypes={autoFocus:PropTypes.bool,autoFocusItem:PropTypes.bool,children:PropTypes.node,className:PropTypes.string,disabledItemsFocusable:PropTypes.bool,disableListWrap:PropTypes.bool,onKeyDown:PropTypes.func,variant:PropTypes.oneOf(["menu","selectedMenu"])});export default MenuList;