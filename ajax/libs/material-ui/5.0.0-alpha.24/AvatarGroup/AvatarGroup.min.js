import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import{isFragment}from"react-is";import clsx from"clsx";import{chainPropTypes,deepmerge}from"@material-ui/utils";import{unstable_composeClasses as composeClasses}from"@material-ui/unstyled";import experimentalStyled from"../styles/experimentalStyled";import useThemeProps from"../styles/useThemeProps";import Avatar from"../Avatar";import avatarGroupClasses,{getAvatarGroupUtilityClass}from"./avatarGroupClasses";const SPACINGS={small:-16,medium:null},overridesResolver=(e,r)=>deepmerge(r.root||{},{[`& .${avatarGroupClasses.avatar}`]:r.avatar}),useUtilityClasses=e=>{const{classes:r}=e;return composeClasses({root:["root"],avatar:["avatar"]},getAvatarGroupUtilityClass,r)},AvatarGroupRoot=experimentalStyled("div",{},{name:"MuiAvatarGroup",slot:"Root",overridesResolver:overridesResolver})(({theme:e})=>({"& .MuiAvatar-root":{border:`2px solid ${e.palette.background.default}`,boxSizing:"content-box",marginLeft:-8,"&:last-child":{marginLeft:0}},display:"flex",flexDirection:"row-reverse"})),AvatarGroupAvatar=experimentalStyled(Avatar,{},{name:"MuiAvatarGroup",slot:"Avatar"})(({theme:e})=>({border:`2px solid ${e.palette.background.default}`,boxSizing:"content-box",marginLeft:-8,"&:last-child":{marginLeft:0}})),AvatarGroup=React.forwardRef(function(e,r){const a=useThemeProps({props:e,name:"MuiAvatarGroup"}),{children:t,className:o,max:s=5,spacing:p="medium",variant:i="circular"}=a,l=_objectWithoutPropertiesLoose(a,["children","className","max","spacing","variant"]),n=s<2?2:s,m=_extends({},a,{max:s,spacing:p,variant:i}),c=useUtilityClasses(m),u=React.Children.toArray(t).filter(e=>("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),React.isValidElement(e))),v=u.length>n?u.length-n+1:0,d=p&&void 0!==SPACINGS[p]?SPACINGS[p]:-p;return React.createElement(AvatarGroupRoot,_extends({styleProps:m,className:clsx(c.root,o),ref:r},l),v?React.createElement(AvatarGroupAvatar,{styleProps:m,className:c.avatar,style:{marginLeft:d},variant:i},"+",v):null,u.slice(0,u.length-v).reverse().map(e=>React.cloneElement(e,{className:clsx(e.props.className,c.avatar),style:_extends({marginLeft:d},e.props.style),variant:e.props.variant||i})))});"production"!==process.env.NODE_ENV&&(AvatarGroup.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,max:chainPropTypes(PropTypes.number,e=>{if(e.max<2)throw new Error(["Material-UI: The prop `max` should be equal to 2 or above.","A value below is clamped to 2."].join("\n"))}),spacing:PropTypes.oneOfType([PropTypes.oneOf(["medium","small"]),PropTypes.number]),sx:PropTypes.object,variant:PropTypes.oneOfType([PropTypes.oneOf(["circular","rounded","square"]),PropTypes.string])});export default AvatarGroup;