import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import styled from"@material-ui/styled-engine";import{propsToClassKey}from"@material-ui/styles";import{unstable_styleFunctionSx as styleFunctionSx}from"@material-ui/system";import defaultTheme from"./defaultTheme";function isEmpty(e){return 0===Object.keys(e).length}const getStyleOverrides=(e,t)=>t.components&&t.components[e]&&t.components[e].styleOverrides?t.components[e].styleOverrides:null,getVariantStyles=(e,t)=>{let s=[];t&&t.components&&t.components[e]&&t.components[e].variants&&(s=t.components[e].variants);const o={};return s.forEach(e=>{const t=propsToClassKey(e.props);o[t]=e.style}),o},variantsResolver=(e,t,s,o)=>{var r,n;const{styleProps:l={}}=e;let i={};const a=null==s?void 0:null===(r=s.components)||void 0===r?void 0:null===(n=r[o])||void 0===n?void 0:n.variants;return a&&a.forEach(s=>{let o=!0;Object.keys(s.props).forEach(t=>{l[t]!==s.props[t]&&e[t]!==s.props[t]&&(o=!1)}),o&&(i=_extends({},i,t[propsToClassKey(s.props)]))}),i};export const shouldForwardProp=e=>"styleProps"!==e&&"theme"!==e&&"isRtl"!==e&&"sx"!==e&&"as"!==e&&"classes"!==e;const lowercaseFirstLetter=e=>e.charAt(0).toLowerCase()+e.slice(1),experimentalStyled=(e,t,s={})=>{const o=s.name,r=s.slot,n=s.overridesResolver,l=s.skipVariantsResolver||!1,i=s.skipSx||!1;let a,m,p;o&&(a=`${o}${r||""}`,m=r&&"Root"!==r?null:`${o}`,p=`${o}-${lowercaseFirstLetter(r||"Root")}`);const u=styled(e,_extends({shouldForwardProp:shouldForwardProp,label:p||o||""},t));return(e,...t)=>{const s=t?t.map(e=>"function"==typeof e?t=>{let{theme:s}=t,o=_objectWithoutPropertiesLoose(t,["theme"]);return e(_extends({theme:isEmpty(s)?defaultTheme:s},o))}:e):[];let o=e;m&&n&&s.push(e=>{const t=isEmpty(e.theme)?defaultTheme:e.theme,s=getStyleOverrides(m,t);return s?n(e,s):null}),m&&!l&&s.push(e=>{const t=isEmpty(e.theme)?defaultTheme:e.theme;return variantsResolver(e,getVariantStyles(m,t),t,m)}),i||s.push(e=>{const t=isEmpty(e.theme)?defaultTheme:e.theme;return styleFunctionSx(_extends({},e,{theme:t}))});const r=s.length-t.length;if(Array.isArray(e)&&r>0){const t=new Array(r).fill("");(o=[...e,...t]).raw=[...e.raw,...t]}else"function"==typeof e&&(o=(t=>{let{theme:s}=t,o=_objectWithoutPropertiesLoose(t,["theme"]);return e(_extends({theme:isEmpty(s)?defaultTheme:s},o))}));const p=u(o,...s);return(a||m)&&(p.displayName=a||m),p}};export default experimentalStyled;