"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=createPalette,exports.dark=exports.light=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends")),_objectWithoutPropertiesLoose2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose")),_utils=require("@material-ui/utils"),_common=_interopRequireDefault(require("../colors/common")),_grey=_interopRequireDefault(require("../colors/grey")),_indigo=_interopRequireDefault(require("../colors/indigo")),_pink=_interopRequireDefault(require("../colors/pink")),_red=_interopRequireDefault(require("../colors/red")),_orange=_interopRequireDefault(require("../colors/orange")),_blue=_interopRequireDefault(require("../colors/blue")),_green=_interopRequireDefault(require("../colors/green")),_colorManipulator=require("./colorManipulator");const light={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.54)",disabled:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:_common.default.white,default:_grey.default[50]},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}};exports.light=light;const dark={text:{primary:_common.default.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:_grey.default[800],default:"#303030"},action:{active:_common.default.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function addLightOrDark(e,r,t,a){const o=a.light||a,i=a.dark||1.5*a;e[r]||(e.hasOwnProperty(t)?e[r]=e[t]:"light"===r?e.light=(0,_colorManipulator.lighten)(e.main,o):"dark"===r&&(e.dark=(0,_colorManipulator.darken)(e.main,i)))}function createPalette(e){const{primary:r={light:_indigo.default[300],main:_indigo.default[500],dark:_indigo.default[700]},secondary:t={light:_pink.default.A200,main:_pink.default.A400,dark:_pink.default.A700},error:a={light:_red.default[300],main:_red.default[500],dark:_red.default[700]},warning:o={light:_orange.default[300],main:_orange.default[500],dark:_orange.default[700]},info:i={light:_blue.default[300],main:_blue.default[500],dark:_blue.default[700]},success:n={light:_green.default[300],main:_green.default[500],dark:_green.default[700]},mode:l="light",contrastThreshold:d=3,tonalOffset:u=.2}=e,s=(0,_objectWithoutPropertiesLoose2.default)(e,["primary","secondary","error","warning","info","success","mode","contrastThreshold","tonalOffset"]);function c(e){const r=(0,_colorManipulator.getContrastRatio)(e,dark.text.primary)>=d?dark.text.primary:light.text.primary;if("production"!==process.env.NODE_ENV){const t=(0,_colorManipulator.getContrastRatio)(e,r);t<3&&console.error([`Material-UI: The contrast ratio of ${t}:1 for ${r} on ${e}`,"falls below the WCAG recommended absolute minimum contrast ratio of 3:1.","https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join("\n"))}return r}const g=({color:e,name:r,mainShade:t=500,lightShade:a=300,darkShade:o=700})=>{if(!(e=(0,_extends2.default)({},e)).main&&e[t]&&(e.main=e[t]),!e.hasOwnProperty("main"))throw new Error("production"!==process.env.NODE_ENV?`Material-UI: The color${r?` (${r})`:""} provided to augmentColor(color) is invalid.\nThe color object needs to have a \`main\` property or a \`${t}\` property.`:(0,_utils.formatMuiErrorMessage)(11,r?` (${r})`:"",t));if("string"!=typeof e.main)throw new Error("production"!==process.env.NODE_ENV?`Material-UI: The color${r?` (${r})`:""} provided to augmentColor(color) is invalid.\n\`color.main\` should be a string, but \`${JSON.stringify(e.main)}\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from "@material-ui/core/colors";\n\nconst theme1 = createMuiTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createMuiTheme({ palette: {\n  primary: { main: green[500] },\n} });`:(0,_utils.formatMuiErrorMessage)(12,r?` (${r})`:"",JSON.stringify(e.main)));return addLightOrDark(e,"light",a,u),addLightOrDark(e,"dark",o,u),e.contrastText||(e.contrastText=c(e.main)),e},p={dark:dark,light:light};return"production"!==process.env.NODE_ENV&&(p[l]||console.error(`Material-UI: The palette mode \`${l}\` is not supported.`)),(0,_utils.deepmerge)((0,_extends2.default)({common:_common.default,mode:l,primary:g({color:r,name:"primary"}),secondary:g({color:t,name:"secondary",mainShade:"A400",lightShade:"A200",darkShade:"A700"}),error:g({color:a,name:"error"}),warning:g({color:o,name:"warning"}),info:g({color:i,name:"info"}),success:g({color:n,name:"succes"}),grey:_grey.default,contrastThreshold:d,getContrastText:c,augmentColor:g,tonalOffset:u},p[l]),s)}exports.dark=dark;