"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.ariaHidden=ariaHidden,exports.default=void 0;var _getScrollbarSize=_interopRequireDefault(require("../utils/getScrollbarSize")),_ownerDocument=_interopRequireDefault(require("../utils/ownerDocument")),_ownerWindow=_interopRequireDefault(require("../utils/ownerWindow"));function isOverflowing(e){const t=(0,_ownerDocument.default)(e);return t.body===e?(0,_ownerWindow.default)(e).innerWidth>t.documentElement.clientWidth:e.scrollHeight>e.clientHeight}function ariaHidden(e,t){t?e.setAttribute("aria-hidden","true"):e.removeAttribute("aria-hidden")}function getPaddingRight(e){return parseInt((0,_ownerWindow.default)(e).getComputedStyle(e).paddingRight,10)||0}function ariaHiddenSiblings(e,t,i,n=[],r){const o=[t,i,...n],d=["TEMPLATE","SCRIPT","STYLE"];[].forEach.call(e.children,e=>{-1===o.indexOf(e)&&-1===d.indexOf(e.tagName)&&ariaHidden(e,r)})}function findIndexOf(e,t){let i=-1;return e.some((e,n)=>!!t(e)&&(i=n,!0)),i}function handleContainer(e,t){const i=[],n=e.container;if(!t.disableScrollLock){if(isOverflowing(n)){const e=(0,_getScrollbarSize.default)((0,_ownerDocument.default)(n));i.push({value:n.style.paddingRight,property:"padding-right",el:n}),n.style.paddingRight=`${getPaddingRight(n)+e}px`;const t=(0,_ownerDocument.default)(n).querySelectorAll(".mui-fixed");[].forEach.call(t,t=>{i.push({value:t.style.paddingRight,property:"padding-right",el:t}),t.style.paddingRight=`${getPaddingRight(t)+e}px`})}const e=n.parentElement,t=(0,_ownerWindow.default)(n),r="HTML"===(null==e?void 0:e.nodeName)&&"scroll"===t.getComputedStyle(e).overflowY?e:n;i.push({value:r.style.overflow,property:"overflow",el:r}),r.style.overflow="hidden"}return()=>{i.forEach(({value:e,el:t,property:i})=>{e?t.style.setProperty(i,e):t.style.removeProperty(i)})}}function getHiddenSiblings(e){const t=[];return[].forEach.call(e.children,e=>{"true"===e.getAttribute("aria-hidden")&&t.push(e)}),t}class ModalManager{constructor(){this.containers=void 0,this.modals=void 0,this.modals=[],this.containers=[]}add(e,t){let i=this.modals.indexOf(e);if(-1!==i)return i;i=this.modals.length,this.modals.push(e),e.modalRef&&ariaHidden(e.modalRef,!1);const n=getHiddenSiblings(t);ariaHiddenSiblings(t,e.mount,e.modalRef,n,!0);const r=findIndexOf(this.containers,e=>e.container===t);return-1!==r?(this.containers[r].modals.push(e),i):(this.containers.push({modals:[e],container:t,restore:null,hiddenSiblings:n}),i)}mount(e,t){const i=findIndexOf(this.containers,t=>-1!==t.modals.indexOf(e)),n=this.containers[i];n.restore||(n.restore=handleContainer(n,t))}remove(e){const t=this.modals.indexOf(e);if(-1===t)return t;const i=findIndexOf(this.containers,t=>-1!==t.modals.indexOf(e)),n=this.containers[i];if(n.modals.splice(n.modals.indexOf(e),1),this.modals.splice(t,1),0===n.modals.length)n.restore&&n.restore(),e.modalRef&&ariaHidden(e.modalRef,!0),ariaHiddenSiblings(n.container,e.mount,e.modalRef,n.hiddenSiblings,!1),this.containers.splice(i,1);else{const e=n.modals[n.modals.length-1];e.modalRef&&ariaHidden(e.modalRef,!1)}return t}isTopModal(e){return this.modals.length>0&&this.modals[this.modals.length-1]===e}}exports.default=ModalManager;