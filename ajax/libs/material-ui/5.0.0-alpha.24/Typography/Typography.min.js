import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{deepmerge}from"@material-ui/utils";import{unstable_composeClasses as composeClasses}from"@material-ui/unstyled";import experimentalStyled from"../styles/experimentalStyled";import useThemeProps from"../styles/useThemeProps";import capitalize from"../utils/capitalize";import{getTypographyUtilityClass}from"./typographyClasses";const getTextColor=(e,t)=>0===e.indexOf("text")?t.text[e.split("text").pop().toLowerCase()]:"inherit"===e||"initial"===e?e:t[e].main,overridesResolver=(e,t)=>{const{styleProps:o}=e;return deepmerge(t.root||{},_extends({},o.variant&&t[o.variant],o.color&&t[`color${capitalize(o.color)}`],o.align&&t[`align${capitalize(o.align)}`],o.display&&t[`display${capitalize(o.display)}`],o.noWrap&&t.noWrap,o.gutterBottom&&t.gutterBottom,o.paragraph&&t.paragraph))};export const TypographyRoot=experimentalStyled("span",{},{name:"MuiTypography",slot:"Root",overridesResolver:overridesResolver})(({theme:e,styleProps:t})=>_extends({margin:0},t.variant&&e.typography[t.variant],"inherit"!==t.align&&{textAlign:t.align},t.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},t.gutterBottom&&{marginBottom:"0.35em"},t.paragraph&&{marginBottom:16},t.color&&"initial"!==t.color&&{color:getTextColor(t.color,e.palette)},"initial"!==t.display&&{display:t.display}));const defaultVariantMapping={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},useUtilityClasses=e=>{const{align:t,color:o,display:r,gutterBottom:a,noWrap:p,paragraph:i,variant:s,classes:l}=e,n={root:["root",s,`color${capitalize(o)}`,`align${capitalize(t)}`,`display${capitalize(r)}`,a&&"gutterBottom",p&&"noWrap",i&&"paragraph"]};return composeClasses(n,getTypographyUtilityClass,l)},Typography=React.forwardRef(function(e,t){const o=useThemeProps({props:e,name:"MuiTypography"}),{align:r="inherit",className:a,color:p="initial",component:i,display:s="initial",gutterBottom:l=!1,noWrap:n=!1,paragraph:y=!1,variant:m="body1",variantMapping:c=defaultVariantMapping}=o,g=_objectWithoutPropertiesLoose(o,["align","className","color","component","display","gutterBottom","noWrap","paragraph","variant","variantMapping"]),h=_extends({},o,{align:r,className:a,color:p,component:i,display:s,gutterBottom:l,noWrap:n,paragraph:y,variant:m,variantMapping:c}),d=i||(y?"p":c[m]||defaultVariantMapping[m])||"span",u=useUtilityClasses(h);return React.createElement(TypographyRoot,_extends({as:d,ref:t,styleProps:h,className:clsx(u.root,a)},g))});"production"!==process.env.NODE_ENV&&(Typography.propTypes={align:PropTypes.oneOf(["center","inherit","justify","left","right"]),children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,color:PropTypes.oneOf(["error","inherit","initial","primary","secondary","textPrimary","textSecondary"]),component:PropTypes.elementType,display:PropTypes.oneOf(["block","initial","inline"]),gutterBottom:PropTypes.bool,noWrap:PropTypes.bool,paragraph:PropTypes.bool,sx:PropTypes.object,variant:PropTypes.oneOfType([PropTypes.oneOf(["body1","body2","button","caption","h1","h2","h3","h4","h5","h6","inherit","overline","subtitle1","subtitle2"]),PropTypes.string]),variantMapping:PropTypes.object});export default Typography;