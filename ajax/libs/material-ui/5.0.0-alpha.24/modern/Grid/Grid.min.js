import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{deepmerge}from"@material-ui/utils";import{unstable_extendSxProp as extendSxProp}from"@material-ui/system";import{unstable_composeClasses as composeClasses}from"@material-ui/unstyled";import requirePropFactory from"../utils/requirePropFactory";import experimentalStyled from"../styles/experimentalStyled";import useThemeProps from"../styles/useThemeProps";import gridClasses,{getGridUtilityClass}from"./gridClasses";function getOffset(e){const r=parseFloat(e);return`${r}${String(e).replace(String(r),"")||"px"}`}function generateGrid(e,r,o,t){const s=t[o];if(!s)return;let i={};if(!0===s)i={flexBasis:0,flexGrow:1,maxWidth:"100%"};else if("auto"===s)i={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else{const e=`${Math.round(s/12*1e8)/1e6}%`;let o={};if(t.container&&t.item&&0!==t.spacing){const s=r.spacing(t.spacing);if("0px"!==s){const r=`calc(${e} + ${getOffset(s)})`;o={flexBasis:r,maxWidth:r}}}i=_extends({flexBasis:e,flexGrow:0,maxWidth:e},o)}0===r.breakpoints.values[o]?Object.assign(e,i):e[r.breakpoints.up(o)]=i}function generateGap({theme:e,styleProps:r}){const{container:o,spacing:t}=r;let s={};if(o&&0!==t){const r=e.spacing(t);"0px"!==r&&(s={width:`calc(100% + ${getOffset(r)})`,marginTop:`-${getOffset(r)}`,marginLeft:`-${getOffset(r)}`,[`& > .${gridClasses.item}`]:{paddingTop:getOffset(r),paddingLeft:getOffset(r)}})}return s}const overridesResolver=(e,r)=>{const{container:o,direction:t,item:s,lg:i,md:n,sm:p,spacing:a,wrap:l,xl:m,xs:d,zeroMinWidth:c}=e.styleProps;return deepmerge(r.root||{},_extends({},o&&r.container,s&&r.item,c&&r.zeroMinWidth,o&&0!==a&&r[`spacing-xs-${String(a)}`],"row"!==t&&r[`direction-xs-${String(t)}`],"wrap"!==l&&r[`wrap-xs-${String(l)}`],!1!==d&&r[`grid-xs-${String(d)}`],!1!==p&&r[`grid-sm-${String(p)}`],!1!==n&&r[`grid-md-${String(n)}`],!1!==i&&r[`grid-lg-${String(i)}`],!1!==m&&r[`grid-xl-${String(m)}`]))},GridRoot=experimentalStyled("div",{},{name:"MuiGrid",slot:"Root",overridesResolver:overridesResolver})(({styleProps:e})=>_extends({boxSizing:"border-box"},e.container&&{display:"flex",flexWrap:"wrap",width:"100%"},e.item&&{margin:0},e.zeroMinWidth&&{minWidth:0},"column"===e.direction&&{flexDirection:"column",[`& > .${gridClasses.item}`]:{maxWidth:"none"}},"column-reverse"===e.direction&&{flexDirection:"column-reverse",[`& > .${gridClasses.item}`]:{maxWidth:"none"}},"row-reverse"===e.direction&&{flexDirection:"row-reverse"},"nowrap"===e.wrap&&{flexWrap:"nowrap"},"reverse"===e.wrap&&{flexWrap:"wrap-reverse"}),generateGap,({theme:e,styleProps:r})=>e.breakpoints.keys.reduce((o,t)=>(generateGrid(o,e,t,r),o),{})),useUtilityClasses=e=>{const{classes:r,container:o,direction:t,item:s,lg:i,md:n,sm:p,spacing:a,wrap:l,xl:m,xs:d,zeroMinWidth:c}=e,g={root:["root",o&&"container",s&&"item",c&&"zeroMinWidth",o&&0!==a&&`spacing-xs-${String(a)}`,"row"!==t&&`direction-xs-${String(t)}`,"wrap"!==l&&`wrap-xs-${String(l)}`,!1!==d&&`grid-xs-${String(d)}`,!1!==p&&`grid-sm-${String(p)}`,!1!==n&&`grid-md-${String(n)}`,!1!==i&&`grid-lg-${String(i)}`,!1!==m&&`grid-xl-${String(m)}`]};return composeClasses(g,getGridUtilityClass,r)},Grid=React.forwardRef(function(e,r){const o=useThemeProps({props:e,name:"MuiGrid"}),t=extendSxProp(o),{className:s,component:i="div",container:n=!1,direction:p="row",item:a=!1,lg:l=!1,md:m=!1,sm:d=!1,spacing:c=0,wrap:g="wrap",xl:f=!1,xs:x=!1,zeroMinWidth:y=!1}=t,u=_objectWithoutPropertiesLoose(t,["className","component","container","direction","item","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),P=_extends({},t,{container:n,direction:p,item:a,lg:l,md:m,sm:d,spacing:c,wrap:g,xl:f,xs:x,zeroMinWidth:y}),T=useUtilityClasses(P);return React.createElement(GridRoot,_extends({styleProps:P,className:clsx(T.root,s),as:i,ref:r},u))});if("production"!==process.env.NODE_ENV&&(Grid.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,component:PropTypes.elementType,container:PropTypes.bool,direction:PropTypes.oneOf(["column-reverse","column","row-reverse","row"]),item:PropTypes.bool,lg:PropTypes.oneOfType([PropTypes.oneOf(["auto",1,2,3,4,5,6,7,8,9,10,11,12]),PropTypes.bool]),md:PropTypes.oneOfType([PropTypes.oneOf(["auto",1,2,3,4,5,6,7,8,9,10,11,12]),PropTypes.bool]),sm:PropTypes.oneOfType([PropTypes.oneOf(["auto",1,2,3,4,5,6,7,8,9,10,11,12]),PropTypes.bool]),spacing:PropTypes.oneOf([0,1,2,3,4,5,6,7,8,9,10]),sx:PropTypes.object,wrap:PropTypes.oneOf(["nowrap","wrap-reverse","wrap"]),xl:PropTypes.oneOfType([PropTypes.oneOf(["auto",1,2,3,4,5,6,7,8,9,10,11,12]),PropTypes.bool]),xs:PropTypes.oneOfType([PropTypes.oneOf(["auto",1,2,3,4,5,6,7,8,9,10,11,12]),PropTypes.bool]),zeroMinWidth:PropTypes.bool}),"production"!==process.env.NODE_ENV){const e=requirePropFactory("Grid",Grid);Grid.propTypes=_extends({},Grid.propTypes,{direction:e("container"),lg:e("item"),md:e("item"),sm:e("item"),spacing:e("container"),wrap:e("container"),xs:e("item"),zeroMinWidth:e("item")})}export default Grid;