import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{withStyles}from"../styles";import{capitalize}from"../utils";import isValueSelected from"./isValueSelected";export const styles=e=>({root:{display:"inline-flex",borderRadius:e.shape.borderRadius},vertical:{flexDirection:"column"},grouped:{},groupedHorizontal:{"&:not(:first-child)":{marginLeft:-1,borderLeft:"1px solid transparent",borderTopLeftRadius:0,borderBottomLeftRadius:0},"&:not(:last-child)":{borderTopRightRadius:0,borderBottomRightRadius:0},"&.Mui-selected + &.Mui-selected":{borderLeft:0,marginLeft:0}},groupedVertical:{"&:not(:first-child)":{marginTop:-1,borderTop:"1px solid transparent",borderTopLeftRadius:0,borderTopRightRadius:0},"&:not(:last-child)":{borderBottomLeftRadius:0,borderBottomRightRadius:0},"&.Mui-selected + &.Mui-selected":{borderTop:0,marginTop:0}}});const ToggleButtonGroup=React.forwardRef(function(e,o){const{children:t,classes:r,className:s,exclusive:i=!1,onChange:a,orientation:l="horizontal",size:n="medium",value:p}=e,c=_objectWithoutPropertiesLoose(e,["children","classes","className","exclusive","onChange","orientation","size","value"]),d=(e,o)=>{if(!a)return;const t=p&&p.indexOf(o);let r;p&&t>=0?(r=p.slice()).splice(t,1):r=p?p.concat(o):[o],a(e,r)},u=(e,o)=>{a&&a(e,p===o?null:o)};return React.createElement("div",_extends({role:"group",className:clsx(r.root,s,"vertical"===l&&r.vertical),ref:o},c),React.Children.map(t,e=>React.isValidElement(e)?("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),React.cloneElement(e,{className:clsx(r.grouped,r[`grouped${capitalize(l)}`],e.props.className),onChange:i?u:d,selected:void 0===e.props.selected?isValueSelected(e.props.value,p):e.props.selected,size:e.props.size||n})):null))});"production"!==process.env.NODE_ENV&&(ToggleButtonGroup.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,exclusive:PropTypes.bool,onChange:PropTypes.func,orientation:PropTypes.oneOf(["horizontal","vertical"]),size:PropTypes.oneOf(["large","medium","small"]),value:PropTypes.any});export default withStyles(styles,{name:"MuiToggleButtonGroup"})(ToggleButtonGroup);