import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{unstable_composeClasses as composeClasses}from"@material-ui/unstyled";import{deepmerge,chainPropTypes,elementTypeAcceptingRef}from"@material-ui/utils";import experimentalStyled from"../styles/experimentalStyled";import useThemeProps from"../styles/useThemeProps";import{alpha}from"../styles/colorManipulator";import ButtonBase from"../ButtonBase";import isMuiElement from"../utils/isMuiElement";import useEnhancedEffect from"../utils/useEnhancedEffect";import useForkRef from"../utils/useForkRef";import ListContext from"../List/ListContext";import listItemClasses,{getListItemUtilityClass}from"./listItemClasses";const overridesResolver=(e,t)=>{const{styleProps:s}=e;return deepmerge(t.root||{},_extends({},s.dense&&t.dense,"flex-start"===s.alignItems&&t.alignItemsFlexStart,s.divider&&t.divider,!s.disableGutters&&t.gutters,s.button&&t.button,s.hasSecondaryAction&&t.secondaryAction))},useUtilityClasses=e=>{const{dense:t,alignItems:s,divider:o,disableGutters:i,hasSecondaryAction:r,selected:a,disabled:n,button:l,classes:c}=e;return composeClasses({root:["root",t&&"dense",!i&&"gutters",o&&"divider",n&&"disabled",l&&"button","flex-start"===s&&"alignItemsFlexStart",r&&"secondaryAction",a&&"selected"],container:["container"]},getListItemUtilityClass,c)},ListItemRoot=experimentalStyled("div",{},{name:"MuiListItem",slot:"Root",overridesResolver:overridesResolver})(({theme:e,styleProps:t})=>_extends({display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",width:"100%",boxSizing:"border-box",textAlign:"left",paddingTop:8,paddingBottom:8,[`&.${listItemClasses.focusVisible}`]:{backgroundColor:e.palette.action.focus},[`&.${listItemClasses.selected}`]:{backgroundColor:alpha(e.palette.primary.main,e.palette.action.selectedOpacity),[`&.${listItemClasses.focusVisible}`]:{backgroundColor:alpha(e.palette.primary.main,e.palette.action.selectedOpacity+e.palette.action.focusOpacity)}},[`&.${listItemClasses.disabled}`]:{opacity:e.palette.action.disabledOpacity}},t.dense&&{paddingTop:4,paddingBottom:4},"flex-start"===t.alignItems&&{alignItems:"flex-start"},t.divider&&{borderBottom:`1px solid ${e.palette.divider}`,backgroundClip:"padding-box"},!t.disableGutters&&{paddingLeft:16,paddingRight:16},t.button&&{transition:e.transitions.create("background-color",{duration:e.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:e.palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${listItemClasses.selected}:hover`]:{backgroundColor:alpha(e.palette.primary.main,e.palette.action.selectedOpacity+e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:alpha(e.palette.primary.main,e.palette.action.selectedOpacity)}}},t.hasSecondaryAction&&{paddingRight:48})),ListItemContainer=experimentalStyled("li",{},{name:"MuiListItem",slot:"Container",overridesResolver:overridesResolver})({position:"relative"}),ListItem=React.forwardRef(function(e,t){const s=useThemeProps({props:e,name:"MuiListItem"}),{alignItems:o="center",autoFocus:i=!1,button:r=!1,children:a,className:n,component:l,ContainerComponent:c="li",ContainerProps:{className:d}={},dense:p=!1,disabled:m=!1,disableGutters:u=!1,divider:b=!1,focusVisibleClassName:y,selected:f=!1}=s,h=_objectWithoutPropertiesLoose(s.ContainerProps,["className"]),C=_objectWithoutPropertiesLoose(s,["alignItems","autoFocus","button","children","className","component","ContainerComponent","ContainerProps","dense","disabled","disableGutters","divider","focusVisibleClassName","selected"]),g=React.useContext(ListContext),x={dense:p||g.dense||!1,alignItems:o,disableGutters:u},I=React.useRef(null);useEnhancedEffect(()=>{i&&(I.current?I.current.focus():"production"!==process.env.NODE_ENV&&console.error("Material-UI: Unable to set focus to a ListItem whose component has not been rendered."))},[i]);const v=React.Children.toArray(a),P=v.length&&isMuiElement(v[v.length-1],["ListItemSecondaryAction"]),L=_extends({},s,{alignItems:o,autoFocus:i,button:r,dense:x.dense,disabled:m,disableGutters:u,divider:b,hasSecondaryAction:P,selected:f}),R=useUtilityClasses(L),T=useForkRef(I,t),E=_extends({className:clsx(R.root,n),disabled:m},C);let N=l||"li";return r&&(E.component=l||"div",E.focusVisibleClassName=clsx(listItemClasses.focusVisible,y),N=ButtonBase),P?(N=E.component||l?N:"div","li"===c&&("li"===N?N="div":"li"===E.component&&(E.component="div")),React.createElement(ListContext.Provider,{value:x},React.createElement(ListItemContainer,_extends({as:c,className:clsx(R.container,d),ref:T},h),React.createElement(ListItemRoot,_extends({as:N,styleProps:L},E),v),v.pop()))):React.createElement(ListContext.Provider,{value:x},React.createElement(ListItemRoot,_extends({as:N,ref:T,styleProps:L},E),v))});"production"!==process.env.NODE_ENV&&(ListItem.propTypes={alignItems:PropTypes.oneOf(["center","flex-start"]),autoFocus:PropTypes.bool,button:PropTypes.bool,children:chainPropTypes(PropTypes.node,e=>{const t=React.Children.toArray(e.children);let s=-1;for(let e=t.length-1;e>=0;e-=1){const o=t[e];if(isMuiElement(o,["ListItemSecondaryAction"])){s=e;break}}return-1!==s&&s!==t.length-1?new Error("Material-UI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem."):null}),classes:PropTypes.object,className:PropTypes.string,component:PropTypes.elementType,ContainerComponent:elementTypeAcceptingRef,ContainerProps:PropTypes.object,dense:PropTypes.bool,disabled:PropTypes.bool,disableGutters:PropTypes.bool,divider:PropTypes.bool,focusVisibleClassName:PropTypes.string,selected:PropTypes.bool,sx:PropTypes.object});export default ListItem;