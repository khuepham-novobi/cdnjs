import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{alpha,withStyles}from"../styles";import ButtonBase from"../ButtonBase";import{capitalize}from"../utils";export const styles=e=>({root:_extends({},e.typography.button,{borderRadius:e.shape.borderRadius,padding:11,border:`1px solid ${alpha(e.palette.action.active,.12)}`,color:alpha(e.palette.action.active,.38),"&$selected":{color:e.palette.action.active,backgroundColor:alpha(e.palette.action.active,.12),"&:hover":{backgroundColor:alpha(e.palette.action.active,.15)}},"&$disabled":{color:alpha(e.palette.action.disabled,.12)},"&:hover":{textDecoration:"none",backgroundColor:alpha(e.palette.text.primary,.05),"@media (hover: none)":{backgroundColor:"transparent"}}}),disabled:{},selected:{},label:{width:"100%",display:"inherit",alignItems:"inherit",justifyContent:"inherit"},sizeSmall:{padding:7,fontSize:e.typography.pxToRem(13)},sizeLarge:{padding:15,fontSize:e.typography.pxToRem(15)}});const ToggleButton=React.forwardRef(function(e,o){const{children:t,classes:a,className:s,disabled:l=!1,disableFocusRipple:i=!1,onChange:r,onClick:p,selected:n,size:c="medium",value:d}=e,m=_objectWithoutPropertiesLoose(e,["children","classes","className","disabled","disableFocusRipple","onChange","onClick","selected","size","value"]);return React.createElement(ButtonBase,_extends({className:clsx(a.root,s,l&&a.disabled,n&&a.selected,"medium"!==c&&a[`size${capitalize(c)}`]),disabled:l,focusRipple:!i,ref:o,onClick:e=>{p&&(p(e,d),e.defaultPrevented)||r&&r(e,d)},onChange:r,value:d,"aria-pressed":n},m),React.createElement("span",{className:a.label},t))});"production"!==process.env.NODE_ENV&&(ToggleButton.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,disabled:PropTypes.bool,disableFocusRipple:PropTypes.bool,disableRipple:PropTypes.bool,onChange:PropTypes.func,onClick:PropTypes.func,selected:PropTypes.bool,size:PropTypes.oneOf(["large","medium","small"]),value:PropTypes.any.isRequired});export default withStyles(styles,{name:"MuiToggleButton"})(ToggleButton);