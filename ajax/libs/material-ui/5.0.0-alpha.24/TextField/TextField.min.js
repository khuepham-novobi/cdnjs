import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import Input from"../Input";import FilledInput from"../FilledInput";import OutlinedInput from"../OutlinedInput";import InputLabel from"../InputLabel";import FormControl from"../FormControl";import FormHelperText from"../FormHelperText";import Select from"../Select";import withStyles from"../styles/withStyles";const variantComponent={standard:Input,filled:FilledInput,outlined:OutlinedInput};export const styles={root:{}};const TextField=React.forwardRef(function(e,o){const{autoComplete:r,autoFocus:t=!1,children:p,classes:s,className:l,color:n="primary",defaultValue:i,disabled:a=!1,error:u=!1,FormHelperTextProps:d,fullWidth:m=!1,helperText:c,id:y,InputLabelProps:T,inputProps:P,InputProps:f,inputRef:b,label:h,maxRows:x,minRows:F,multiline:v=!1,name:R,onBlur:I,onChange:w,onFocus:g,placeholder:C,required:O=!1,rows:E,select:_=!1,SelectProps:j,type:L,value:S,variant:N="outlined"}=e,W=_objectWithoutPropertiesLoose(e,["autoComplete","autoFocus","children","classes","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","select","SelectProps","type","value","variant"]);"production"!==process.env.NODE_ENV&&_&&!p&&console.error("Material-UI: `children` must be passed when using the `TextField` component with `select`.");const H={};if("outlined"===N&&(T&&void 0!==T.shrink&&(H.notched=T.shrink),h)){var V;const e=null!==(V=null==T?void 0:T.required)&&void 0!==V?V:O;H.label=React.createElement(React.Fragment,null,h,e&&"Â *")}_&&(j&&j.native||(H.id=void 0),H["aria-describedby"]=void 0);const q=c&&y?`${y}-helper-text`:void 0,B=h&&y?`${y}-label`:void 0,k=variantComponent[N],D=React.createElement(k,_extends({"aria-describedby":q,autoComplete:r,autoFocus:t,defaultValue:i,fullWidth:m,multiline:v,name:R,rows:E,maxRows:x,minRows:F,type:L,value:S,id:y,inputRef:b,onBlur:I,onChange:w,onFocus:g,placeholder:C,inputProps:P},H,f));return React.createElement(FormControl,_extends({className:clsx(s.root,l),disabled:a,error:u,fullWidth:m,ref:o,required:O,color:n,variant:N},W),h&&React.createElement(InputLabel,_extends({htmlFor:y,id:B},T),h),_?React.createElement(Select,_extends({"aria-describedby":q,id:y,labelId:B,value:S,input:D},j),p):D,c&&React.createElement(FormHelperText,_extends({id:q},d),c))});"production"!==process.env.NODE_ENV&&(TextField.propTypes={autoComplete:PropTypes.string,autoFocus:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,color:PropTypes.oneOf(["primary","secondary"]),defaultValue:PropTypes.any,disabled:PropTypes.bool,error:PropTypes.bool,FormHelperTextProps:PropTypes.object,fullWidth:PropTypes.bool,helperText:PropTypes.node,id:PropTypes.string,InputLabelProps:PropTypes.object,inputProps:PropTypes.object,InputProps:PropTypes.object,inputRef:refType,label:PropTypes.node,margin:PropTypes.oneOf(["dense","none","normal"]),maxRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),minRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),multiline:PropTypes.bool,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onFocus:PropTypes.func,placeholder:PropTypes.string,required:PropTypes.bool,rows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),select:PropTypes.bool,SelectProps:PropTypes.object,size:PropTypes.oneOf(["medium","small"]),type:PropTypes.string,value:PropTypes.any,variant:PropTypes.oneOf(["filled","outlined","standard"])});export default withStyles(styles,{name:"MuiTextField"})(TextField);