import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{alpha,withStyles}from"../styles";import ButtonBase from"../ButtonBase";import{capitalize}from"../utils";export var styles=function(e){return{root:_extends({},e.typography.button,{borderRadius:e.shape.borderRadius,padding:11,border:"1px solid ".concat(alpha(e.palette.action.active,.12)),color:alpha(e.palette.action.active,.38),"&$selected":{color:e.palette.action.active,backgroundColor:alpha(e.palette.action.active,.12),"&:hover":{backgroundColor:alpha(e.palette.action.active,.15)}},"&$disabled":{color:alpha(e.palette.action.disabled,.12)},"&:hover":{textDecoration:"none",backgroundColor:alpha(e.palette.text.primary,.05),"@media (hover: none)":{backgroundColor:"transparent"}}}),disabled:{},selected:{},label:{width:"100%",display:"inherit",alignItems:"inherit",justifyContent:"inherit"},sizeSmall:{padding:7,fontSize:e.typography.pxToRem(13)},sizeLarge:{padding:15,fontSize:e.typography.pxToRem(15)}}};var ToggleButton=React.forwardRef(function(e,o){var t=e.children,a=e.classes,s=e.className,l=e.disabled,i=void 0!==l&&l,r=e.disableFocusRipple,p=void 0!==r&&r,n=e.onChange,c=e.onClick,d=e.selected,u=e.size,m=void 0===u?"medium":u,b=e.value,h=_objectWithoutProperties(e,["children","classes","className","disabled","disableFocusRipple","onChange","onClick","selected","size","value"]);return React.createElement(ButtonBase,_extends({className:clsx(a.root,s,i&&a.disabled,d&&a.selected,"medium"!==m&&a["size".concat(capitalize(m))]),disabled:i,focusRipple:!p,ref:o,onClick:function(e){c&&(c(e,b),e.defaultPrevented)||n&&n(e,b)},onChange:n,value:b,"aria-pressed":d},h),React.createElement("span",{className:a.label},t))});"production"!==process.env.NODE_ENV&&(ToggleButton.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,disabled:PropTypes.bool,disableFocusRipple:PropTypes.bool,disableRipple:PropTypes.bool,onChange:PropTypes.func,onClick:PropTypes.func,selected:PropTypes.bool,size:PropTypes.oneOf(["large","medium","small"]),value:PropTypes.any.isRequired});export default withStyles(styles,{name:"MuiToggleButton"})(ToggleButton);