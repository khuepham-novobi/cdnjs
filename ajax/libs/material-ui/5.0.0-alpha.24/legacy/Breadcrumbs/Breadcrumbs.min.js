import _toConsumableArray from"@babel/runtime/helpers/esm/toConsumableArray";import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import _defineProperty from"@babel/runtime/helpers/esm/defineProperty";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{deepmerge}from"@material-ui/utils";import{unstable_composeClasses as composeClasses}from"@material-ui/unstyled";import experimentalStyled from"../styles/experimentalStyled";import useThemeProps from"../styles/useThemeProps";import Typography from"../Typography";import BreadcrumbCollapsed from"./BreadcrumbCollapsed";import breadcrumbsClasses,{getBreadcrumbsUtilityClass}from"./breadcrumbsClasses";var overridesResolver=function(e,r){var t;return deepmerge(r.root||{},(_defineProperty(t={},"& .".concat(breadcrumbsClasses.ol),r.ol),_defineProperty(t,"& .".concat(breadcrumbsClasses.li),r.li),_defineProperty(t,"& .".concat(breadcrumbsClasses.separator),r.separator),t))},useUtilityClasses=function(e){var r=e.classes;return composeClasses({root:["root"],li:["li"],ol:["ol"],separator:["separator"]},getBreadcrumbsUtilityClass,r)},BreadcrumbsRoot=experimentalStyled(Typography,{},{name:"MuiBreadcrumbs",slot:"Root",overridesResolver:overridesResolver})({}),BreadcrumbsOl=experimentalStyled("ol",{},{name:"MuiBreadcrumbs",slot:"Ol"})({display:"flex",flexWrap:"wrap",alignItems:"center",padding:0,margin:0,listStyle:"none"}),BreadcrumbsSeparator=experimentalStyled("li",{},{name:"MuiBreadcrumbs",slot:"Separator"})({display:"flex",userSelect:"none",marginLeft:8,marginRight:8});function insertSeparators(e,r,t,o){return e.reduce(function(s,a,l){return l<e.length-1?s=s.concat(a,React.createElement(BreadcrumbsSeparator,{"aria-hidden":!0,key:"separator-".concat(l),className:r,styleProps:o},t)):s.push(a),s},[])}var Breadcrumbs=React.forwardRef(function(e,r){var t=useThemeProps({props:e,name:"MuiBreadcrumbs"}),o=t.children,s=t.className,a=t.component,l=void 0===a?"nav":a,n=t.expandText,p=void 0===n?"Show path":n,m=t.itemsAfterCollapse,i=void 0===m?1:m,c=t.itemsBeforeCollapse,d=void 0===c?1:c,u=t.maxItems,b=void 0===u?8:u,y=t.separator,f=void 0===y?"/":y,h=_objectWithoutProperties(t,["children","className","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","separator"]),x=React.useState(!1),C=x[0],v=x[1],B=_extends({},t,{component:l,expanded:C,expandText:p,itemsAfterCollapse:i,itemsBeforeCollapse:d,maxItems:b,separator:f}),P=useUtilityClasses(B),g=React.useRef(null),T=React.Children.toArray(o).filter(function(e){return"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),React.isValidElement(e)}).map(function(e,r){return React.createElement("li",{className:P.li,key:"child-".concat(r)},e)});return React.createElement(BreadcrumbsRoot,_extends({ref:r,component:l,color:"textSecondary",className:clsx(P.root,s),styleProps:B},h),React.createElement(BreadcrumbsOl,{className:P.ol,ref:g,styleProps:B},insertSeparators(C||b&&T.length<=b?T:function(e){return d+i>=e.length?("production"!==process.env.NODE_ENV&&console.error(["Material-UI: You have provided an invalid combination of props to the Breadcrumbs.","itemsAfterCollapse={".concat(i,"} + itemsBeforeCollapse={").concat(d,"} >= maxItems={").concat(b,"}")].join("\n")),e):[].concat(_toConsumableArray(e.slice(0,d)),[React.createElement(BreadcrumbCollapsed,{"aria-label":p,key:"ellipsis",onClick:function(){v(!0);var e=g.current.querySelector("a[href],button,[tabindex]");e&&e.focus()}})],_toConsumableArray(e.slice(e.length-i,e.length)))}(T),P.separator,f,B)))});"production"!==process.env.NODE_ENV&&(Breadcrumbs.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,component:PropTypes.elementType,expandText:PropTypes.string,itemsAfterCollapse:PropTypes.number,itemsBeforeCollapse:PropTypes.number,maxItems:PropTypes.number,separator:PropTypes.node,sx:PropTypes.object});export default Breadcrumbs;