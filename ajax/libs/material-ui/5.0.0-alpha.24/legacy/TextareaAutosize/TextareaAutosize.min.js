import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import debounce from"../utils/debounce";import useForkRef from"../utils/useForkRef";import useEnhancedEffect from"../utils/useEnhancedEffect";import ownerWindow from"../utils/ownerWindow";function getStyleValue(e,t){return parseInt(e[t],10)||0}var styles={shadow:{visibility:"hidden",position:"absolute",overflow:"hidden",height:0,top:0,left:0,transform:"translateZ(0)"}},TextareaAutosize=React.forwardRef(function(e,t){var r=e.onChange,o=e.maxRows,n=e.minRows,a=void 0===n?1:n,s=e.style,i=e.value,u=_objectWithoutProperties(e,["onChange","maxRows","minRows","style","value"]),l=React.useRef(null!=i).current,p=React.useRef(null),c=useForkRef(t,p),f=React.useRef(null),d=React.useRef(0),m=React.useState({}),y=m[0],h=m[1],b=React.useCallback(function(){var t=p.current,r=ownerWindow(t).getComputedStyle(t);if("0px"!==r.width){var n=f.current;n.style.width=r.width,n.value=t.value||e.placeholder||"x","\n"===n.value.slice(-1)&&(n.value+=" ");var s=r["box-sizing"],i=getStyleValue(r,"padding-bottom")+getStyleValue(r,"padding-top"),u=getStyleValue(r,"border-bottom-width")+getStyleValue(r,"border-top-width"),l=n.scrollHeight-i;n.value="x";var c=n.scrollHeight-i,m=l;a&&(m=Math.max(Number(a)*c,m)),o&&(m=Math.min(Number(o)*c,m));var y=(m=Math.max(m,c))+("border-box"===s?i+u:0),b=Math.abs(m-l)<=1;h(function(e){return d.current<20&&(y>0&&Math.abs((e.outerHeightStyle||0)-y)>1||e.overflow!==b)?(d.current+=1,{overflow:b,outerHeightStyle:y}):("production"!==process.env.NODE_ENV&&20===d.current&&console.error(["Material-UI: Too many re-renders. The layout is unstable.","TextareaAutosize limits the number of renders to prevent an infinite loop."].join("\n")),e)})}},[o,a,e.placeholder]);React.useEffect(function(){var e=debounce(function(){d.current=0,b()}),t=ownerWindow(p.current);return t.addEventListener("resize",e),function(){e.clear(),t.removeEventListener("resize",e)}},[b]),useEnhancedEffect(function(){b()}),React.useEffect(function(){d.current=0},[i]);return React.createElement(React.Fragment,null,React.createElement("textarea",_extends({value:i,onChange:function(e){d.current=0,l||b(),r&&r(e)},ref:c,rows:a,style:_extends({height:y.outerHeightStyle,overflow:y.overflow?"hidden":null},s)},u)),React.createElement("textarea",{"aria-hidden":!0,className:e.className,readOnly:!0,ref:f,tabIndex:-1,style:_extends({},styles.shadow,s)}))});"production"!==process.env.NODE_ENV&&(TextareaAutosize.propTypes={className:PropTypes.string,maxRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),minRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),onChange:PropTypes.func,placeholder:PropTypes.string,style:PropTypes.object,value:PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string),PropTypes.number,PropTypes.string])});export default TextareaAutosize;