import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import{isFragment}from"react-is";import clsx from"clsx";import{chainPropTypes}from"@material-ui/utils";import{withStyles}from"../styles";import Avatar from"../Avatar";const SPACINGS={small:-16,medium:null};export const styles=e=>({root:{display:"flex",flexDirection:"row-reverse"},avatar:{border:`2px solid ${e.palette.background.default}`,boxSizing:"content-box",marginLeft:-8,"&:last-child":{marginLeft:0}}});const AvatarGroup=React.forwardRef(function(e,r){const{children:a,classes:t,className:o,max:s=5,spacing:i="medium",variant:n="circular"}=e,p=_objectWithoutPropertiesLoose(e,["children","classes","className","max","spacing","variant"]),l=s<2?2:s,c=React.Children.toArray(a).filter(e=>("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),React.isValidElement(e))),m=c.length>l?c.length-l+1:0,d=i&&void 0!==SPACINGS[i]?SPACINGS[i]:-i;return React.createElement("div",_extends({className:clsx(t.root,o),ref:r},p),m?React.createElement(Avatar,{className:t.avatar,style:{marginLeft:d},variant:n},"+",m):null,c.slice(0,c.length-m).reverse().map(e=>React.cloneElement(e,{className:clsx(e.props.className,t.avatar),style:_extends({marginLeft:d},e.props.style),variant:e.props.variant||n})))});"production"!==process.env.NODE_ENV&&(AvatarGroup.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,max:chainPropTypes(PropTypes.number,e=>{if(e.max<2)throw new Error(["Material-UI: The prop `max` should be equal to 2 or above.","A value below is clamped to 2."].join("\n"))}),spacing:PropTypes.oneOfType([PropTypes.oneOf(["medium","small"]),PropTypes.number]),variant:PropTypes.oneOfType([PropTypes.oneOf(["circular","rounded","square"]),PropTypes.string])});export default withStyles(styles,{name:"MuiAvatarGroup"})(AvatarGroup);