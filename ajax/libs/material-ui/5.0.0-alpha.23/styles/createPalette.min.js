import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import{formatMuiErrorMessage as _formatMuiErrorMessage}from"@material-ui/utils";import{deepmerge}from"@material-ui/utils";import common from"../colors/common";import grey from"../colors/grey";import indigo from"../colors/indigo";import pink from"../colors/pink";import red from"../colors/red";import orange from"../colors/orange";import blue from"../colors/blue";import green from"../colors/green";import{darken,getContrastRatio,lighten}from"./colorManipulator";export const light={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.54)",disabled:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:common.white,default:grey[50]},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}};export const dark={text:{primary:common.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:grey[800],default:"#303030"},action:{active:common.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function addLightOrDark(r,e,o,t){const a=t.light||t,i=t.dark||1.5*t;r[e]||(r.hasOwnProperty(o)?r[e]=r[o]:"light"===e?r.light=lighten(r.main,a):"dark"===e&&(r.dark=darken(r.main,i)))}export default function createPalette(r){const{primary:e={light:indigo[300],main:indigo[500],dark:indigo[700]},secondary:o={light:pink.A200,main:pink.A400,dark:pink.A700},error:t={light:red[300],main:red[500],dark:red[700]},warning:a={light:orange[300],main:orange[500],dark:orange[700]},info:i={light:blue[300],main:blue[500],dark:blue[700]},success:n={light:green[300],main:green[500],dark:green[700]},mode:s="light",contrastThreshold:c=3,tonalOffset:d=.2}=r,m=_objectWithoutPropertiesLoose(r,["primary","secondary","error","warning","info","success","mode","contrastThreshold","tonalOffset"]);function l(r){const e=getContrastRatio(r,dark.text.primary)>=c?dark.text.primary:light.text.primary;if("production"!==process.env.NODE_ENV){const o=getContrastRatio(r,e);o<3&&console.error([`Material-UI: The contrast ratio of ${o}:1 for ${e} on ${r}`,"falls below the WCAG recommended absolute minimum contrast ratio of 3:1.","https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join("\n"))}return e}const g=({color:r,name:e,mainShade:o=500,lightShade:t=300,darkShade:a=700})=>{if(!(r=_extends({},r)).main&&r[o]&&(r.main=r[o]),!r.hasOwnProperty("main"))throw new Error("production"!==process.env.NODE_ENV?`Material-UI: The color${e?` (${e})`:""} provided to augmentColor(color) is invalid.\nThe color object needs to have a \`main\` property or a \`${o}\` property.`:_formatMuiErrorMessage(11,e?` (${e})`:"",o));if("string"!=typeof r.main)throw new Error("production"!==process.env.NODE_ENV?`Material-UI: The color${e?` (${e})`:""} provided to augmentColor(color) is invalid.\n\`color.main\` should be a string, but \`${JSON.stringify(r.main)}\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from "@material-ui/core/colors";\n\nconst theme1 = createMuiTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createMuiTheme({ palette: {\n  primary: { main: green[500] },\n} });`:_formatMuiErrorMessage(12,e?` (${e})`:"",JSON.stringify(r.main)));return addLightOrDark(r,"light",t,d),addLightOrDark(r,"dark",a,d),r.contrastText||(r.contrastText=l(r.main)),r},p={dark:dark,light:light};return"production"!==process.env.NODE_ENV&&(p[s]||console.error(`Material-UI: The palette mode \`${s}\` is not supported.`)),deepmerge(_extends({common:common,mode:s,primary:g({color:e,name:"primary"}),secondary:g({color:o,name:"secondary",mainShade:"A400",lightShade:"A200",darkShade:"A700"}),error:g({color:t,name:"error"}),warning:g({color:a,name:"warning"}),info:g({color:i,name:"info"}),success:g({color:n,name:"succes"}),grey:grey,contrastThreshold:c,getContrastText:l,augmentColor:g,tonalOffset:d},p[s]),m)};