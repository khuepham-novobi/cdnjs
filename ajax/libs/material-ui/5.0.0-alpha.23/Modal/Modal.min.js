import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import PropTypes from"prop-types";import{getThemeProps,useTheme}from"@material-ui/styles";import{elementAcceptingRef,HTMLElementType}from"@material-ui/utils";import ownerDocument from"../utils/ownerDocument";import Portal from"../Portal";import createChainedFunction from"../utils/createChainedFunction";import useForkRef from"../utils/useForkRef";import useEventCallback from"../utils/useEventCallback";import zIndex from"../styles/zIndex";import ModalManager,{ariaHidden}from"./ModalManager";import TrapFocus from"../Unstable_TrapFocus";import SimpleBackdrop from"./SimpleBackdrop";function getContainer(e){return"function"==typeof e?e():e}function getHasTransition(e){return!!e.children&&e.children.props.hasOwnProperty("in")}const defaultManager=new ModalManager;export const styles=e=>({root:{position:"fixed",zIndex:e.zIndex.modal,right:0,bottom:0,top:0,left:0},hidden:{visibility:"hidden"}});const Modal=React.forwardRef(function(e,o){const r=useTheme(),t=getThemeProps({name:"MuiModal",props:_extends({},e),theme:r}),{BackdropComponent:n=SimpleBackdrop,BackdropProps:s,children:a,closeAfterTransition:c=!1,container:p,disableAutoFocus:l=!1,disableEnforceFocus:i=!1,disableEscapeKeyDown:d=!1,disablePortal:u=!1,disableRestoreFocus:m=!1,disableScrollLock:b=!1,hideBackdrop:f=!1,keepMounted:y=!1,manager:T=defaultManager,onBackdropClick:k,onClose:P,onKeyDown:R,open:E}=t,h=_objectWithoutPropertiesLoose(t,["BackdropComponent","BackdropProps","children","closeAfterTransition","container","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","open"]),[C,F]=React.useState(!0),g=React.useRef({}),x=React.useRef(null),M=React.useRef(null),B=useForkRef(M,o),w=getHasTransition(t),D=()=>ownerDocument(x.current),v=()=>(g.current.modalRef=M.current,g.current.mountNode=x.current,g.current),A=()=>{T.mount(v(),{disableScrollLock:b}),M.current.scrollTop=0},I=useEventCallback(()=>{const e=getContainer(p)||D().body;T.add(v(),e),M.current&&A()}),L=React.useCallback(()=>T.isTopModal(v()),[T]),_=useEventCallback(e=>{x.current=e,e&&(E&&L()?A():ariaHidden(M.current,!0))}),K=React.useCallback(()=>{T.remove(v())},[T]);if(React.useEffect(()=>()=>{K()},[K]),React.useEffect(()=>{E?I():w&&c||K()},[E,K,w,c,I]),!y&&!E&&(!w||C))return null;const S=()=>{F(!1)},z=()=>{F(!0),c&&K()},H=styles(r||{zIndex:zIndex}),j={};return void 0===a.props.tabIndex&&(j.tabIndex=a.props.tabIndex||"-1"),w&&(j.onEnter=createChainedFunction(S,a.props.onEnter),j.onExited=createChainedFunction(z,a.props.onExited)),React.createElement(Portal,{ref:_,container:p,disablePortal:u},React.createElement("div",_extends({ref:B,onKeyDown:e=>{R&&R(e),"Escape"===e.key&&L()&&(d||(e.stopPropagation(),P&&P(e,"escapeKeyDown")))},role:"presentation"},h,{style:_extends({},H.root,!E&&C?H.hidden:{},h.style)}),f?null:React.createElement(n,_extends({open:E,onClick:e=>{e.target===e.currentTarget&&(k&&k(e),P&&P(e,"backdropClick"))}},s)),React.createElement(TrapFocus,{disableEnforceFocus:i,disableAutoFocus:l,disableRestoreFocus:m,getDoc:D,isEnabled:L,open:E},React.cloneElement(a,j))))});"production"!==process.env.NODE_ENV&&(Modal.propTypes={BackdropComponent:PropTypes.elementType,BackdropProps:PropTypes.object,children:elementAcceptingRef.isRequired,closeAfterTransition:PropTypes.bool,container:PropTypes.oneOfType([HTMLElementType,PropTypes.func]),disableAutoFocus:PropTypes.bool,disableEnforceFocus:PropTypes.bool,disableEscapeKeyDown:PropTypes.bool,disablePortal:PropTypes.bool,disableRestoreFocus:PropTypes.bool,disableScrollLock:PropTypes.bool,hideBackdrop:PropTypes.bool,keepMounted:PropTypes.bool,onBackdropClick:PropTypes.func,onClose:PropTypes.func,onKeyDown:PropTypes.func,open:PropTypes.bool.isRequired,style:PropTypes.object});export default Modal;