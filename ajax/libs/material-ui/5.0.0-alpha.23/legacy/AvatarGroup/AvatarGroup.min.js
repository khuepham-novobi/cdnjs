import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import{isFragment}from"react-is";import clsx from"clsx";import{chainPropTypes}from"@material-ui/utils";import{withStyles}from"../styles";import Avatar from"../Avatar";var SPACINGS={small:-16,medium:null};export var styles=function(e){return{root:{display:"flex",flexDirection:"row-reverse"},avatar:{border:"2px solid ".concat(e.palette.background.default),boxSizing:"content-box",marginLeft:-8,"&:last-child":{marginLeft:0}}}};var AvatarGroup=React.forwardRef(function(e,r){var a=e.children,t=e.classes,o=e.className,s=e.max,i=void 0===s?5:s,n=e.spacing,p=void 0===n?"medium":n,l=e.variant,c=void 0===l?"circular":l,m=_objectWithoutProperties(e,["children","classes","className","max","spacing","variant"]),u=i<2?2:i,d=React.Children.toArray(a).filter(function(e){return"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),React.isValidElement(e)}),v=d.length>u?d.length-u+1:0,f=p&&void 0!==SPACINGS[p]?SPACINGS[p]:-p;return React.createElement("div",_extends({className:clsx(t.root,o),ref:r},m),v?React.createElement(Avatar,{className:t.avatar,style:{marginLeft:f},variant:c},"+",v):null,d.slice(0,d.length-v).reverse().map(function(e){return React.cloneElement(e,{className:clsx(e.props.className,t.avatar),style:_extends({marginLeft:f},e.props.style),variant:e.props.variant||c})}))});"production"!==process.env.NODE_ENV&&(AvatarGroup.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,max:chainPropTypes(PropTypes.number,function(e){if(e.max<2)throw new Error(["Material-UI: The prop `max` should be equal to 2 or above.","A value below is clamped to 2."].join("\n"))}),spacing:PropTypes.oneOfType([PropTypes.oneOf(["medium","small"]),PropTypes.number]),variant:PropTypes.oneOfType([PropTypes.oneOf(["circular","rounded","square"]),PropTypes.string])});export default withStyles(styles,{name:"MuiAvatarGroup"})(AvatarGroup);