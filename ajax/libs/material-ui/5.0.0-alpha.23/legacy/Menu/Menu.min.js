import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{HTMLElementType}from"@material-ui/utils";import withStyles from"../styles/withStyles";import Popover from"../Popover";import MenuList from"../MenuList";import setRef from"../utils/setRef";import useTheme from"../styles/useTheme";var RTL_ORIGIN={vertical:"top",horizontal:"right"},LTR_ORIGIN={vertical:"top",horizontal:"left"};export var styles={paper:{maxHeight:"calc(100% - 96px)",WebkitOverflowScrolling:"touch"},list:{outline:0}};var Menu=React.forwardRef(function(e,o){var r=e.autoFocus,t=void 0===r||r,s=e.children,n=e.classes,i=e.disableAutoFocusItem,p=void 0!==i&&i,a=e.MenuListProps,c=void 0===a?{}:a,l=e.onClose,u=e.open,m=e.PaperProps,P=void 0===m?{}:m,T=e.PopoverClasses,d=e.transitionDuration,f=void 0===d?"auto":d,y=e.variant,v=void 0===y?"selectedMenu":y,R=e.TransitionProps,b=(R=void 0===R?{}:R).onEntering,h=_objectWithoutProperties(R,["onEntering"]),I=_objectWithoutProperties(e,["autoFocus","children","classes","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","variant","TransitionProps"]),M=useTheme(),_=t&&!p&&u,x=React.useRef(null),E=React.useRef(null),O=-1;React.Children.map(s,function(e,o){React.isValidElement(e)&&("production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Menu component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n")),e.props.disabled||("menu"!==v&&e.props.selected?O=o:-1===O&&(O=o)))});var L=React.Children.map(s,function(e,o){return o===O?React.cloneElement(e,{ref:function(o){E.current=o,setRef(e.ref,o)}}):e});return React.createElement(Popover,_extends({getContentAnchorEl:function(){return E.current},classes:T,onClose:l,anchorOrigin:"rtl"===M.direction?RTL_ORIGIN:LTR_ORIGIN,transformOrigin:"rtl"===M.direction?RTL_ORIGIN:LTR_ORIGIN,PaperProps:_extends({},P,{classes:_extends({},P.classes,{root:n.paper})}),open:u,ref:o,transitionDuration:f,TransitionProps:_extends({onEntering:function(e,o){x.current&&x.current.adjustStyleForScrollbar(e,M),b&&b(e,o)}},h)},I),React.createElement(MenuList,_extends({onKeyDown:function(e){"Tab"===e.key&&(e.preventDefault(),l&&l(e,"tabKeyDown"))},actions:x,autoFocus:t&&(-1===O||p),autoFocusItem:_,variant:v},c,{className:clsx(n.list,c.className)}),L))});"production"!==process.env.NODE_ENV&&(Menu.propTypes={anchorEl:PropTypes.oneOfType([HTMLElementType,PropTypes.func]),autoFocus:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,disableAutoFocusItem:PropTypes.bool,MenuListProps:PropTypes.object,onClose:PropTypes.func,open:PropTypes.bool.isRequired,PaperProps:PropTypes.object,PopoverClasses:PropTypes.object,transitionDuration:PropTypes.oneOfType([PropTypes.oneOf(["auto"]),PropTypes.number,PropTypes.shape({appear:PropTypes.number,enter:PropTypes.number,exit:PropTypes.number})]),TransitionProps:PropTypes.object,variant:PropTypes.oneOf(["menu","selectedMenu"])});export default withStyles(styles,{name:"MuiMenu"})(Menu);