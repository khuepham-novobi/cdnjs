import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import _defineProperty from"@babel/runtime/helpers/esm/defineProperty";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import debounce from"../utils/debounce";import ownerWindow from"../utils/ownerWindow";import{getNormalizedScrollLeft,detectScrollType}from"../utils/scrollLeft";import animate from"../internal/animate";import ScrollbarSize from"./ScrollbarSize";import withStyles from"../styles/withStyles";import TabIndicator from"./TabIndicator";import TabScrollButton from"../TabScrollButton";import useEventCallback from"../utils/useEventCallback";import useTheme from"../styles/useTheme";export var styles=function(e){return{root:{overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},vertical:{flexDirection:"column"},flexContainer:{display:"flex"},flexContainerVertical:{flexDirection:"column"},centered:{justifyContent:"center"},scroller:{position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},fixed:{overflowX:"hidden",width:"100%"},scrollableX:{overflowX:"auto",overflowY:"hidden"},scrollableY:{overflowY:"auto",overflowX:"hidden"},hideScrollbar:{scrollbarWidth:"none","&::-webkit-scrollbar":{display:"none"}},scrollButtons:{},scrollButtonsHideMobile:_defineProperty({},e.breakpoints.down("sm"),{display:"none"}),indicator:{}}};var Tabs=React.forwardRef(function(e,t){var o=e["aria-label"],r=e["aria-labelledby"],l=e.action,n=e.centered,a=void 0!==n&&n,i=e.children,c=e.classes,s=e.className,d=e.component,u=void 0===d?"div":d,p=e.allowScrollButtonsMobile,f=void 0!==p&&p,b=e.indicatorColor,m=void 0===b?"secondary":b,v=e.onChange,h=e.orientation,y=void 0===h?"horizontal":h,T=e.ScrollButtonComponent,w=void 0===T?TabScrollButton:T,S=e.scrollButtons,g=void 0===S?"auto":S,x=e.selectionFollowsFocus,C=e.TabIndicatorProps,P=void 0===C?{}:C,E=e.TabScrollButtonProps,R=e.textColor,B=void 0===R?"inherit":R,N=e.value,W=e.variant,M=void 0===W?"standard":W,k=e.visibleScrollbar,_=void 0!==k&&k,L=_objectWithoutProperties(e,["aria-label","aria-labelledby","action","centered","children","classes","className","component","allowScrollButtonsMobile","indicatorColor","onChange","orientation","ScrollButtonComponent","scrollButtons","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar"]),z=useTheme(),I="scrollable"===M,F="rtl"===z.direction,j="vertical"===y,O=j?"scrollTop":"scrollLeft",A=j?"top":"left",D=j?"bottom":"right",H=j?"clientHeight":"clientWidth",V=j?"height":"width";"production"!==process.env.NODE_ENV&&a&&I&&console.error('Material-UI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');var X=React.useState(!1),Y=X[0],U=X[1],K=React.useState({}),q=K[0],G=K[1],J=React.useState({start:!1,end:!1}),Q=J[0],Z=J[1],$=React.useState({overflow:"hidden",scrollbarWidth:0}),ee=$[0],te=$[1],oe=new Map,re=React.useRef(null),le=React.useRef(null),ne=function(){var e,t,o=re.current;if(o){var r=o.getBoundingClientRect();e={clientWidth:o.clientWidth,scrollLeft:o.scrollLeft,scrollTop:o.scrollTop,scrollLeftNormalized:getNormalizedScrollLeft(o,z.direction),scrollWidth:o.scrollWidth,top:r.top,bottom:r.bottom,left:r.left,right:r.right}}if(o&&!1!==N){var l=le.current.children;if(l.length>0){var n=l[oe.get(N)];"production"!==process.env.NODE_ENV&&(n||console.error(["Material-UI: The value provided to the Tabs component is invalid.","None of the Tabs' children match with `".concat(N,"`."),oe.keys?"You can provide one of the following values: ".concat(Array.from(oe.keys()).join(", "),"."):null].join("\n"))),t=n?n.getBoundingClientRect():null}}return{tabsMeta:e,tabMeta:t}},ae=useEventCallback(function(){var e,t=ne(),o=t.tabsMeta,r=t.tabMeta,l=0;if(r&&o)if(j)l=r.top-o.top+o.scrollTop;else{var n=F?o.scrollLeftNormalized+o.clientWidth-o.scrollWidth:o.scrollLeft;l=r.left-o.left+n}var a=(_defineProperty(e={},A,l),_defineProperty(e,V,r?r[V]:0),e);if(isNaN(q[A])||isNaN(q[V]))G(a);else{var i=Math.abs(q[A]-a[A]),c=Math.abs(q[V]-a[V]);(i>=1||c>=1)&&G(a)}}),ie=function(e){animate(O,re.current,e)},ce=function(e){var t=re.current[O];j?t+=e:(t+=e*(F?-1:1),t*=F&&"reverse"===detectScrollType()?-1:1),ie(t)},se=function(){for(var e=re.current[H],t=0,o=Array.from(le.current.children),r=0;r<o.length;r+=1){var l=o[r];if(t+l[H]>e)break;t+=l[H]}return t},de=function(){ce(-1*se())},ue=function(){ce(se())},pe=React.useCallback(function(e){te({overflow:null,scrollbarWidth:e})},[]),fe=useEventCallback(function(){var e=ne(),t=e.tabsMeta,o=e.tabMeta;if(o&&t)if(o[A]<t[A]){var r=t[O]+(o[A]-t[A]);ie(r)}else if(o[D]>t[D]){var l=t[O]+(o[D]-t[D]);ie(l)}}),be=useEventCallback(function(){if(I&&!1!==g){var e,t,o=re.current,r=o.scrollTop,l=o.scrollHeight,n=o.clientHeight,a=o.scrollWidth,i=o.clientWidth;if(j)e=r>1,t=r<l-n-1;else{var c=getNormalizedScrollLeft(re.current,z.direction);e=F?c<a-i-1:c>1,t=F?c>1:c<a-i-1}e===Q.start&&t===Q.end||Z({start:e,end:t})}});React.useEffect(function(){var e=debounce(function(){ae(),be()}),t=ownerWindow(re.current);return t.addEventListener("resize",e),function(){e.clear(),t.removeEventListener("resize",e)}},[ae,be]);var me=React.useMemo(function(){return debounce(function(){be()})},[be]);React.useEffect(function(){return function(){me.clear()}},[me]),React.useEffect(function(){U(!0)},[]),React.useEffect(function(){ae(),be()}),React.useEffect(function(){fe()},[fe,q]),React.useImperativeHandle(l,function(){return{updateIndicator:ae,updateScrollButtons:be}},[ae,be]);var ve=React.createElement(TabIndicator,_extends({className:c.indicator,orientation:y,color:m},P,{style:_extends({},q,P.style)})),he=0,ye=React.Children.map(i,function(e){if(!React.isValidElement(e))return null;"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Tabs component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));var t=void 0===e.props.value?he:e.props.value;oe.set(t,he);var o=t===N;return he+=1,React.cloneElement(e,_extends({fullWidth:"fullWidth"===M,indicator:o&&!Y&&ve,selected:o,selectionFollowsFocus:x,onChange:v,textColor:B,value:t},1!==he||!1!==N||e.props.tabIndex?{}:{tabIndex:0}))}),Te=function(){var e={};e.scrollbarSizeListener=I?React.createElement(ScrollbarSize,{onChange:pe,className:clsx(c.scrollableX,c.hideScrollbar)}):null;var t=Q.start||Q.end,o=I&&("auto"===g&&t||!0===g);return e.scrollButtonStart=o?React.createElement(w,_extends({orientation:y,direction:F?"right":"left",onClick:de,disabled:!Q.start,className:clsx(c.scrollButtons,!f&&c.scrollButtonsHideMobile)},E)):null,e.scrollButtonEnd=o?React.createElement(w,_extends({orientation:y,direction:F?"left":"right",onClick:ue,disabled:!Q.end,className:clsx(c.scrollButtons,!f&&c.scrollButtonsHideMobile)},E)):null,e}();return React.createElement(u,_extends({className:clsx(c.root,s,j&&c.vertical),ref:t},L),Te.scrollButtonStart,Te.scrollbarSizeListener,React.createElement("div",{className:clsx(c.scroller,I?[j?c.scrollableY:c.scrollableX,!_&&c.hideScrollbar]:c.fixed),style:_defineProperty({overflow:ee.overflow},j?"margin".concat(F?"Left":"Right"):"marginBottom",_?void 0:-ee.scrollbarWidth),ref:re,onScroll:me},React.createElement("div",{"aria-label":o,"aria-labelledby":r,"aria-orientation":"vertical"===y?"vertical":null,className:clsx(c.flexContainer,j&&c.flexContainerVertical,a&&!I&&c.centered),onKeyDown:function(e){var t=e.target;if("tab"===t.getAttribute("role")){var o=null,r="vertical"!==y?"ArrowLeft":"ArrowUp",l="vertical"!==y?"ArrowRight":"ArrowDown";switch("vertical"!==y&&"rtl"===z.direction&&(r="ArrowRight",l="ArrowLeft"),e.key){case r:o=t.previousElementSibling||le.current.lastChild;break;case l:o=t.nextElementSibling||le.current.firstChild;break;case"Home":o=le.current.firstChild;break;case"End":o=le.current.lastChild}null!==o&&(o.focus(),e.preventDefault())}},ref:le,role:"tablist"},ye),Y&&ve),Te.scrollButtonEnd)});"production"!==process.env.NODE_ENV&&(Tabs.propTypes={action:refType,allowScrollButtonsMobile:PropTypes.bool,"aria-label":PropTypes.string,"aria-labelledby":PropTypes.string,centered:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,component:PropTypes.elementType,indicatorColor:PropTypes.oneOf(["primary","secondary"]),onChange:PropTypes.func,orientation:PropTypes.oneOf(["horizontal","vertical"]),ScrollButtonComponent:PropTypes.elementType,scrollButtons:PropTypes.oneOf(["auto",!1,!0]),selectionFollowsFocus:PropTypes.bool,TabIndicatorProps:PropTypes.object,TabScrollButtonProps:PropTypes.object,textColor:PropTypes.oneOf(["inherit","primary","secondary"]),value:PropTypes.any,variant:PropTypes.oneOf(["fullWidth","scrollable","standard"]),visibleScrollbar:PropTypes.bool});export default withStyles(styles,{name:"MuiTabs"})(Tabs);