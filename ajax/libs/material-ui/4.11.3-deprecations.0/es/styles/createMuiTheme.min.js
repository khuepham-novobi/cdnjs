import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import{deepmerge}from"@material-ui/utils";import createBreakpoints from"./createBreakpoints";import createMixins from"./createMixins";import createPalette from"./createPalette";import createTypography from"./createTypography";import shadows from"./shadows";import shape from"./shape";import createSpacing from"./createSpacing";import transitions from"./transitions";import zIndex from"./zIndex";function createMuiTheme(e={},...t){const{breakpoints:r={},mixins:o={},palette:i={},spacing:s,typography:a={}}=e,n=_objectWithoutPropertiesLoose(e,["breakpoints","mixins","palette","spacing","typography"]),p=createPalette(i),c=createBreakpoints(r),m=createSpacing(s);let d=deepmerge({breakpoints:c,direction:"ltr",mixins:createMixins(c,m,o),overrides:{},palette:p,props:{},shadows:shadows,typography:createTypography(p,a),spacing:m,shape:shape,transitions:transitions,zIndex:zIndex},n);if(d=t.reduce((e,t)=>deepmerge(e,t),d),"production"!==process.env.NODE_ENV){const e=["checked","disabled","error","focused","focusVisible","required","expanded","selected"],t=(r,o,i=1)=>{let s;for(s in r){const a=r[s];1===i?0===s.indexOf("Mui")&&a&&t(a,s,i+1):-1!==e.indexOf(s)&&Object.keys(a).length>0&&("production"!==process.env.NODE_ENV&&console.error([`Material-UI: The \`${o}\` component increases `+`the CSS specificity of the \`${s}\` internal state.`,"You can not override it like this: ",JSON.stringify(r,null,2),"","Instead, you need to use the $ruleName syntax:",JSON.stringify({root:{[`&$${s}`]:a}},null,2),"","https://material-ui.com/r/pseudo-classes-guide"].join("\n")),r[s]={})}};t(d.overrides)}return d}export default createMuiTheme;