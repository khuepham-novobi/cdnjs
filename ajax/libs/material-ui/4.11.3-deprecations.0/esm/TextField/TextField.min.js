import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import Input from"../Input";import FilledInput from"../FilledInput";import OutlinedInput from"../OutlinedInput";import InputLabel from"../InputLabel";import FormControl from"../FormControl";import FormHelperText from"../FormHelperText";import Select from"../Select";import withStyles from"../styles/withStyles";var variantComponent={standard:Input,filled:FilledInput,outlined:OutlinedInput};export var styles={root:{}};var TextField=React.forwardRef(function(e,o){var r=e.autoComplete,t=e.autoFocus,p=void 0!==t&&t,l=e.children,s=e.classes,n=e.className,i=e.color,a=void 0===i?"primary":i,d=e.defaultValue,u=e.disabled,m=void 0!==u&&u,c=e.error,y=void 0!==c&&c,T=e.FormHelperTextProps,P=e.fullWidth,b=void 0!==P&&P,f=e.helperText,h=e.hiddenLabel,v=e.id,x=e.InputLabelProps,F=e.inputProps,I=e.InputProps,w=e.inputRef,R=e.label,g=e.multiline,C=void 0!==g&&g,O=e.name,E=e.onBlur,L=e.onChange,_=e.onFocus,j=e.placeholder,S=e.required,N=void 0!==S&&S,W=e.rows,H=e.rowsMax,M=e.maxRows,V=e.select,q=void 0!==V&&V,B=e.SelectProps,k=e.type,D=e.value,z=e.variant,U=void 0===z?"standard":z,A=_objectWithoutProperties(e,["autoComplete","autoFocus","children","classes","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","label","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","rowsMax","maxRows","select","SelectProps","type","value","variant"]);"production"!==process.env.NODE_ENV&&q&&!l&&console.error("Material-UI: `children` must be passed when using the `TextField` component with `select`.");var G={};if("outlined"===U&&(x&&void 0!==x.shrink&&(G.notched=x.shrink),R)){var J,K=null!==(J=null==x?void 0:x.required)&&void 0!==J?J:N;G.label=React.createElement(React.Fragment,null,R,K&&"Â *")}q&&(B&&B.native||(G.id=void 0),G["aria-describedby"]=void 0);var Q=f&&v?"".concat(v,"-helper-text"):void 0,X=R&&v?"".concat(v,"-label"):void 0,Y=variantComponent[U],Z=React.createElement(Y,_extends({"aria-describedby":Q,autoComplete:r,autoFocus:p,defaultValue:d,fullWidth:b,multiline:C,name:O,rows:W,rowsMax:H,maxRows:M,type:k,value:D,id:v,inputRef:w,onBlur:E,onChange:L,onFocus:_,placeholder:j,inputProps:F},G,I));return React.createElement(FormControl,_extends({className:clsx(s.root,n),disabled:m,error:y,fullWidth:b,hiddenLabel:h,ref:o,required:N,color:a,variant:U},A),R&&React.createElement(InputLabel,_extends({htmlFor:v,id:X},x),R),q?React.createElement(Select,_extends({"aria-describedby":Q,id:v,labelId:X,value:D,input:Z},B),l):Z,f&&React.createElement(FormHelperText,_extends({id:Q},T),f))});"production"!==process.env.NODE_ENV&&(TextField.propTypes={autoComplete:PropTypes.string,autoFocus:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,color:PropTypes.oneOf(["primary","secondary"]),defaultValue:PropTypes.any,disabled:PropTypes.bool,error:PropTypes.bool,FormHelperTextProps:PropTypes.object,fullWidth:PropTypes.bool,helperText:PropTypes.node,hiddenLabel:PropTypes.bool,id:PropTypes.string,InputLabelProps:PropTypes.object,inputProps:PropTypes.object,InputProps:PropTypes.object,inputRef:refType,label:PropTypes.node,margin:PropTypes.oneOf(["dense","none","normal"]),maxRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),multiline:PropTypes.bool,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onFocus:PropTypes.func,placeholder:PropTypes.string,required:PropTypes.bool,rows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),rowsMax:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),select:PropTypes.bool,SelectProps:PropTypes.object,size:PropTypes.oneOf(["medium","small"]),type:PropTypes.string,value:PropTypes.any,variant:PropTypes.oneOf(["filled","outlined","standard"])});export default withStyles(styles,{name:"MuiTextField"})(TextField);