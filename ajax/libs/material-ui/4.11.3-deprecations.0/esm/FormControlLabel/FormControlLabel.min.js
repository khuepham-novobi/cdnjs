import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import{useFormControl}from"../FormControl";import withStyles from"../styles/withStyles";import Typography from"../Typography";import capitalize from"../utils/capitalize";export var styles=function(e){return{root:{display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,"&$disabled":{cursor:"default"}},labelPlacementStart:{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},labelPlacementTop:{flexDirection:"column-reverse",marginLeft:16},labelPlacementBottom:{flexDirection:"column",marginLeft:16},disabled:{},label:{"&$disabled":{color:e.palette.text.disabled}}}};var FormControlLabel=React.forwardRef(function(e,o){e.checked;var t=e.classes,r=e.className,l=e.control,a=e.disabled,s=(e.inputRef,e.label),i=e.labelPlacement,n=void 0===i?"end":i,p=(e.name,e.onChange,e.value,_objectWithoutProperties(e,["checked","classes","className","control","disabled","inputRef","label","labelPlacement","name","onChange","value"])),c=useFormControl(),m=a;void 0===m&&void 0!==l.props.disabled&&(m=l.props.disabled),void 0===m&&c&&(m=c.disabled);var d={disabled:m};return["checked","name","onChange","value","inputRef"].forEach(function(o){void 0===l.props[o]&&void 0!==e[o]&&(d[o]=e[o])}),React.createElement("label",_extends({className:clsx(t.root,r,"end"!==n&&t["labelPlacement".concat(capitalize(n))],m&&t.disabled),ref:o},p),React.cloneElement(l,d),React.createElement(Typography,{component:"span",className:clsx(t.label,m&&t.disabled)},s))});"production"!==process.env.NODE_ENV&&(FormControlLabel.propTypes={checked:PropTypes.bool,classes:PropTypes.object,className:PropTypes.string,control:PropTypes.element.isRequired,disabled:PropTypes.bool,inputRef:refType,label:PropTypes.node,labelPlacement:PropTypes.oneOf(["bottom","end","start","top"]),name:PropTypes.string,onChange:PropTypes.func,value:PropTypes.any});export default withStyles(styles,{name:"MuiFormControlLabel"})(FormControlLabel);