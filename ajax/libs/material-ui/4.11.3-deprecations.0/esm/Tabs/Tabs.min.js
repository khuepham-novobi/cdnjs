import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import _defineProperty from"@babel/runtime/helpers/esm/defineProperty";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import debounce from"../utils/debounce";import ownerWindow from"../utils/ownerWindow";import{getNormalizedScrollLeft,detectScrollType}from"../utils/scrollLeft";import animate from"../internal/animate";import ScrollbarSize from"./ScrollbarSize";import withStyles from"../styles/withStyles";import TabIndicator from"./TabIndicator";import TabScrollButton from"../TabScrollButton";import useEventCallback from"../utils/useEventCallback";import useTheme from"../styles/useTheme";export var styles=function(e){return{root:{overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},vertical:{flexDirection:"column"},flexContainer:{display:"flex"},flexContainerVertical:{flexDirection:"column"},centered:{justifyContent:"center"},scroller:{position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},fixed:{overflowX:"hidden",width:"100%"},scrollable:{overflowX:"scroll",scrollbarWidth:"none","&::-webkit-scrollbar":{display:"none"}},scrollButtons:{},scrollButtonsDesktop:_defineProperty({},e.breakpoints.down("xs"),{display:"none"}),indicator:{}}};var Tabs=React.forwardRef(function(e,t){var o=e["aria-label"],r=e["aria-labelledby"],l=e.action,n=e.centered,a=void 0!==n&&n,i=e.children,c=e.classes,s=e.className,u=e.component,d=void 0===u?"div":u,p=e.indicatorColor,f=void 0===p?"secondary":p,m=e.onChange,b=e.orientation,v=void 0===b?"horizontal":b,h=e.ScrollButtonComponent,y=void 0===h?TabScrollButton:h,T=e.scrollButtons,g=void 0===T?"auto":T,w=e.selectionFollowsFocus,C=e.TabIndicatorProps,S=void 0===C?{}:C,E=e.TabScrollButtonProps,x=e.textColor,P=void 0===x?"inherit":x,R=e.value,N=e.variant,B=void 0===N?"standard":N,k=_objectWithoutProperties(e,["aria-label","aria-labelledby","action","centered","children","classes","className","component","indicatorColor","onChange","orientation","ScrollButtonComponent","scrollButtons","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant"]),W=useTheme(),L="scrollable"===B,_="rtl"===W.direction,z="vertical"===v,M=z?"scrollTop":"scrollLeft",D=z?"top":"left",F=z?"bottom":"right",I=z?"clientHeight":"clientWidth",j=z?"height":"width";"production"!==process.env.NODE_ENV&&a&&L&&console.error('Material-UI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');var O=React.useState(!1),A=O[0],V=O[1],H=React.useState({}),U=H[0],X=H[1],Y=React.useState({start:!1,end:!1}),K=Y[0],q=Y[1],G=React.useState({overflow:"hidden",marginBottom:null}),J=G[0],Q=G[1],Z=new Map,$=React.useRef(null),ee=React.useRef(null),te=function(){var e,t,o=$.current;if(o){var r=o.getBoundingClientRect();e={clientWidth:o.clientWidth,scrollLeft:o.scrollLeft,scrollTop:o.scrollTop,scrollLeftNormalized:getNormalizedScrollLeft(o,W.direction),scrollWidth:o.scrollWidth,top:r.top,bottom:r.bottom,left:r.left,right:r.right}}if(o&&!1!==R){var l=ee.current.children;if(l.length>0){var n=l[Z.get(R)];"production"!==process.env.NODE_ENV&&(n||console.error(["Material-UI: The value provided to the Tabs component is invalid.","None of the Tabs' children match with `".concat(R,"`."),Z.keys?"You can provide one of the following values: ".concat(Array.from(Z.keys()).join(", "),"."):null].join("\n"))),t=n?n.getBoundingClientRect():null}}return{tabsMeta:e,tabMeta:t}},oe=useEventCallback(function(){var e,t=te(),o=t.tabsMeta,r=t.tabMeta,l=0;if(r&&o)if(z)l=r.top-o.top+o.scrollTop;else{var n=_?o.scrollLeftNormalized+o.clientWidth-o.scrollWidth:o.scrollLeft;l=r.left-o.left+n}var a=(_defineProperty(e={},D,l),_defineProperty(e,j,r?r[j]:0),e);if(isNaN(U[D])||isNaN(U[j]))X(a);else{var i=Math.abs(U[D]-a[D]),c=Math.abs(U[j]-a[j]);(i>=1||c>=1)&&X(a)}}),re=function(e){animate(M,$.current,e)},le=function(e){var t=$.current[M];z?t+=e:(t+=e*(_?-1:1),t*=_&&"reverse"===detectScrollType()?-1:1),re(t)},ne=function(){le(-$.current[I])},ae=function(){le($.current[I])},ie=React.useCallback(function(e){Q({overflow:null,marginBottom:-e})},[]),ce=useEventCallback(function(){var e=te(),t=e.tabsMeta,o=e.tabMeta;if(o&&t)if(o[D]<t[D]){var r=t[M]+(o[D]-t[D]);re(r)}else if(o[F]>t[F]){var l=t[M]+(o[F]-t[F]);re(l)}}),se=useEventCallback(function(){if(L&&"off"!==g){var e,t,o=$.current,r=o.scrollTop,l=o.scrollHeight,n=o.clientHeight,a=o.scrollWidth,i=o.clientWidth;if(z)e=r>1,t=r<l-n-1;else{var c=getNormalizedScrollLeft($.current,W.direction);e=_?c<a-i-1:c>1,t=_?c>1:c<a-i-1}e===K.start&&t===K.end||q({start:e,end:t})}});React.useEffect(function(){var e=debounce(function(){oe(),se()}),t=ownerWindow($.current);return t.addEventListener("resize",e),function(){e.clear(),t.removeEventListener("resize",e)}},[oe,se]);var ue=React.useCallback(debounce(function(){se()}));React.useEffect(function(){return function(){ue.clear()}},[ue]),React.useEffect(function(){V(!0)},[]),React.useEffect(function(){oe(),se()}),React.useEffect(function(){ce()},[ce,U]),React.useImperativeHandle(l,function(){return{updateIndicator:oe,updateScrollButtons:se}},[oe,se]);var de=React.createElement(TabIndicator,_extends({className:c.indicator,orientation:v,color:f},S,{style:_extends({},U,S.style)})),pe=0,fe=React.Children.map(i,function(e){if(!React.isValidElement(e))return null;"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Tabs component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));var t=void 0===e.props.value?pe:e.props.value;Z.set(t,pe);var o=t===R;return pe+=1,React.cloneElement(e,{fullWidth:"fullWidth"===B,indicator:o&&!A&&de,selected:o,selectionFollowsFocus:w,onChange:m,textColor:P,value:t})}),me=function(){var e={};e.scrollbarSizeListener=L?React.createElement(ScrollbarSize,{className:c.scrollable,onChange:ie}):null;var t=K.start||K.end,o=L&&("auto"===g&&t||"desktop"===g||"on"===g);return e.scrollButtonStart=o?React.createElement(y,_extends({orientation:v,direction:_?"right":"left",onClick:ne,disabled:!K.start,className:clsx(c.scrollButtons,"on"!==g&&c.scrollButtonsDesktop)},E)):null,e.scrollButtonEnd=o?React.createElement(y,_extends({orientation:v,direction:_?"left":"right",onClick:ae,disabled:!K.end,className:clsx(c.scrollButtons,"on"!==g&&c.scrollButtonsDesktop)},E)):null,e}();return React.createElement(d,_extends({className:clsx(c.root,s,z&&c.vertical),ref:t},k),me.scrollButtonStart,me.scrollbarSizeListener,React.createElement("div",{className:clsx(c.scroller,L?c.scrollable:c.fixed),style:J,ref:$,onScroll:ue},React.createElement("div",{"aria-label":o,"aria-labelledby":r,className:clsx(c.flexContainer,z&&c.flexContainerVertical,a&&!L&&c.centered),onKeyDown:function(e){var t=e.target;if("tab"===t.getAttribute("role")){var o=null,r="vertical"!==v?"ArrowLeft":"ArrowUp",l="vertical"!==v?"ArrowRight":"ArrowDown";switch("vertical"!==v&&"rtl"===W.direction&&(r="ArrowRight",l="ArrowLeft"),e.key){case r:o=t.previousElementSibling||ee.current.lastChild;break;case l:o=t.nextElementSibling||ee.current.firstChild;break;case"Home":o=ee.current.firstChild;break;case"End":o=ee.current.lastChild}null!==o&&(o.focus(),e.preventDefault())}},ref:ee,role:"tablist"},fe),A&&de),me.scrollButtonEnd)});"production"!==process.env.NODE_ENV&&(Tabs.propTypes={action:refType,"aria-label":PropTypes.string,"aria-labelledby":PropTypes.string,centered:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,component:PropTypes.elementType,indicatorColor:PropTypes.oneOf(["primary","secondary"]),onChange:PropTypes.func,orientation:PropTypes.oneOf(["horizontal","vertical"]),ScrollButtonComponent:PropTypes.elementType,scrollButtons:PropTypes.oneOf(["auto","desktop","off","on"]),selectionFollowsFocus:PropTypes.bool,TabIndicatorProps:PropTypes.object,TabScrollButtonProps:PropTypes.object,textColor:PropTypes.oneOf(["inherit","primary","secondary"]),value:PropTypes.any,variant:PropTypes.oneOf(["fullWidth","scrollable","standard"])});export default withStyles(styles,{name:"MuiTabs"})(Tabs);