"use strict";var nanoid=require("nanoid"),Debug=require("./Debug-a8010bfa.js"),redux=require("redux"),turnOrder=require("./turn-order-f57ce2a9.js"),reducer=require("./reducer-85e302af.js"),initialize=require("./initialize-5ffa8640.js");class ClientManager{constructor(){this.debugPanel=null,this.currentClient=null,this.clients=new Map,this.subscribers=new Map}register(t){this.clients.set(t,t),this.mountDebug(t),this.notifySubscribers()}unregister(t){if(this.clients.delete(t),this.currentClient===t){this.unmountDebug();for(const[t]of this.clients){if(this.debugPanel)break;this.mountDebug(t)}}this.notifySubscribers()}subscribe(t){const e=Symbol();return this.subscribers.set(e,t),t(this.getState()),()=>{this.subscribers.delete(e)}}switchPlayerID(t){if(this.currentClient.multiplayer)for(const[e]of this.clients)if(e.playerID===t&&!1!==e.debugOpt&&e.multiplayer===this.currentClient.multiplayer)return void this.switchToClient(e);this.currentClient.updatePlayerID(t),this.notifySubscribers()}switchToClient(t){t!==this.currentClient&&(this.unmountDebug(),this.mountDebug(t),this.notifySubscribers())}notifySubscribers(){const t=this.getState();this.subscribers.forEach(e=>{e(t)})}getState(){return{client:this.currentClient,debuggableClients:this.getDebuggableClients()}}getDebuggableClients(){return[...this.clients.values()].filter(t=>!1!==t.debugOpt)}mountDebug(t){if(!1===t.debugOpt||null!==this.debugPanel||"undefined"==typeof document)return;let e,s=document.body;"production"!==process.env.NODE_ENV&&(e=Debug.Debug),t.debugOpt&&!0!==t.debugOpt&&(e=t.debugOpt.impl||e,s=t.debugOpt.target||s),e&&(this.currentClient=t,this.debugPanel=new e({target:s,props:{clientManager:this}}))}unmountDebug(){this.debugPanel.$destroy(),this.debugPanel=null,this.currentClient=null}}const GlobalClientManager=new ClientManager;function assumedPlayerID(t,e,s){if(!s&&null==t){t=e.getState().ctx.currentPlayer}return t}function createDispatchers(t,e,s,i,r,a){return e.reduce((e,n)=>(e[n]=function(...e){s.dispatch(turnOrder.ActionCreators[t](n,e,assumedPlayerID(i,s,a),r))},e),{})}const createMoveDispatchers=createDispatchers.bind(null,"makeMove"),createEventDispatchers=createDispatchers.bind(null,"gameEvent"),createPluginDispatchers=createDispatchers.bind(null,"plugin");class _ClientImpl{constructor({game:t,debug:e,numPlayers:s,multiplayer:i,matchID:r,playerID:a,credentials:n,enhancer:h}){this.game=reducer.ProcessGameConfig(t),this.playerID=a,this.matchID=r,this.credentials=n,this.multiplayer=i,this.debugOpt=e,this.manager=GlobalClientManager,this.gameStateOverride=null,this.subscribers={},this._running=!1,this.reducer=reducer.CreateGameReducer({game:this.game,isClient:void 0!==i}),this.initialState=null,i||(this.initialState=initialize.InitializeGame({game:this.game,numPlayers:s})),this.reset=(()=>{this.store.dispatch(turnOrder.reset(this.initialState))}),this.undo=(()=>{const t=turnOrder.undo(assumedPlayerID(this.playerID,this.store,this.multiplayer),this.credentials);this.store.dispatch(t)}),this.redo=(()=>{const t=turnOrder.redo(assumedPlayerID(this.playerID,this.store,this.multiplayer),this.credentials);this.store.dispatch(t)}),this.log=[];const l=redux.applyMiddleware(()=>t=>e=>{const s=t(e);return this.notifySubscribers(),s},t=>e=>s=>{const i=t.getState(),r=e(s);return"clientOnly"in s||this.transport.onAction(i,s),r},t=>e=>s=>{const i=e(s),r=t.getState();switch(s.type){case turnOrder.MAKE_MOVE:case turnOrder.GAME_EVENT:case turnOrder.UNDO:case turnOrder.REDO:{const t=r.deltalog;this.log=[...this.log,...t];break}case turnOrder.RESET:this.log=[];break;case turnOrder.UPDATE:{let t=-1;this.log.length>0&&(t=this.log[this.log.length-1]._stateID);let e=s.deltalog||[];e=e.filter(e=>e._stateID>t),this.log=[...this.log,...e];break}case turnOrder.SYNC:this.initialState=s.initialState,this.log=s.log||[]}return i});h=void 0!==h?redux.compose(l,h):l,this.store=redux.createStore(this.reducer,this.initialState,h),this.transport={isConnected:!0,onAction:()=>{},subscribe:()=>{},subscribeMatchData:()=>{},subscribeChatMessage:()=>{},connect:()=>{},disconnect:()=>{},updateMatchID:()=>{},updatePlayerID:()=>{}},i&&(this.transport=i({gameKey:t,game:this.game,store:this.store,matchID:r,playerID:a,credentials:n,gameName:this.game.name,numPlayers:s})),this.createDispatchers(),this.transport.subscribeMatchData(t=>{this.matchData=t,this.notifySubscribers()}),this.transport.onChatMessage&&(this.chatMessages=[],this.sendChatMessage=(t=>{this.transport.onChatMessage(this.matchID,{id:nanoid.nanoid(7),sender:this.playerID,payload:t})}),this.transport.subscribeChatMessage(t=>{this.chatMessages=[...this.chatMessages,t],this.notifySubscribers()}))}notifySubscribers(){Object.values(this.subscribers).forEach(t=>t(this.getState()))}overrideGameState(t){this.gameStateOverride=t,this.notifySubscribers()}start(){this.transport.connect(),this._running=!0,this.manager.register(this)}stop(){this.transport.disconnect(),this._running=!1,this.manager.unregister(this)}subscribe(t){const e=Object.keys(this.subscribers).length;return this.subscribers[e]=t,this.transport.subscribe(()=>this.notifySubscribers()),!this._running&&this.multiplayer||t(this.getState()),()=>{delete this.subscribers[e]}}getInitialState(){return this.initialState}getState(){let t=this.store.getState();if(null!==this.gameStateOverride&&(t=this.gameStateOverride),null===t)return t;let e=!0;const s=this.game.flow.isPlayerActive(t.G,t.ctx,this.playerID);return this.multiplayer&&!s&&(e=!1),this.multiplayer||null===this.playerID||void 0===this.playerID||s||(e=!1),void 0!==t.ctx.gameover&&(e=!1),this.multiplayer||(t={...t,G:this.game.playerView(t.G,t.ctx,this.playerID),plugins:turnOrder.PlayerView(t,this)}),{...t,log:this.log,isActive:e,isConnected:this.transport.isConnected}}createDispatchers(){this.moves=createMoveDispatchers(this.game.moveNames,this.store,this.playerID,this.credentials,this.multiplayer),this.events=createEventDispatchers(this.game.flow.enabledEventNames,this.store,this.playerID,this.credentials,this.multiplayer),this.plugins=createPluginDispatchers(this.game.pluginNames,this.store,this.playerID,this.credentials,this.multiplayer)}updatePlayerID(t){this.playerID=t,this.createDispatchers(),this.transport.updatePlayerID(t),this.notifySubscribers()}updateMatchID(t){this.matchID=t,this.createDispatchers(),this.transport.updateMatchID(t),this.notifySubscribers()}updateCredentials(t){this.credentials=t,this.createDispatchers(),this.transport.updateCredentials(t),this.notifySubscribers()}}function Client(t){return new _ClientImpl(t)}exports.Client=Client;