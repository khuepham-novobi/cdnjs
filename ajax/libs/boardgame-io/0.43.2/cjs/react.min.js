"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0}),require("nanoid"),require("./Debug-a8010bfa.js"),require("redux"),require("./turn-order-f57ce2a9.js"),require("immer"),require("./reducer-85e302af.js"),require("./initialize-5ffa8640.js"),require("./transport-6284017b.js");var client=require("./client-46915fee.js");require("flatted");var ai=require("./ai-69af8a6d.js"),client$1=require("./client-ad905b04.js"),React=_interopDefault(require("react")),PropTypes=_interopDefault(require("prop-types")),Cookies=_interopDefault(require("react-cookies"));require("./base-3237f024.js");var LobbyPhases,socketio=require("./socketio-813c1f0d.js");function Client(e){var t;let{game:a,numPlayers:s,loading:n,board:r,multiplayer:i,enhancer:c,debug:o}=e;if(void 0===n){n=(()=>React.createElement("div",{className:"bgio-loading"},"connecting..."))}return(t=class extends React.Component{constructor(e){super(e),void 0===o&&(o=e.debug),this.client=client.Client({game:a,debug:o,numPlayers:s,multiplayer:i,matchID:e.matchID,playerID:e.playerID,credentials:e.credentials,enhancer:c})}componentDidMount(){this.unsubscribe=this.client.subscribe(()=>this.forceUpdate()),this.client.start()}componentWillUnmount(){this.client.stop(),this.unsubscribe()}componentDidUpdate(e){this.props.matchID!=e.matchID&&this.client.updateMatchID(this.props.matchID),this.props.playerID!=e.playerID&&this.client.updatePlayerID(this.props.playerID),this.props.credentials!=e.credentials&&this.client.updateCredentials(this.props.credentials)}render(){const e=this.client.getState();if(null===e)return React.createElement(n);let t=null;return r&&(t=React.createElement(r,{...e,...this.props,isMultiplayer:!!i,moves:this.client.moves,events:this.client.events,matchID:this.client.matchID,playerID:this.client.playerID,reset:this.client.reset,undo:this.client.undo,redo:this.client.redo,log:this.client.log,matchData:this.client.matchData,sendChatMessage:this.client.sendChatMessage,chatMessages:this.client.chatMessages})),React.createElement("div",{className:"bgio-client"},t)}}).propTypes={matchID:PropTypes.string,playerID:PropTypes.string,credentials:PropTypes.string,debug:PropTypes.any},t.defaultProps={matchID:"default",playerID:null,credentials:null,debug:!0},t}require("./master-1f1b6cfa.js"),require("socket.io-client");class _LobbyConnectionImpl{constructor({server:e,gameComponents:t,playerName:a,playerCredentials:s}){this.client=new client$1.LobbyClient({server:e}),this.gameComponents=t,this.playerName=a||"Visitor",this.playerCredentials=s,this.matches=[]}async refresh(){try{this.matches=[];const e=await this.client.listGames();for(const t of e){if(!this._getGameComponents(t))continue;const{matches:e}=await this.client.listMatches(t);this.matches=this.matches.concat(e)}}catch(e){throw new Error("failed to retrieve list of matches ("+e+")")}}_getMatchInstance(e){for(const t of this.matches)if(t.matchID===e)return t}_getGameComponents(e){for(const t of this.gameComponents)if(t.game.name===e)return t}_findPlayer(e){for(const t of this.matches)if(t.players.some(t=>t.name===e))return t}async join(e,t,a){try{let s=this._findPlayer(this.playerName);if(s)throw new Error("player has already joined "+s.matchID);if(!(s=this._getMatchInstance(t)))throw new Error("game instance "+t+" not found");const n=await this.client.joinMatch(e,t,{playerID:a,playerName:this.playerName});s.players[Number.parseInt(a)].name=this.playerName,this.playerCredentials=n.playerCredentials}catch(e){throw new Error("failed to join match "+t+" ("+e+")")}}async leave(e,t){try{const a=this._getMatchInstance(t);if(!a)throw new Error("match instance not found");for(const s of a.players)if(s.name===this.playerName)return await this.client.leaveMatch(e,t,{playerID:s.id.toString(),credentials:this.playerCredentials}),delete s.name,void delete this.playerCredentials;throw new Error("player not found in match")}catch(e){throw new Error("failed to leave match "+t+" ("+e+")")}}async disconnect(){const e=this._findPlayer(this.playerName);e&&await this.leave(e.gameName,e.matchID),this.matches=[],this.playerName="Visitor"}async create(e,t){try{const a=this._getGameComponents(e);if(!a)throw new Error("game not found");if(t<a.game.minPlayers||t>a.game.maxPlayers)throw new Error("invalid number of players "+t);await this.client.createMatch(e,{numPlayers:t})}catch(t){throw new Error("failed to create match for "+e+" ("+t+")")}}}function LobbyConnection(e){return new _LobbyConnectionImpl(e)}class LobbyLoginForm extends React.Component{constructor(){super(...arguments),this.state={playerName:this.props.playerName,nameErrorMsg:""},this.onClickEnter=(()=>{""!==this.state.playerName&&this.props.onEnter(this.state.playerName)}),this.onKeyPress=(e=>{"Enter"===e.key&&this.onClickEnter()}),this.onChangePlayerName=(e=>{const t=e.target.value.trim();this.setState({playerName:t,nameErrorMsg:t.length>0?"":"empty player name"})})}render(){return React.createElement("div",null,React.createElement("p",{className:"phase-title"},"Choose a player name:"),React.createElement("input",{type:"text",value:this.state.playerName,onChange:this.onChangePlayerName,onKeyPress:this.onKeyPress}),React.createElement("span",{className:"buttons"},React.createElement("button",{className:"buttons",onClick:this.onClickEnter},"Enter")),React.createElement("br",null),React.createElement("span",{className:"error-msg"},this.state.nameErrorMsg,React.createElement("br",null)))}}LobbyLoginForm.defaultProps={playerName:""};class LobbyMatchInstance extends React.Component{constructor(){super(...arguments),this._createSeat=(e=>e.name||"[free]"),this._createButtonJoin=((e,t)=>React.createElement("button",{key:"button-join-"+e.matchID,onClick:()=>this.props.onClickJoin(e.gameName,e.matchID,""+t)},"Join")),this._createButtonLeave=(e=>React.createElement("button",{key:"button-leave-"+e.matchID,onClick:()=>this.props.onClickLeave(e.gameName,e.matchID)},"Leave")),this._createButtonPlay=((e,t)=>React.createElement("button",{key:"button-play-"+e.matchID,onClick:()=>this.props.onClickPlay(e.gameName,{matchID:e.matchID,playerID:""+t,numPlayers:e.players.length})},"Play")),this._createButtonSpectate=(e=>React.createElement("button",{key:"button-spectate-"+e.matchID,onClick:()=>this.props.onClickPlay(e.gameName,{matchID:e.matchID,numPlayers:e.players.length})},"Spectate")),this._createInstanceButtons=(e=>{const t=e.players.find(e=>e.name===this.props.playerName),a=e.players.find(e=>!e.name);return t&&a?this._createButtonLeave(e):a?this._createButtonJoin(e,a.id):t?React.createElement("div",null,[this._createButtonPlay(e,t.id),this._createButtonLeave(e)]):this._createButtonSpectate(e)})}render(){const e=this.props.match;let t="OPEN";return e.players.find(e=>!e.name)||(t="RUNNING"),React.createElement("tr",{key:"line-"+e.matchID},React.createElement("td",{key:"cell-name-"+e.matchID},e.gameName),React.createElement("td",{key:"cell-status-"+e.matchID},t),React.createElement("td",{key:"cell-seats-"+e.matchID},e.players.map(this._createSeat).join(", ")),React.createElement("td",{key:"cell-buttons-"+e.matchID},this._createInstanceButtons(e)))}}class LobbyCreateMatchForm extends React.Component{constructor(e){super(e),this.state={selectedGame:0,numPlayers:2},this._createGameNameOption=((e,t)=>React.createElement("option",{key:"name-option-"+t,value:t},e.game.name)),this._createNumPlayersOption=(e=>React.createElement("option",{key:"num-option-"+e,value:e},e)),this._createNumPlayersRange=(e=>[...new Array(e.maxPlayers+1).keys()].slice(e.minPlayers)),this.onChangeNumPlayers=(e=>{this.setState({numPlayers:Number.parseInt(e.target.value)})}),this.onChangeSelectedGame=(e=>{const t=Number.parseInt(e.target.value);this.setState({selectedGame:t,numPlayers:this.props.games[t].game.minPlayers})}),this.onClickCreate=(()=>{this.props.createMatch(this.props.games[this.state.selectedGame].game.name,this.state.numPlayers)});for(const t of e.games){const e=t.game;e.minPlayers||(e.minPlayers=1),e.maxPlayers||(e.maxPlayers=4),console.assert(e.maxPlayers>=e.minPlayers)}this.state={selectedGame:0,numPlayers:e.games[0].game.minPlayers}}render(){return React.createElement("div",null,React.createElement("select",{value:this.state.selectedGame,onChange:e=>this.onChangeSelectedGame(e)},this.props.games.map(this._createGameNameOption)),React.createElement("span",null,"Players:"),React.createElement("select",{value:this.state.numPlayers,onChange:this.onChangeNumPlayers},this._createNumPlayersRange(this.props.games[this.state.selectedGame].game).map(this._createNumPlayersOption)),React.createElement("span",{className:"buttons"},React.createElement("button",{onClick:this.onClickCreate},"Create")))}}!function(e){e.ENTER="enter",e.PLAY="play",e.LIST="list"}(LobbyPhases||(LobbyPhases={}));class Lobby extends React.Component{constructor(e){super(e),this.state={phase:LobbyPhases.ENTER,playerName:"Visitor",runningMatch:null,errorMsg:"",credentialStore:{}},this._createConnection=(e=>{const t=this.state.playerName;this.connection=LobbyConnection({server:e.lobbyServer,gameComponents:e.gameComponents,playerName:t,playerCredentials:this.state.credentialStore[t]})}),this._updateCredentials=((e,t)=>{this.setState(a=>{const s=Object.assign({},a.credentialStore);return s[e]=t,{credentialStore:s}})}),this._updateConnection=(async()=>{await this.connection.refresh(),this.forceUpdate()}),this._enterLobby=(e=>{this.setState({playerName:e,phase:LobbyPhases.LIST})}),this._exitLobby=(async()=>{await this.connection.disconnect(),this.setState({phase:LobbyPhases.ENTER,errorMsg:""})}),this._createMatch=(async(e,t)=>{try{await this.connection.create(e,t),await this.connection.refresh(),this.setState({})}catch(e){this.setState({errorMsg:e.message})}}),this._joinMatch=(async(e,t,a)=>{try{await this.connection.join(e,t,a),await this.connection.refresh(),this._updateCredentials(this.connection.playerName,this.connection.playerCredentials)}catch(e){this.setState({errorMsg:e.message})}}),this._leaveMatch=(async(e,t)=>{try{await this.connection.leave(e,t),await this.connection.refresh(),this._updateCredentials(this.connection.playerName,this.connection.playerCredentials)}catch(e){this.setState({errorMsg:e.message})}}),this._startMatch=((e,t)=>{const a=this.connection._getGameComponents(e);if(!a)return void this.setState({errorMsg:"game "+e+" not supported"});let s=void 0;if(t.numPlayers>1&&(s=this.props.gameServer?socketio.SocketIO({server:this.props.gameServer}):socketio.SocketIO()),1==t.numPlayers){const e=a.game.maxPlayers,t={};for(let a=1;a<e;a++)t[a+""]=ai.MCTSBot;s=socketio.Local({bots:t})}const n={app:this.props.clientFactory({game:a.game,board:a.board,debug:this.props.debug,multiplayer:s}),matchID:t.matchID,playerID:t.numPlayers>1?t.playerID:"0",credentials:this.connection.playerCredentials};this.setState({phase:LobbyPhases.PLAY,runningMatch:n})}),this._exitMatch=(()=>{this.setState({phase:LobbyPhases.LIST,runningMatch:null})}),this._getPhaseVisibility=(e=>this.state.phase!==e?"hidden":"phase"),this.renderMatches=((e,t)=>e.map(e=>{const{matchID:a,gameName:s,players:n}=e;return React.createElement(LobbyMatchInstance,{key:"instance-"+a,match:{matchID:a,gameName:s,players:Object.values(n)},playerName:t,onClickJoin:this._joinMatch,onClickLeave:this._leaveMatch,onClickPlay:this._startMatch})})),this._createConnection(this.props),setInterval(this._updateConnection,this.props.refreshInterval)}componentDidMount(){const e=Cookies.load("lobbyState")||{};e.phase&&e.phase===LobbyPhases.PLAY&&(e.phase=LobbyPhases.LIST),this.setState({phase:e.phase||LobbyPhases.ENTER,playerName:e.playerName||"Visitor",credentialStore:e.credentialStore||{}})}componentDidUpdate(e,t){const a=this.state.playerName,s=this.state.credentialStore[a];if(t.phase!==this.state.phase||t.credentialStore[a]!==s||t.playerName!==a){this._createConnection(this.props),this._updateConnection();const e={phase:this.state.phase,playerName:a,credentialStore:this.state.credentialStore};Cookies.save("lobbyState",e,{path:"/"})}}render(){const{gameComponents:e,renderer:t}=this.props,{errorMsg:a,playerName:s,phase:n,runningMatch:r}=this.state;return t?t({errorMsg:a,gameComponents:e,matches:this.connection.matches,phase:n,playerName:s,runningMatch:r,handleEnterLobby:this._enterLobby,handleExitLobby:this._exitLobby,handleCreateMatch:this._createMatch,handleJoinMatch:this._joinMatch,handleLeaveMatch:this._leaveMatch,handleExitMatch:this._exitMatch,handleRefreshMatches:this._updateConnection,handleStartMatch:this._startMatch}):React.createElement("div",{id:"lobby-view",style:{padding:50}},React.createElement("div",{className:this._getPhaseVisibility(LobbyPhases.ENTER)},React.createElement(LobbyLoginForm,{key:s,playerName:s,onEnter:this._enterLobby})),React.createElement("div",{className:this._getPhaseVisibility(LobbyPhases.LIST)},React.createElement("p",null,"Welcome, ",s),React.createElement("div",{className:"phase-title",id:"match-creation"},React.createElement("span",null,"Create a match:"),React.createElement(LobbyCreateMatchForm,{games:e,createMatch:this._createMatch})),React.createElement("p",{className:"phase-title"},"Join a match:"),React.createElement("div",{id:"instances"},React.createElement("table",null,React.createElement("tbody",null,this.renderMatches(this.connection.matches,s))),React.createElement("span",{className:"error-msg"},a,React.createElement("br",null))),React.createElement("p",{className:"phase-title"},"Matches that become empty are automatically deleted.")),React.createElement("div",{className:this._getPhaseVisibility(LobbyPhases.PLAY)},r&&React.createElement(r.app,{matchID:r.matchID,playerID:r.playerID,credentials:r.credentials}),React.createElement("div",{className:"buttons",id:"match-exit"},React.createElement("button",{onClick:this._exitMatch},"Exit match"))),React.createElement("div",{className:"buttons",id:"lobby-exit"},React.createElement("button",{onClick:this._exitLobby},"Exit lobby")))}}Lobby.propTypes={gameComponents:PropTypes.array.isRequired,lobbyServer:PropTypes.string,gameServer:PropTypes.string,debug:PropTypes.bool,clientFactory:PropTypes.func,refreshInterval:PropTypes.number},Lobby.defaultProps={debug:!1,clientFactory:Client,refreshInterval:2e3},exports.Client=Client,exports.Lobby=Lobby;