const assertString=(e,t)=>{if(!e||"string"!=typeof e)throw new Error(`Expected ${t} string, got "${e}".`)},assertGameName=e=>assertString(e,"game name"),assertMatchID=e=>assertString(e,"match ID"),validateBody=(e,t)=>{if(!e)throw new Error(`Expected body, got “${e}”.`);for(const a in t){const s=t[a],r=e[a];if(typeof r!==s)throw new TypeError(`Expected body.${a} to be of type ${s}, got “${r}”.`)}};class LobbyClient{constructor({server:e=""}={}){this.server=e.replace(/\/$/,"")}async request(e,t){const a=await fetch(this.server+e,t);if(!a.ok)throw new Error(`HTTP status ${a.status}`);return a.json()}async post(e,t){let a={method:"post",body:JSON.stringify(t.body),headers:{"Content-Type":"application/json"}};return t.init&&(a={...a,...t.init,headers:{...a.headers,...t.init.headers}}),this.request(e,a)}async listGames(e){return this.request("/games",e)}async listMatches(e,t,a){assertGameName(e);let s="";if(t){const e=[],{isGameover:a,updatedBefore:r,updatedAfter:i}=t;void 0!==a&&e.push(`isGameover=${a}`),r&&e.push(`updatedBefore=${r}`),i&&e.push(`updatedAfter=${i}`),e.length>0&&(s="?"+e.join("&"))}return this.request(`/games/${e}${s}`,a)}async getMatch(e,t,a){return assertGameName(e),assertMatchID(t),this.request(`/games/${e}/${t}`,a)}async createMatch(e,t,a){return assertGameName(e),validateBody(t,{numPlayers:"number"}),this.post(`/games/${e}/create`,{body:t,init:a})}async joinMatch(e,t,a,s){return assertGameName(e),assertMatchID(t),validateBody(a,{playerID:"string",playerName:"string"}),this.post(`/games/${e}/${t}/join`,{body:a,init:s})}async leaveMatch(e,t,a,s){assertGameName(e),assertMatchID(t),validateBody(a,{playerID:"string",credentials:"string"}),await this.post(`/games/${e}/${t}/leave`,{body:a,init:s})}async updatePlayer(e,t,a,s){assertGameName(e),assertMatchID(t),validateBody(a,{playerID:"string",credentials:"string"}),await this.post(`/games/${e}/${t}/update`,{body:a,init:s})}async playAgain(e,t,a,s){return assertGameName(e),assertMatchID(t),validateBody(a,{playerID:"string",credentials:"string"}),this.post(`/games/${e}/${t}/playAgain`,{body:a,init:s})}}export{LobbyClient as L};